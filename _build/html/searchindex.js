Search.setIndex({"alltitles": {"1. Sampling according to a cortical magnification function": [[44, "1.-Sampling-according-to-a-cortical-magnification-function"]], "1. visualize sampling grids from different retinal sensors": [[45, "1.-visualize-sampling-grids-from-different-retinal-sensors"]], "1b. Variable foveation via variable cortical magnification": [[44, "1b.-Variable-foveation-via-variable-cortical-magnification"]], "2. Locally isotropic sampling of angles": [[44, "2.-Locally-isotropic-sampling-of-angles"]], "2. Use the RetinalTransform class to perform foveated sensing": [[45, "2.-Use-the-RetinalTransform-class-to-perform-foveated-sensing"]], "3. Fixating with a SaccadePolicy": [[45, "3.-Fixating-with-a-SaccadePolicy"]], "4. Interactive fixating": [[45, "4.-Interactive-fixating"]], "A biologically-inspired foveated interface for deep vision models": [[54, null], [55, null]], "API Reference": [[42, null]], "Basic Foveated Sensing": [[51, "basic-foveated-sensing"]], "Build foveated CNNs from basic building blocks": [[53, "build-foveated-cnns-from-basic-building-blocks"]], "Build foveated ViTs and initialize a state-of-the-art foveated DINOv3 model:": [[53, "build-foveated-vits-and-initialize-a-state-of-the-art-foveated-dinov3-model"]], "Building a complete SaccadeNet": [[46, "Building-a-complete-SaccadeNet"]], "Building an AlexNet-like KNN model": [[46, "Building-an-AlexNet-like-KNN-model"]], "Building foveated deep vision models based on kNN-convolution": [[46, null]], "Code diagram": [[53, "code-diagram"]], "Core API": [[42, null]], "Core Components": [[52, null]], "Examples": [[51, null]], "Explore foveated sampling from images": [[45, null]], "Explore the foveated sensor manifold and basic concepts": [[53, "explore-the-foveated-sensor-manifold-and-basic-concepts"]], "Foveated AlexNet-like CNN model": [[50, "Foveated-AlexNet-like-CNN-model"]], "Foveated ViT-S DINOv3": [[50, "Foveated-ViT-S-DINOv3"]], "Foveated ViTs and adapting pre-trained models (DINOv3)": [[47, null]], "Get activations from a foveated model": [[48, null]], "Getting Started": [[52, null]], "Immediately start working with pre-trained models": [[53, "immediately-start-working-with-pre-trained-models"]], "Learn how to do foveated sampling": [[53, "learn-how-to-do-foveated-sampling"]], "Load pre-trained models": [[50, null]], "Modules": [[0, null], [1, null], [21, null], [29, null]], "Notes:": [[41, "notes"], [41, "id3"]], "Now we can create some fake data and get activations.": [[48, "Now-we-can-create-some-fake-data-and-get-activations."]], "Now, let\u2019s visualize the fixations": [[45, "Now,-let's-visualize-the-fixations"]], "Parameters:": [[41, "parameters"], [41, "id1"]], "Pooling samplers for anti-aliasing": [[45, "Pooling-samplers-for-anti-aliasing"]], "Quickstart": [[53, null]], "Returns:": [[41, "returns"], [41, "id2"]], "Sensor manifold": [[44, "Sensor-manifold"]], "Sensor manifold explanation": [[44, null]], "Subpackages": [[0, null], [29, null], [42, null]], "Training a KNN-Convolutional Network": [[51, "training-a-knn-convolutional-network"]], "Using the trainer class": [[48, "Using-the-trainer-class"]], "Utilities & Tools": [[42, null], [52, null]], "Welcome to foveation\u2019s documentation!": [[52, null]], "foveation": [[43, null]], "foveation package": [[0, null]], "foveation.arch package": [[1, null]], "foveation.arch.alexnet": [[2, null]], "foveation.arch.architectures": [[3, null]], "foveation.arch.convnextv2": [[4, null]], "foveation.arch.dinov3": [[5, null]], "foveation.arch.knn": [[6, null]], "foveation.arch.knnalexnet": [[7, null]], "foveation.arch.knnconvnextv2": [[8, null]], "foveation.arch.knnresnet": [[9, null]], "foveation.arch.knnvit": [[10, null]], "foveation.arch.mlp": [[11, null]], "foveation.arch.norm": [[12, null]], "foveation.arch.polar": [[13, null]], "foveation.arch.resnet": [[14, null]], "foveation.arch.vit": [[15, null]], "foveation.arch.wrapper": [[16, null]], "foveation.demo": [[17, null]], "foveation.paths": [[18, null]], "foveation.probes": [[19, null]], "foveation.saccadenet": [[20, null]], "foveation.sensing package": [[21, null]], "foveation.sensing.coords": [[22, null]], "foveation.sensing.manifold": [[23, null]], "foveation.sensing.policies": [[24, null]], "foveation.sensing.retina": [[25, null]], "foveation.sensing.saliency": [[26, null]], "foveation.sensing.samplers": [[27, null]], "foveation.trainer": [[28, null]], "foveation.utils package": [[29, null]], "foveation.utils.fastaugs package": [[30, null]], "foveation.utils.fastaugs.functional": [[31, null]], "foveation.utils.fastaugs.functional_tensor": [[32, null]], "foveation.utils.fastaugs.loader": [[33, null]], "foveation.utils.fastaugs.transforms": [[34, null]], "foveation.utils.flops": [[35, null]], "foveation.utils.knnprobe": [[36, null]], "foveation.utils.lora": [[37, null]], "foveation.utils.losses": [[38, null]], "foveation.utils.lr_scheduling": [[39, null]], "foveation.utils.std_transforms": [[40, null]], "foveation.visualizer": [[41, null]], "load a pre-trained Foveated DINOv3": [[47, "load-a-pre-trained-Foveated-DINOv3"]], "load a pre-trained model": [[46, "load-a-pre-trained-model"]], "probably going to remove this": [[49, null]], "\ud83c\udfdb\ufe0f Citation": [[54, "citation"], [55, "citation"]], "\ud83d\udcda Documentation": [[54, "documentation"], [55, "documentation"]], "\ud83d\udcdd Example notebooks": [[54, "example-notebooks"], [55, "example-notebooks"]], "\ud83d\udee0\ufe0f Install": [[54, "install"], [55, "install"]]}, "docnames": ["api/foveation", "api/foveation.arch", "api/foveation.arch.alexnet", "api/foveation.arch.architectures", "api/foveation.arch.convnextv2", "api/foveation.arch.dinov3", "api/foveation.arch.knn", "api/foveation.arch.knnalexnet", "api/foveation.arch.knnconvnextv2", "api/foveation.arch.knnresnet", "api/foveation.arch.knnvit", "api/foveation.arch.mlp", "api/foveation.arch.norm", "api/foveation.arch.polar", "api/foveation.arch.resnet", "api/foveation.arch.vit", "api/foveation.arch.wrapper", "api/foveation.demo", "api/foveation.paths", "api/foveation.probes", "api/foveation.saccadenet", "api/foveation.sensing", "api/foveation.sensing.coords", "api/foveation.sensing.manifold", "api/foveation.sensing.policies", "api/foveation.sensing.retina", "api/foveation.sensing.saliency", "api/foveation.sensing.samplers", "api/foveation.trainer", "api/foveation.utils", "api/foveation.utils.fastaugs", "api/foveation.utils.fastaugs.functional", "api/foveation.utils.fastaugs.functional_tensor", "api/foveation.utils.fastaugs.loader", "api/foveation.utils.fastaugs.transforms", "api/foveation.utils.flops", "api/foveation.utils.knnprobe", "api/foveation.utils.lora", "api/foveation.utils.losses", "api/foveation.utils.lr_scheduling", "api/foveation.utils.std_transforms", "api/foveation.visualizer", "api/index", "api/modules", "api/step0_sensor_manifold", "api/step1_sampling", "api/step2_knnconv", "api/step3_dinov3", "api/test_acts", "api/tmp", "api/workshop", "examples", "index", "quickstart", "read_me", "readme"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api/foveation.rst", "api/foveation.arch.rst", "api/foveation.arch.alexnet.rst", "api/foveation.arch.architectures.rst", "api/foveation.arch.convnextv2.rst", "api/foveation.arch.dinov3.rst", "api/foveation.arch.knn.rst", "api/foveation.arch.knnalexnet.rst", "api/foveation.arch.knnconvnextv2.rst", "api/foveation.arch.knnresnet.rst", "api/foveation.arch.knnvit.rst", "api/foveation.arch.mlp.rst", "api/foveation.arch.norm.rst", "api/foveation.arch.polar.rst", "api/foveation.arch.resnet.rst", "api/foveation.arch.vit.rst", "api/foveation.arch.wrapper.rst", "api/foveation.demo.rst", "api/foveation.paths.rst", "api/foveation.probes.rst", "api/foveation.saccadenet.rst", "api/foveation.sensing.rst", "api/foveation.sensing.coords.rst", "api/foveation.sensing.manifold.rst", "api/foveation.sensing.policies.rst", "api/foveation.sensing.retina.rst", "api/foveation.sensing.saliency.rst", "api/foveation.sensing.samplers.rst", "api/foveation.trainer.rst", "api/foveation.utils.rst", "api/foveation.utils.fastaugs.rst", "api/foveation.utils.fastaugs.functional.rst", "api/foveation.utils.fastaugs.functional_tensor.rst", "api/foveation.utils.fastaugs.loader.rst", "api/foveation.utils.fastaugs.transforms.rst", "api/foveation.utils.flops.rst", "api/foveation.utils.knnprobe.rst", "api/foveation.utils.lora.rst", "api/foveation.utils.losses.rst", "api/foveation.utils.lr_scheduling.rst", "api/foveation.utils.std_transforms.rst", "api/foveation.visualizer.rst", "api/index.rst", "api/modules.rst", "api/step0_sensor_manifold.ipynb", "api/step1_sampling.ipynb", "api/step2_knnconv.ipynb", "api/step3_dinov3.ipynb", "api/test_acts.ipynb", "api/tmp.ipynb", "api/workshop.ipynb", "examples.rst", "index.rst", "quickstart.rst", "read_me.rst", "readme.rst"], "indexentries": {"__init__() (foveation.arch.alexnet.convblock method)": [[2, "foveation.arch.alexnet.ConvBlock.__init__", false]], "__init__() (foveation.arch.convnextv2.block method)": [[4, "foveation.arch.convnextv2.Block.__init__", false]], "__init__() (foveation.arch.convnextv2.convnextv2 method)": [[4, "foveation.arch.convnextv2.ConvNeXtV2.__init__", false]], "__init__() (foveation.arch.convnextv2.grn method)": [[4, "foveation.arch.convnextv2.GRN.__init__", false]], "__init__() (foveation.arch.convnextv2.layernorm method)": [[4, "foveation.arch.convnextv2.LayerNorm.__init__", false]], "__init__() (foveation.arch.knn.knnconvlayer method)": [[6, "foveation.arch.knn.KNNConvLayer.__init__", false]], "__init__() (foveation.arch.knn.knndepthwiseconvlayer method)": [[6, "foveation.arch.knn.KNNDepthwiseConvLayer.__init__", false]], "__init__() (foveation.arch.knn.knndepthwiseseparableconvlayer method)": [[6, "foveation.arch.knn.KNNDepthwiseSeparableConvLayer.__init__", false]], "__init__() (foveation.arch.knn.knnpoolinglayer method)": [[6, "foveation.arch.knn.KNNPoolingLayer.__init__", false]], "__init__() (foveation.arch.knnalexnet.knnalexnet method)": [[7, "foveation.arch.knnalexnet.KNNAlexNet.__init__", false]], "__init__() (foveation.arch.knnalexnet.knnalexnetblock method)": [[7, "foveation.arch.knnalexnet.KNNAlexNetBlock.__init__", false]], "__init__() (foveation.arch.knnconvnextv2.block method)": [[8, "foveation.arch.knnconvnextv2.Block.__init__", false]], "__init__() (foveation.arch.knnconvnextv2.convnextv2 method)": [[8, "foveation.arch.knnconvnextv2.ConvNeXtV2.__init__", false]], "__init__() (foveation.arch.knnconvnextv2.grn method)": [[8, "foveation.arch.knnconvnextv2.GRN.__init__", false]], "__init__() (foveation.arch.knnconvnextv2.layernorm method)": [[8, "foveation.arch.knnconvnextv2.LayerNorm.__init__", false]], "__init__() (foveation.arch.knnresnet.knnresnet method)": [[9, "foveation.arch.knnresnet.KNNResNet.__init__", false]], "__init__() (foveation.arch.knnresnet.knnresnetbasicblock method)": [[9, "foveation.arch.knnresnet.KNNResNetBasicBlock.__init__", false]], "__init__() (foveation.arch.knnvit.dinov3rope method)": [[10, "foveation.arch.knnvit.DinoV3RoPE.__init__", false]], "__init__() (foveation.arch.knnvit.knnpartitioningpatchembedding method)": [[10, "foveation.arch.knnvit.KNNPartitioningPatchEmbedding.__init__", false]], "__init__() (foveation.arch.knnvit.knnpatchembedding method)": [[10, "foveation.arch.knnvit.KNNPatchEmbedding.__init__", false]], "__init__() (foveation.arch.knnvit.knnvit method)": [[10, "foveation.arch.knnvit.KNNViT.__init__", false]], "__init__() (foveation.arch.knnvit.partitioningpatchembedding method)": [[10, "foveation.arch.knnvit.PartitioningPatchEmbedding.__init__", false]], "__init__() (foveation.arch.mlp.layerblock method)": [[11, "foveation.arch.mlp.LayerBlock.__init__", false]], "__init__() (foveation.arch.mlp.mlpwrapper method)": [[11, "foveation.arch.mlp.MLPWrapper.__init__", false]], "__init__() (foveation.arch.norm.knnbatchnorm method)": [[12, "foveation.arch.norm.KNNBatchNorm.__init__", false]], "__init__() (foveation.arch.norm.knnchannelnorm method)": [[12, "foveation.arch.norm.KNNChannelNorm.__init__", false]], "__init__() (foveation.arch.norm.knncoordnorm method)": [[12, "foveation.arch.norm.KNNCoordNorm.__init__", false]], "__init__() (foveation.arch.norm.knngroupnorm method)": [[12, "foveation.arch.norm.KNNGroupNorm.__init__", false]], "__init__() (foveation.arch.norm.knnlayernorm method)": [[12, "foveation.arch.norm.KNNLayerNorm.__init__", false]], "__init__() (foveation.arch.polar.polarpadder method)": [[13, "foveation.arch.polar.PolarPadder.__init__", false]], "__init__() (foveation.arch.resnet.basicblockpolar method)": [[14, "foveation.arch.resnet.BasicBlockPolar.__init__", false]], "__init__() (foveation.arch.resnet.bottleneckpolar method)": [[14, "foveation.arch.resnet.BottleneckPolar.__init__", false]], "__init__() (foveation.arch.resnet.resnet method)": [[14, "foveation.arch.resnet.ResNet.__init__", false]], "__init__() (foveation.arch.vit.multiheadselfattention method)": [[15, "foveation.arch.vit.MultiHeadSelfAttention.__init__", false]], "__init__() (foveation.arch.vit.patchembedding method)": [[15, "foveation.arch.vit.PatchEmbedding.__init__", false]], "__init__() (foveation.arch.vit.positionalencoding method)": [[15, "foveation.arch.vit.PositionalEncoding.__init__", false]], "__init__() (foveation.arch.vit.ropemultiheadselfattention method)": [[15, "foveation.arch.vit.RoPEMultiHeadSelfAttention.__init__", false]], "__init__() (foveation.arch.vit.ropepositionalencoding method)": [[15, "foveation.arch.vit.RoPEPositionalEncoding.__init__", false]], "__init__() (foveation.arch.vit.ropetransformerblock method)": [[15, "foveation.arch.vit.RoPETransformerBlock.__init__", false]], "__init__() (foveation.arch.vit.transformerblock method)": [[15, "foveation.arch.vit.TransformerBlock.__init__", false]], "__init__() (foveation.arch.vit.visiontransformer method)": [[15, "foveation.arch.vit.VisionTransformer.__init__", false]], "__init__() (foveation.arch.wrapper.backboneprojectorwrapper method)": [[16, "foveation.arch.wrapper.BackboneProjectorWrapper.__init__", false]], "__init__() (foveation.probes.linearprobe method)": [[19, "foveation.probes.LinearProbe.__init__", false]], "__init__() (foveation.probes.saccadenetprobe method)": [[19, "foveation.probes.SaccadeNetProbe.__init__", false]], "__init__() (foveation.probes.saccadenetprobes method)": [[19, "foveation.probes.SaccadeNetProbes.__init__", false]], "__init__() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.__init__", false]], "__init__() (foveation.sensing.coords.samplingcoords method)": [[22, "foveation.sensing.coords.SamplingCoords.__init__", false]], "__init__() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.__init__", false]], "__init__() (foveation.sensing.policies.basesaccadepolicy method)": [[24, "foveation.sensing.policies.BaseSaccadePolicy.__init__", false]], "__init__() (foveation.sensing.policies.multirandomsaccadepolicy method)": [[24, "foveation.sensing.policies.MultiRandomSaccadePolicy.__init__", false]], "__init__() (foveation.sensing.policies.nosaccadepolicy method)": [[24, "foveation.sensing.policies.NoSaccadePolicy.__init__", false]], "__init__() (foveation.sensing.retina.gaussiancolordecay method)": [[25, "foveation.sensing.retina.GaussianColorDecay.__init__", false]], "__init__() (foveation.sensing.retina.retinaltransform method)": [[25, "foveation.sensing.retina.RetinalTransform.__init__", false]], "__init__() (foveation.sensing.samplers.gaussianknngridsampler method)": [[27, "foveation.sensing.samplers.GaussianKNNGridSampler.__init__", false]], "__init__() (foveation.sensing.samplers.gridsampler method)": [[27, "foveation.sensing.samplers.GridSampler.__init__", false]], "__init__() (foveation.sensing.samplers.knngridsampler method)": [[27, "foveation.sensing.samplers.KNNGridSampler.__init__", false]], "__init__() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.circularmask method)": [[34, "foveation.utils.fastaugs.transforms.CircularMask.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.colorjitter method)": [[34, "foveation.utils.fastaugs.transforms.ColorJitter.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.compose method)": [[34, "foveation.utils.fastaugs.transforms.Compose.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.multisample method)": [[34, "foveation.utils.fastaugs.transforms.MultiSample.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.normalizegpu method)": [[34, "foveation.utils.fastaugs.transforms.NormalizeGPU.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.randomapply method)": [[34, "foveation.utils.fastaugs.transforms.RandomApply.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.randombrightness method)": [[34, "foveation.utils.fastaugs.transforms.RandomBrightness.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.randomcolorjitter method)": [[34, "foveation.utils.fastaugs.transforms.RandomColorJitter.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.randomcolorjitteryiq method)": [[34, "foveation.utils.fastaugs.transforms.RandomColorJitterYIQ.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.randomcontrast method)": [[34, "foveation.utils.fastaugs.transforms.RandomContrast.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.randomgaussianblur method)": [[34, "foveation.utils.fastaugs.transforms.RandomGaussianBlur.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.randomgrayscale method)": [[34, "foveation.utils.fastaugs.transforms.RandomGrayscale.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.randomhorizontalflip method)": [[34, "foveation.utils.fastaugs.transforms.RandomHorizontalFlip.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.randompatchshuffle method)": [[34, "foveation.utils.fastaugs.transforms.RandomPatchShuffle.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.randomrotate method)": [[34, "foveation.utils.fastaugs.transforms.RandomRotate.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.randomrotateobject method)": [[34, "foveation.utils.fastaugs.transforms.RandomRotateObject.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.randomsolarization method)": [[34, "foveation.utils.fastaugs.transforms.RandomSolarization.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.randomzoom method)": [[34, "foveation.utils.fastaugs.transforms.RandomZoom.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.todevice method)": [[34, "foveation.utils.fastaugs.transforms.ToDevice.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.tofloat method)": [[34, "foveation.utils.fastaugs.transforms.ToFloat.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.tofloatdiv method)": [[34, "foveation.utils.fastaugs.transforms.ToFloatDiv.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.tograyscalegpu method)": [[34, "foveation.utils.fastaugs.transforms.ToGrayscaleGPU.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.tograyscaletorchgpu method)": [[34, "foveation.utils.fastaugs.transforms.ToGrayscaleTorchGPU.__init__", false]], "__init__() (foveation.utils.fastaugs.transforms.totorchimage method)": [[34, "foveation.utils.fastaugs.transforms.ToTorchImage.__init__", false]], "__init__() (foveation.utils.flops.flopwrapper method)": [[35, "foveation.utils.flops.FlopWrapper.__init__", false]], "__init__() (foveation.utils.hiddenprints method)": [[29, "foveation.utils.HiddenPrints.__init__", false]], "__init__() (foveation.utils.lora.loraparam method)": [[37, "foveation.utils.lora.LoRAParam.__init__", false]], "__init__() (foveation.utils.losses.barlowtwinsloss method)": [[38, "foveation.utils.losses.BarlowTwinsLoss.__init__", false]], "__init__() (foveation.utils.losses.simclrloss method)": [[38, "foveation.utils.losses.SimCLRLoss.__init__", false]], "__init__() (foveation.utils.losses.vicregloss method)": [[38, "foveation.utils.losses.VicRegLoss.__init__", false]], "__init__() (foveation.utils.lr_scheduling.cosinedecaywithwarmup method)": [[39, "foveation.utils.lr_scheduling.CosineDecayWithWarmup.__init__", false]], "__init__() (foveation.utils.lr_scheduling.lars method)": [[39, "foveation.utils.lr_scheduling.LARS.__init__", false]], "__init__() (foveation.visualizer.visualizer method)": [[41, "foveation.visualizer.Visualizer.__init__", false]], "_apply_aspect_ratio() (foveation.sensing.retina.retinaltransform method)": [[25, "foveation.sensing.retina.RetinalTransform._apply_aspect_ratio", false]], "_apply_local_rf() (foveation.arch.knn.knnconvlayer method)": [[6, "foveation.arch.knn.KNNConvLayer._apply_local_rf", false]], "_apply_local_rf_to_weights() (foveation.arch.knn.knnconvlayer method)": [[6, "foveation.arch.knn.KNNConvLayer._apply_local_rf_to_weights", false]], "_check_aspect_ratio() (foveation.sensing.retina.retinaltransform method)": [[25, "foveation.sensing.retina.RetinalTransform._check_aspect_ratio", false]], "_check_fix_loc() (foveation.sensing.retina.retinaltransform method)": [[25, "foveation.sensing.retina.RetinalTransform._check_fix_loc", false]], "_check_fixation_size() (foveation.sensing.retina.retinaltransform method)": [[25, "foveation.sensing.retina.RetinalTransform._check_fixation_size", false]], "_clear_non_serializable_cached_data() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor._clear_non_serializable_cached_data", false]], "_compute_euclidean_distances_batched() (foveation.arch.knn.knnbaselayer method)": [[6, "foveation.arch.knn.KNNBaseLayer._compute_euclidean_distances_batched", false]], "_compute_gaussian_weights() (foveation.arch.knn.knnpoolinglayer method)": [[6, "foveation.arch.knn.KNNPoolingLayer._compute_gaussian_weights", false]], "_compute_geodesic_distances() (foveation.arch.knn.knnbaselayer method)": [[6, "foveation.arch.knn.KNNBaseLayer._compute_geodesic_distances", false]], "_compute_isotropic_r_and_num_theta() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords._compute_isotropic_r_and_num_theta", false]], "_compute_knns() (foveation.arch.knn.knnbaselayer method)": [[6, "foveation.arch.knn.KNNBaseLayer._compute_knns", false]], "_get_sbc_mat() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor._get_sbc_mat", false]], "_get_scale_factor() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional._get_scale_factor", false], [31, "id4", false]], "_grid_sample() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional._grid_sample", false]], "_init_conv_like() (foveation.arch.knn.knnconvlayer method)": [[6, "foveation.arch.knn.KNNConvLayer._init_conv_like", false]], "_init_depthwise_conv_like() (foveation.arch.knn.knndepthwiseconvlayer method)": [[6, "foveation.arch.knn.KNNDepthwiseConvLayer._init_depthwise_conv_like", false]], "_init_depthwise_separable_conv_like() (foveation.arch.knn.knndepthwiseseparableconvlayer method)": [[6, "foveation.arch.knn.KNNDepthwiseSeparableConvLayer._init_depthwise_separable_conv_like", false]], "_init_fix_agg() (foveation.probes.saccadenetprobe method)": [[19, "foveation.probes.SaccadeNetProbe._init_fix_agg", false]], "_init_probes() (foveation.probes.saccadenetprobes method)": [[19, "foveation.probes.SaccadeNetProbes._init_probes", false]], "_init_weights() (foveation.arch.vit.visiontransformer method)": [[15, "foveation.arch.vit.VisionTransformer._init_weights", false]], "_int_list_from_value() (in module foveation.utils.flops)": [[35, "foveation.utils.flops._int_list_from_value", false]], "_make_layer() (foveation.arch.knnresnet.knnresnet method)": [[9, "foveation.arch.knnresnet.KNNResNet._make_layer", false]], "_pad_and_gather_knns() (foveation.arch.knn.knnconvlayer method)": [[6, "foveation.arch.knn.KNNConvLayer._pad_and_gather_knns", false]], "_prep_grid_for_grid_sample() (foveation.sensing.samplers.basegridsampler method)": [[27, "foveation.sensing.samplers.BaseGridSampler._prep_grid_for_grid_sample", false]], "_prepare_coords() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional._prepare_coords", false]], "_prepare_mat() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional._prepare_mat", false]], "_prepare_param() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional._prepare_param", false]], "_prepare_rot_pt() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional._prepare_rot_pt", false]], "_prepare_thetas() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional._prepare_thetas", false]], "_transform_fix_grid() (foveation.sensing.samplers.basegridsampler method)": [[27, "foveation.sensing.samplers.BaseGridSampler._transform_fix_grid", false]], "accuracy() (foveation.utils.losses.simclrloss method)": [[38, "foveation.utils.losses.SimCLRLoss.accuracy", false]], "add_supervised_meters() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.add_supervised_meters", false]], "add_to_all() (in module foveation.utils)": [[29, "foveation.utils.add_to_all", false]], "adjust_brightness() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.adjust_brightness", false]], "adjust_brightness() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.adjust_brightness", false]], "adjust_brightness_pil() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.adjust_brightness_pil", false]], "adjust_contrast() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.adjust_contrast", false]], "adjust_contrast() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.adjust_contrast", false]], "adjust_contrast_logit() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.adjust_contrast_logit", false]], "adjust_contrast_pil() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.adjust_contrast_pil", false]], "adjust_gamma() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.adjust_gamma", false]], "adjust_hue() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.adjust_hue", false]], "adjust_hue_fast() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.adjust_hue_fast", false]], "adjust_rms_contrast() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.adjust_rms_contrast", false]], "adjust_rms_contrast_logit() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.adjust_rms_contrast_logit", false]], "adjust_saturation() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.adjust_saturation", false]], "adjust_sharpness() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.adjust_sharpness", false]], "affine() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.affine", false]], "affine_transform() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.affine_transform", false]], "alexnet2023_baseline() (in module foveation.arch.alexnet)": [[2, "foveation.arch.alexnet.alexnet2023_baseline", false]], "align_to() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.align_to", false]], "all_coords() (foveation.sensing.samplers.gridsampler method)": [[27, "foveation.sensing.samplers.GridSampler.all_coords", false]], "all_coords() (foveation.sensing.samplers.knngridsampler method)": [[27, "foveation.sensing.samplers.KNNGridSampler.all_coords", false]], "analyze_rf() (in module foveation.utils)": [[29, "foveation.utils.analyze_rf", false]], "apply_2d_rotary_pos_emb() (in module foveation.arch.vit)": [[15, "foveation.arch.vit.apply_2d_rotary_pos_emb", false]], "apply_last() (foveation.utils.fastaugs.transforms.colorjitter method)": [[34, "foveation.utils.fastaugs.transforms.ColorJitter.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.compose method)": [[34, "foveation.utils.fastaugs.transforms.Compose.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.normalizegpu method)": [[34, "foveation.utils.fastaugs.transforms.NormalizeGPU.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.randomapply method)": [[34, "foveation.utils.fastaugs.transforms.RandomApply.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.randombrightness method)": [[34, "foveation.utils.fastaugs.transforms.RandomBrightness.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.randomcolorjitter method)": [[34, "foveation.utils.fastaugs.transforms.RandomColorJitter.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.randomcolorjitteryiq method)": [[34, "foveation.utils.fastaugs.transforms.RandomColorJitterYIQ.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.randomcontrast method)": [[34, "foveation.utils.fastaugs.transforms.RandomContrast.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.randomgaussianblur method)": [[34, "foveation.utils.fastaugs.transforms.RandomGaussianBlur.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.randomgrayscale method)": [[34, "foveation.utils.fastaugs.transforms.RandomGrayscale.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.randomhorizontalflip method)": [[34, "foveation.utils.fastaugs.transforms.RandomHorizontalFlip.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.randompatchshuffle method)": [[34, "foveation.utils.fastaugs.transforms.RandomPatchShuffle.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.randomsolarization method)": [[34, "foveation.utils.fastaugs.transforms.RandomSolarization.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.tochannelsfirst method)": [[34, "foveation.utils.fastaugs.transforms.ToChannelsFirst.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.tochannelslast method)": [[34, "foveation.utils.fastaugs.transforms.ToChannelsLast.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.todevice method)": [[34, "foveation.utils.fastaugs.transforms.ToDevice.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.tofloat method)": [[34, "foveation.utils.fastaugs.transforms.ToFloat.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.tofloatdiv method)": [[34, "foveation.utils.fastaugs.transforms.ToFloatDiv.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.tonumpy method)": [[34, "foveation.utils.fastaugs.transforms.ToNumpy.apply_last", false]], "apply_last() (foveation.utils.fastaugs.transforms.totorchimage method)": [[34, "foveation.utils.fastaugs.transforms.ToTorchImage.apply_last", false]], "apply_lora() (in module foveation.utils.lora)": [[37, "foveation.utils.lora.apply_lora", false]], "apply_mask() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.apply_mask", false]], "arch_wrapper() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.arch_wrapper", false]], "auto_match_num_coords() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.auto_match_num_coords", false]], "autocontrast() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.autocontrast", false]], "backboneprojectorwrapper (class in foveation.arch.wrapper)": [[16, "foveation.arch.wrapper.BackboneProjectorWrapper", false]], "backward() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.backward", false]], "barlowtwinsloss (class in foveation.utils.losses)": [[38, "foveation.utils.losses.BarlowTwinsLoss", false]], "basegridsampler (class in foveation.sensing.samplers)": [[27, "foveation.sensing.samplers.BaseGridSampler", false]], "basesaccadepolicy (class in foveation.sensing.policies)": [[24, "foveation.sensing.policies.BaseSaccadePolicy", false]], "basicblockpolar (class in foveation.arch.resnet)": [[14, "foveation.arch.resnet.BasicBlockPolar", false]], "batch_size (foveation.utils.losses.barlowtwinsloss attribute)": [[38, "foveation.utils.losses.BarlowTwinsLoss.batch_size", false]], "batch_size (foveation.utils.losses.simclrloss attribute)": [[38, "foveation.utils.losses.SimCLRLoss.batch_size", false]], "before_call() (foveation.utils.fastaugs.transforms.circularmask method)": [[34, "foveation.utils.fastaugs.transforms.CircularMask.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.colorjitter method)": [[34, "foveation.utils.fastaugs.transforms.ColorJitter.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.normalizegpu method)": [[34, "foveation.utils.fastaugs.transforms.NormalizeGPU.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.randomapply method)": [[34, "foveation.utils.fastaugs.transforms.RandomApply.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.randombrightness method)": [[34, "foveation.utils.fastaugs.transforms.RandomBrightness.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.randomcolorjitter method)": [[34, "foveation.utils.fastaugs.transforms.RandomColorJitter.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.randomcolorjitteryiq method)": [[34, "foveation.utils.fastaugs.transforms.RandomColorJitterYIQ.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.randomcontrast method)": [[34, "foveation.utils.fastaugs.transforms.RandomContrast.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.randomgaussianblur method)": [[34, "foveation.utils.fastaugs.transforms.RandomGaussianBlur.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.randomgrayscale method)": [[34, "foveation.utils.fastaugs.transforms.RandomGrayscale.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.randomhorizontalflip method)": [[34, "foveation.utils.fastaugs.transforms.RandomHorizontalFlip.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.randompatchshuffle method)": [[34, "foveation.utils.fastaugs.transforms.RandomPatchShuffle.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.randomrotate method)": [[34, "foveation.utils.fastaugs.transforms.RandomRotate.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.randomrotateobject method)": [[34, "foveation.utils.fastaugs.transforms.RandomRotateObject.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.randomsolarization method)": [[34, "foveation.utils.fastaugs.transforms.RandomSolarization.before_call", false]], "before_call() (foveation.utils.fastaugs.transforms.randomzoom method)": [[34, "foveation.utils.fastaugs.transforms.RandomZoom.before_call", false]], "block (class in foveation.arch.convnextv2)": [[4, "foveation.arch.convnextv2.Block", false]], "block (class in foveation.arch.knnconvnextv2)": [[8, "foveation.arch.knnconvnextv2.Block", false]], "blur_radius (foveation.utils.fastaugs.transforms.circularmask property)": [[34, "foveation.utils.fastaugs.transforms.CircularMask.blur_radius", false]], "bn (foveation.utils.losses.barlowtwinsloss attribute)": [[38, "foveation.utils.losses.BarlowTwinsLoss.bn", false]], "bottleneckpolar (class in foveation.arch.resnet)": [[14, "foveation.arch.resnet.BottleneckPolar", false]], "build_dinov3() (in module foveation.arch.dinov3)": [[5, "foveation.arch.dinov3.build_dinov3", false]], "build_model() (in module foveation.arch.alexnet)": [[2, "foveation.arch.alexnet.build_model", false]], "cart_to_complex_log() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.cart_to_complex_log", false]], "cart_to_polar() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.cart_to_polar", false]], "center_crop() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.center_crop", false]], "change_sigma() (foveation.sensing.retina.retinaltransform method)": [[25, "foveation.sensing.retina.RetinalTransform.change_sigma", false]], "checkpoint() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.checkpoint", false]], "circularmask (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.CircularMask", false]], "cleanup_activation_hooks() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.cleanup_activation_hooks", false]], "cleanup_distributed() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.cleanup_distributed", false]], "clone() (foveation.sensing.coords.samplingcoords method)": [[22, "foveation.sensing.coords.SamplingCoords.clone", false]], "color_jitter() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.color_jitter", false]], "colorjitter (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.ColorJitter", false]], "compose (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.Compose", false]], "compute_activations() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.compute_activations", false]], "compute_binary_receptive_field() (in module foveation.arch.knn)": [[6, "foveation.arch.knn.compute_binary_receptive_field", false]], "compute_local_rf() (foveation.arch.knn.knnconvlayer method)": [[6, "foveation.arch.knn.KNNConvLayer.compute_local_rf", false]], "compute_logits() (foveation.utils.losses.simclrloss method)": [[38, "foveation.utils.losses.SimCLRLoss.compute_logits", false]], "compute_receptive_field() (in module foveation.arch.knn)": [[6, "foveation.arch.knn.compute_receptive_field", false]], "compute_reference_coords() (foveation.arch.knn.knnconvlayer method)": [[6, "foveation.arch.knn.KNNConvLayer.compute_reference_coords", false]], "conv2d() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.conv2d", false]], "conv3x3_polar() (in module foveation.arch.resnet)": [[14, "foveation.arch.resnet.conv3x3_polar", false]], "conv_polar() (in module foveation.arch.resnet)": [[14, "foveation.arch.resnet.conv_polar", false]], "convblock (class in foveation.arch.alexnet)": [[2, "foveation.arch.alexnet.ConvBlock", false]], "convert_image_dtype() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.convert_image_dtype", false]], "convert_model_to_polar() (in module foveation.arch.polar)": [[13, "foveation.arch.polar.convert_model_to_polar", false]], "convnext_pico() (in module foveation.arch.convnextv2)": [[4, "foveation.arch.convnextv2.convnext_pico", false]], "convnextv2 (class in foveation.arch.convnextv2)": [[4, "foveation.arch.convnextv2.ConvNeXtV2", false]], "convnextv2 (class in foveation.arch.knnconvnextv2)": [[8, "foveation.arch.knnconvnextv2.ConvNeXtV2", false]], "convnextv2_atto() (in module foveation.arch.convnextv2)": [[4, "foveation.arch.convnextv2.convnextv2_atto", false]], "convnextv2_base() (in module foveation.arch.convnextv2)": [[4, "foveation.arch.convnextv2.convnextv2_base", false]], "convnextv2_femto() (in module foveation.arch.convnextv2)": [[4, "foveation.arch.convnextv2.convnextv2_femto", false]], "convnextv2_huge() (in module foveation.arch.convnextv2)": [[4, "foveation.arch.convnextv2.convnextv2_huge", false]], "convnextv2_large() (in module foveation.arch.convnextv2)": [[4, "foveation.arch.convnextv2.convnextv2_large", false]], "convnextv2_nano() (in module foveation.arch.convnextv2)": [[4, "foveation.arch.convnextv2.convnextv2_nano", false]], "convnextv2_tiny() (in module foveation.arch.convnextv2)": [[4, "foveation.arch.convnextv2.convnextv2_tiny", false]], "copy_hydra_outputs() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.copy_hydra_outputs", false]], "cort_cartesian_to_cort_cylindrical() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.cort_cartesian_to_cort_cylindrical", false]], "cortical_cylindrical_to_cortical_cartesian() (in module foveation.sensing.manifold)": [[23, "foveation.sensing.manifold.cortical_cylindrical_to_cortical_cartesian", false]], "corticalsensormanifold (class in foveation.sensing.manifold)": [[23, "foveation.sensing.manifold.CorticalSensorManifold", false]], "cosine_decay() (in module foveation.utils.lr_scheduling)": [[39, "foveation.utils.lr_scheduling.cosine_decay", false]], "cosine_scheduler() (in module foveation.utils.lr_scheduling)": [[39, "foveation.utils.lr_scheduling.cosine_scheduler", false]], "cosinedecaywithwarmup (class in foveation.utils.lr_scheduling)": [[39, "foveation.utils.lr_scheduling.CosineDecayWithWarmup", false]], "cov_coeff (foveation.utils.losses.vicregloss attribute)": [[38, "foveation.utils.losses.VicRegLoss.cov_coeff", false]], "create_model_and_scaler() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.create_model_and_scaler", false]], "create_optimizer() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.create_optimizer", false]], "create_standard_loader() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.create_standard_loader", false]], "create_train_loader() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.create_train_loader", false]], "create_val_loader() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.create_val_loader", false]], "criterion (foveation.utils.losses.simclrloss attribute)": [[38, "foveation.utils.losses.SimCLRLoss.criterion", false]], "crop() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.crop", false]], "crop() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.crop", false]], "cylindrical_to_visual_polar() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.cylindrical_to_visual_polar", false]], "detach() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.detach", false]], "detach_() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.detach_", false]], "dim_order() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.dim_order", false]], "dinov3rope (class in foveation.arch.knnvit)": [[10, "foveation.arch.knnvit.DinoV3RoPE", false]], "div_() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.div_", false]], "dm_dr() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.dm_dr", false]], "draw_params() (foveation.utils.fastaugs.transforms.circularmask method)": [[34, "foveation.utils.fastaugs.transforms.CircularMask.draw_params", false]], "draw_params() (foveation.utils.fastaugs.transforms.randomrotate method)": [[34, "foveation.utils.fastaugs.transforms.RandomRotate.draw_params", false]], "draw_params() (foveation.utils.fastaugs.transforms.randomrotateobject method)": [[34, "foveation.utils.fastaugs.transforms.RandomRotateObject.draw_params", false]], "draw_params() (foveation.utils.fastaugs.transforms.randomzoom method)": [[34, "foveation.utils.fastaugs.transforms.RandomZoom.draw_params", false]], "drho_dr() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.drho_dr", false]], "dropout (foveation.probes.linearprobe attribute)": [[19, "foveation.probes.LinearProbe.dropout", false]], "dropout (foveation.probes.saccadenetprobe attribute)": [[19, "foveation.probes.SaccadeNetProbe.dropout", false]], "dropout (foveation.probes.saccadenetprobes attribute)": [[19, "foveation.probes.SaccadeNetProbes.dropout", false]], "dummy_red() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.dummy_red", false]], "eig() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.eig", false]], "equalize() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.equalize", false]], "eval_and_log() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.eval_and_log", false]], "exec() (foveation.trainer.trainer class method)": [[28, "foveation.trainer.Trainer.exec", false]], "expansion (foveation.arch.resnet.basicblockpolar attribute)": [[14, "foveation.arch.resnet.BasicBlockPolar.expansion", false]], "expansion (foveation.arch.resnet.bottleneckpolar attribute)": [[14, "foveation.arch.resnet.BottleneckPolar.expansion", false]], "final_accuracy() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.final_accuracy", false]], "find_config() (in module foveation.trainer)": [[28, "foveation.trainer.find_config", false]], "find_desired_res() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.find_desired_res", false]], "find_valid_num_groups() (in module foveation.arch.norm)": [[12, "foveation.arch.norm.find_valid_num_groups", false]], "five_crop() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.five_crop", false]], "fix_agg (foveation.probes.saccadenetprobe attribute)": [[19, "foveation.probes.SaccadeNetProbe.fix_agg", false]], "fix_agg (foveation.probes.saccadenetprobes attribute)": [[19, "foveation.probes.SaccadeNetProbes.fix_agg", false]], "fixation_size (foveation.sensing.policies.multirandomsaccadepolicy attribute)": [[24, "foveation.sensing.policies.MultiRandomSaccadePolicy.fixation_size", false]], "flatten_dict() (in module foveation.utils)": [[29, "foveation.utils.flatten_dict", false]], "flip_mat() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.flip_mat", false]], "flopwrapper (class in foveation.utils.flops)": [[35, "foveation.utils.flops.FlopWrapper", false]], "forward() (foveation.arch.convnextv2.block method)": [[4, "foveation.arch.convnextv2.Block.forward", false]], "forward() (foveation.arch.convnextv2.convnextv2 method)": [[4, "foveation.arch.convnextv2.ConvNeXtV2.forward", false]], "forward() (foveation.arch.convnextv2.grn method)": [[4, "foveation.arch.convnextv2.GRN.forward", false]], "forward() (foveation.arch.convnextv2.layernorm method)": [[4, "foveation.arch.convnextv2.LayerNorm.forward", false]], "forward() (foveation.arch.knn.knnconvlayer method)": [[6, "foveation.arch.knn.KNNConvLayer.forward", false]], "forward() (foveation.arch.knn.knndepthwiseconvlayer method)": [[6, "foveation.arch.knn.KNNDepthwiseConvLayer.forward", false]], "forward() (foveation.arch.knn.knndepthwiseseparableconvlayer method)": [[6, "foveation.arch.knn.KNNDepthwiseSeparableConvLayer.forward", false]], "forward() (foveation.arch.knn.knnpoolinglayer method)": [[6, "foveation.arch.knn.KNNPoolingLayer.forward", false]], "forward() (foveation.arch.knnalexnet.knnalexnet method)": [[7, "foveation.arch.knnalexnet.KNNAlexNet.forward", false]], "forward() (foveation.arch.knnalexnet.knnalexnetblock method)": [[7, "foveation.arch.knnalexnet.KNNAlexNetBlock.forward", false]], "forward() (foveation.arch.knnconvnextv2.block method)": [[8, "foveation.arch.knnconvnextv2.Block.forward", false]], "forward() (foveation.arch.knnconvnextv2.convnextv2 method)": [[8, "foveation.arch.knnconvnextv2.ConvNeXtV2.forward", false]], "forward() (foveation.arch.knnconvnextv2.grn method)": [[8, "foveation.arch.knnconvnextv2.GRN.forward", false]], "forward() (foveation.arch.knnconvnextv2.layernorm method)": [[8, "foveation.arch.knnconvnextv2.LayerNorm.forward", false]], "forward() (foveation.arch.knnresnet.knnresnet method)": [[9, "foveation.arch.knnresnet.KNNResNet.forward", false]], "forward() (foveation.arch.knnresnet.knnresnetbasicblock method)": [[9, "foveation.arch.knnresnet.KNNResNetBasicBlock.forward", false]], "forward() (foveation.arch.knnvit.dinov3rope method)": [[10, "foveation.arch.knnvit.DinoV3RoPE.forward", false]], "forward() (foveation.arch.knnvit.knnpatchembedding method)": [[10, "foveation.arch.knnvit.KNNPatchEmbedding.forward", false]], "forward() (foveation.arch.knnvit.knnvit method)": [[10, "foveation.arch.knnvit.KNNViT.forward", false]], "forward() (foveation.arch.mlp.mlpwrapper method)": [[11, "foveation.arch.mlp.MLPWrapper.forward", false]], "forward() (foveation.arch.norm.knnchannelnorm method)": [[12, "foveation.arch.norm.KNNChannelNorm.forward", false]], "forward() (foveation.arch.polar.polarpadder method)": [[13, "foveation.arch.polar.PolarPadder.forward", false]], "forward() (foveation.arch.resnet.basicblockpolar method)": [[14, "foveation.arch.resnet.BasicBlockPolar.forward", false]], "forward() (foveation.arch.resnet.bottleneckpolar method)": [[14, "foveation.arch.resnet.BottleneckPolar.forward", false]], "forward() (foveation.arch.vit.multiheadselfattention method)": [[15, "foveation.arch.vit.MultiHeadSelfAttention.forward", false]], "forward() (foveation.arch.vit.patchembedding method)": [[15, "foveation.arch.vit.PatchEmbedding.forward", false]], "forward() (foveation.arch.vit.positionalencoding method)": [[15, "foveation.arch.vit.PositionalEncoding.forward", false]], "forward() (foveation.arch.vit.ropemultiheadselfattention method)": [[15, "foveation.arch.vit.RoPEMultiHeadSelfAttention.forward", false]], "forward() (foveation.arch.vit.ropepositionalencoding method)": [[15, "foveation.arch.vit.RoPEPositionalEncoding.forward", false]], "forward() (foveation.arch.vit.transformerblock method)": [[15, "foveation.arch.vit.TransformerBlock.forward", false]], "forward() (foveation.arch.vit.visiontransformer method)": [[15, "foveation.arch.vit.VisionTransformer.forward", false]], "forward() (foveation.arch.wrapper.backboneprojectorwrapper method)": [[16, "foveation.arch.wrapper.BackboneProjectorWrapper.forward", false]], "forward() (foveation.probes.linearprobe method)": [[19, "foveation.probes.LinearProbe.forward", false]], "forward() (foveation.probes.saccadenetprobe method)": [[19, "foveation.probes.SaccadeNetProbe.forward", false]], "forward() (foveation.probes.saccadenetprobes method)": [[19, "foveation.probes.SaccadeNetProbes.forward", false]], "forward() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.forward", false]], "forward() (foveation.sensing.policies.multirandomsaccadepolicy method)": [[24, "foveation.sensing.policies.MultiRandomSaccadePolicy.forward", false]], "forward() (foveation.sensing.policies.nosaccadepolicy method)": [[24, "foveation.sensing.policies.NoSaccadePolicy.forward", false]], "forward() (foveation.sensing.retina.gaussiancolordecay method)": [[25, "foveation.sensing.retina.GaussianColorDecay.forward", false]], "forward() (foveation.sensing.retina.retinaltransform method)": [[25, "foveation.sensing.retina.RetinalTransform.forward", false]], "forward() (foveation.sensing.samplers.gridsampler method)": [[27, "foveation.sensing.samplers.GridSampler.forward", false]], "forward() (foveation.sensing.samplers.knngridsampler method)": [[27, "foveation.sensing.samplers.KNNGridSampler.forward", false]], "forward() (foveation.utils.flops.flopwrapper method)": [[35, "foveation.utils.flops.FlopWrapper.forward", false]], "forward() (foveation.utils.lora.loraparam method)": [[37, "foveation.utils.lora.LoRAParam.forward", false]], "forward() (foveation.utils.losses.barlowtwinsloss method)": [[38, "foveation.utils.losses.BarlowTwinsLoss.forward", false]], "forward() (foveation.utils.losses.simclrloss method)": [[38, "foveation.utils.losses.SimCLRLoss.forward", false]], "forward() (foveation.utils.losses.vicregloss method)": [[38, "foveation.utils.losses.VicRegLoss.forward", false]], "forward_features() (foveation.arch.convnextv2.convnextv2 method)": [[4, "foveation.arch.convnextv2.ConvNeXtV2.forward_features", false]], "forward_features() (foveation.arch.knnconvnextv2.convnextv2 method)": [[8, "foveation.arch.knnconvnextv2.ConvNeXtV2.forward_features", false]], "forward_ssl() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.forward_ssl", false]], "forward_supervised() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.forward_supervised", false]], "foveation": [[0, "module-foveation", false]], "foveation.arch": [[1, "module-foveation.arch", false]], "foveation.arch.alexnet": [[2, "module-foveation.arch.alexnet", false]], "foveation.arch.architectures": [[3, "module-foveation.arch.architectures", false]], "foveation.arch.convnextv2": [[4, "module-foveation.arch.convnextv2", false]], "foveation.arch.dinov3": [[5, "module-foveation.arch.dinov3", false]], "foveation.arch.knn": [[6, "module-foveation.arch.knn", false]], "foveation.arch.knnalexnet": [[7, "module-foveation.arch.knnalexnet", false]], "foveation.arch.knnconvnextv2": [[8, "module-foveation.arch.knnconvnextv2", false]], "foveation.arch.knnresnet": [[9, "module-foveation.arch.knnresnet", false]], "foveation.arch.knnvit": [[10, "module-foveation.arch.knnvit", false]], "foveation.arch.mlp": [[11, "module-foveation.arch.mlp", false]], "foveation.arch.norm": [[12, "module-foveation.arch.norm", false]], "foveation.arch.polar": [[13, "module-foveation.arch.polar", false]], "foveation.arch.resnet": [[14, "module-foveation.arch.resnet", false]], "foveation.arch.vit": [[15, "module-foveation.arch.vit", false]], "foveation.arch.wrapper": [[16, "module-foveation.arch.wrapper", false]], "foveation.demo": [[17, "module-foveation.demo", false]], "foveation.paths": [[18, "module-foveation.paths", false]], "foveation.probes": [[19, "module-foveation.probes", false]], "foveation.saccadenet": [[20, "module-foveation.saccadenet", false]], "foveation.sensing": [[21, "module-foveation.sensing", false]], "foveation.sensing.coords": [[22, "module-foveation.sensing.coords", false]], "foveation.sensing.manifold": [[23, "module-foveation.sensing.manifold", false]], "foveation.sensing.policies": [[24, "module-foveation.sensing.policies", false]], "foveation.sensing.retina": [[25, "module-foveation.sensing.retina", false]], "foveation.sensing.saliency": [[26, "module-foveation.sensing.saliency", false]], "foveation.sensing.samplers": [[27, "module-foveation.sensing.samplers", false]], "foveation.trainer": [[28, "module-foveation.trainer", false]], "foveation.utils": [[29, "module-foveation.utils", false]], "foveation.utils.fastaugs": [[30, "module-foveation.utils.fastaugs", false]], "foveation.utils.fastaugs.functional": [[31, "module-foveation.utils.fastaugs.functional", false]], "foveation.utils.fastaugs.functional_tensor": [[32, "module-foveation.utils.fastaugs.functional_tensor", false]], "foveation.utils.fastaugs.transforms": [[34, "module-foveation.utils.fastaugs.transforms", false]], "foveation.utils.flops": [[35, "module-foveation.utils.flops", false]], "foveation.utils.knnprobe": [[36, "module-foveation.utils.knnprobe", false]], "foveation.utils.lora": [[37, "module-foveation.utils.lora", false]], "foveation.utils.losses": [[38, "module-foveation.utils.losses", false]], "foveation.utils.lr_scheduling": [[39, "module-foveation.utils.lr_scheduling", false]], "foveation.utils.std_transforms": [[40, "module-foveation.utils.std_transforms", false]], "foveation.visualizer": [[41, "module-foveation.visualizer", false]], "gaussian_blur() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.gaussian_blur", false]], "gaussiancolordecay (class in foveation.sensing.retina)": [[25, "foveation.sensing.retina.GaussianColorDecay", false]], "gaussianknngridsampler (class in foveation.sensing.samplers)": [[27, "foveation.sensing.samplers.GaussianKNNGridSampler", false]], "generate_batch_permutations() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.generate_batch_permutations", false]], "get_activations() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.get_activations", false]], "get_backbone() (in module foveation.arch.alexnet)": [[2, "foveation.arch.alexnet.get_backbone", false]], "get_captured_activations() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.get_captured_activations", false]], "get_center_bias() (in module foveation.sensing.saliency)": [[26, "foveation.sensing.saliency.get_center_bias", false]], "get_first_conv_weights() (in module foveation.visualizer)": [[41, "foveation.visualizer.get_first_conv_weights", false]], "get_flops_df() (in module foveation.utils.flops)": [[35, "foveation.utils.flops.get_flops_df", false]], "get_image_as_batch() (in module foveation.demo)": [[17, "foveation.demo.get_image_as_batch", false]], "get_image_num_channels() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.get_image_num_channels", false]], "get_image_size() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.get_image_size", false]], "get_in_channels() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.get_in_channels", false]], "get_in_out_coords() (in module foveation.arch.knn)": [[6, "foveation.arch.knn.get_in_out_coords", false]], "get_inputs() (foveation.utils.flops.flopwrapper method)": [[35, "foveation.utils.flops.FlopWrapper.get_inputs", false]], "get_isotropic_sampling_coords() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.get_isotropic_sampling_coords", false]], "get_logpolar_image_sampling_coords() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.get_logpolar_image_sampling_coords", false]], "get_min_cmf_a() (in module foveation.sensing.retina)": [[25, "foveation.sensing.retina.get_min_cmf_a", false]], "get_mlp() (in module foveation.arch.mlp)": [[11, "foveation.arch.mlp.get_mlp", false]], "get_model() (in module foveation.utils)": [[29, "foveation.utils.get_model", false]], "get_model_from_base_fn() (in module foveation)": [[0, "foveation.get_model_from_base_fn", false]], "get_norm() (in module foveation.arch.norm)": [[12, "foveation.arch.norm.get_norm", false]], "get_num_coords() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.get_num_coords", false]], "get_random_crop() (foveation.sensing.policies.basesaccadepolicy method)": [[24, "foveation.sensing.policies.BaseSaccadePolicy.get_random_crop", false]], "get_random_name() (in module foveation.utils)": [[29, "foveation.utils.get_random_name", false]], "get_random_nearcenter_fixation() (foveation.sensing.policies.basesaccadepolicy method)": [[24, "foveation.sensing.policies.BaseSaccadePolicy.get_random_nearcenter_fixation", false]], "get_repr_size() (in module foveation.arch.alexnet)": [[2, "foveation.arch.alexnet.get_repr_size", false]], "get_repr_size() (in module foveation.arch.resnet)": [[14, "foveation.arch.resnet.get_repr_size", false]], "get_repr_sizes() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.get_repr_sizes", false]], "get_sampling_coords() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.get_sampling_coords", false]], "get_scatter_sizes() (foveation.sensing.coords.samplingcoords method)": [[22, "foveation.sensing.coords.SamplingCoords.get_scatter_sizes", false]], "get_std_transforms() (in module foveation.utils.std_transforms)": [[40, "foveation.utils.std_transforms.get_std_transforms", false]], "get_strided_coords() (foveation.sensing.coords.samplingcoords method)": [[22, "foveation.sensing.coords.SamplingCoords.get_strided_coords", false]], "get_trainer_from_base_fn() (in module foveation)": [[0, "foveation.get_trainer_from_base_fn", false]], "get_transforms() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.get_transforms", false]], "get_warp_params() (foveation.sensing.retina.retinaltransform method)": [[25, "foveation.sensing.retina.RetinalTransform.get_warp_params", false]], "grid_sample() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.grid_sample", false]], "grid_sample() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.grid_sample", false]], "gridsampler (class in foveation.sensing.samplers)": [[27, "foveation.sensing.samplers.GridSampler", false]], "grn (class in foveation.arch.convnextv2)": [[4, "foveation.arch.convnextv2.GRN", false]], "grn (class in foveation.arch.knnconvnextv2)": [[8, "foveation.arch.knnconvnextv2.GRN", false]], "hflip() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.hflip", false]], "hiddenprints (class in foveation.utils)": [[29, "foveation.utils.HiddenPrints", false]], "hsv_jitter() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.hsv_jitter", false]], "hsv_jitter2() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.hsv_jitter2", false]], "hsv_jitter_array() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.hsv_jitter_array", false]], "hsv_jitter_array2() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.hsv_jitter_array2", false]], "hsv_jitter_tensor() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.hsv_jitter_tensor", false]], "hsv_mat() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.hsv_mat", false]], "hsv_mat2() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.hsv_mat2", false]], "hue_mat() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.hue_mat", false]], "init_cortical_mesh() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.init_cortical_mesh", false]], "init_fixation_system() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.init_fixation_system", false]], "init_visual_mesh() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.init_visual_mesh", false]], "initialize_logger() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.initialize_logger", false]], "initialize_remote_logger() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.initialize_remote_logger", false]], "interpolate() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.interpolate", false]], "inv_freq (foveation.arch.knnvit.dinov3rope attribute)": [[10, "foveation.arch.knnvit.DinoV3RoPE.inv_freq", false]], "invert() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.invert", false]], "is_shared() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.is_shared", false]], "istft() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.istft", false]], "knn_classifier() (in module foveation.utils.knnprobe)": [[36, "foveation.utils.knnprobe.knn_classifier", false]], "knn_probe() (in module foveation.utils.knnprobe)": [[36, "foveation.utils.knnprobe.knn_probe", false]], "knnalexnet (class in foveation.arch.knnalexnet)": [[7, "foveation.arch.knnalexnet.KNNAlexNet", false]], "knnalexnetblock (class in foveation.arch.knnalexnet)": [[7, "foveation.arch.knnalexnet.KNNAlexNetBlock", false]], "knnbaselayer (class in foveation.arch.knn)": [[6, "foveation.arch.knn.KNNBaseLayer", false]], "knnbatchnorm (class in foveation.arch.norm)": [[12, "foveation.arch.norm.KNNBatchNorm", false]], "knnchannelnorm (class in foveation.arch.norm)": [[12, "foveation.arch.norm.KNNChannelNorm", false]], "knnconvlayer (class in foveation.arch.knn)": [[6, "foveation.arch.knn.KNNConvLayer", false]], "knnconvnextv2_atto() (in module foveation.arch.knnconvnextv2)": [[8, "foveation.arch.knnconvnextv2.knnconvnextv2_atto", false]], "knnconvnextv2_base() (in module foveation.arch.knnconvnextv2)": [[8, "foveation.arch.knnconvnextv2.knnconvnextv2_base", false]], "knnconvnextv2_femto() (in module foveation.arch.knnconvnextv2)": [[8, "foveation.arch.knnconvnextv2.knnconvnextv2_femto", false]], "knnconvnextv2_huge() (in module foveation.arch.knnconvnextv2)": [[8, "foveation.arch.knnconvnextv2.knnconvnextv2_huge", false]], "knnconvnextv2_large() (in module foveation.arch.knnconvnextv2)": [[8, "foveation.arch.knnconvnextv2.knnconvnextv2_large", false]], "knnconvnextv2_nano() (in module foveation.arch.knnconvnextv2)": [[8, "foveation.arch.knnconvnextv2.knnconvnextv2_nano", false]], "knnconvnextv2_pico() (in module foveation.arch.knnconvnextv2)": [[8, "foveation.arch.knnconvnextv2.knnconvnextv2_pico", false]], "knnconvnextv2_tiny() (in module foveation.arch.knnconvnextv2)": [[8, "foveation.arch.knnconvnextv2.knnconvnextv2_tiny", false]], "knncoordnorm (class in foveation.arch.norm)": [[12, "foveation.arch.norm.KNNCoordNorm", false]], "knndepthwiseconvlayer (class in foveation.arch.knn)": [[6, "foveation.arch.knn.KNNDepthwiseConvLayer", false]], "knndepthwiseseparableconvlayer (class in foveation.arch.knn)": [[6, "foveation.arch.knn.KNNDepthwiseSeparableConvLayer", false]], "knngridsampler (class in foveation.sensing.samplers)": [[27, "foveation.sensing.samplers.KNNGridSampler", false]], "knngroupnorm (class in foveation.arch.norm)": [[12, "foveation.arch.norm.KNNGroupNorm", false]], "knnlayernorm (class in foveation.arch.norm)": [[12, "foveation.arch.norm.KNNLayerNorm", false]], "knnpartitioningpatchembedding (class in foveation.arch.knnvit)": [[10, "foveation.arch.knnvit.KNNPartitioningPatchEmbedding", false]], "knnpatchembedding (class in foveation.arch.knnvit)": [[10, "foveation.arch.knnvit.KNNPatchEmbedding", false]], "knnpoolinglayer (class in foveation.arch.knn)": [[6, "foveation.arch.knn.KNNPoolingLayer", false]], "knnresnet (class in foveation.arch.knnresnet)": [[9, "foveation.arch.knnresnet.KNNResNet", false]], "knnresnetbasicblock (class in foveation.arch.knnresnet)": [[9, "foveation.arch.knnresnet.KNNResNetBasicBlock", false]], "knnvit (class in foveation.arch.knnvit)": [[10, "foveation.arch.knnvit.KNNViT", false]], "lambd (foveation.utils.losses.barlowtwinsloss attribute)": [[38, "foveation.utils.losses.BarlowTwinsLoss.lambd", false]], "lars (class in foveation.utils.lr_scheduling)": [[39, "foveation.utils.lr_scheduling.LARS", false]], "last_params() (foveation.utils.fastaugs.transforms.circularmask method)": [[34, "foveation.utils.fastaugs.transforms.CircularMask.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.colorjitter method)": [[34, "foveation.utils.fastaugs.transforms.ColorJitter.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.normalizegpu method)": [[34, "foveation.utils.fastaugs.transforms.NormalizeGPU.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.randomapply method)": [[34, "foveation.utils.fastaugs.transforms.RandomApply.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.randombrightness method)": [[34, "foveation.utils.fastaugs.transforms.RandomBrightness.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.randomcolorjitter method)": [[34, "foveation.utils.fastaugs.transforms.RandomColorJitter.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.randomcolorjitteryiq method)": [[34, "foveation.utils.fastaugs.transforms.RandomColorJitterYIQ.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.randomcontrast method)": [[34, "foveation.utils.fastaugs.transforms.RandomContrast.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.randomgaussianblur method)": [[34, "foveation.utils.fastaugs.transforms.RandomGaussianBlur.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.randomgrayscale method)": [[34, "foveation.utils.fastaugs.transforms.RandomGrayscale.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.randomhorizontalflip method)": [[34, "foveation.utils.fastaugs.transforms.RandomHorizontalFlip.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.randompatchshuffle method)": [[34, "foveation.utils.fastaugs.transforms.RandomPatchShuffle.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.randomrotate method)": [[34, "foveation.utils.fastaugs.transforms.RandomRotate.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.randomrotateobject method)": [[34, "foveation.utils.fastaugs.transforms.RandomRotateObject.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.randomsolarization method)": [[34, "foveation.utils.fastaugs.transforms.RandomSolarization.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.randomzoom method)": [[34, "foveation.utils.fastaugs.transforms.RandomZoom.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.tochannelsfirst method)": [[34, "foveation.utils.fastaugs.transforms.ToChannelsFirst.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.tochannelslast method)": [[34, "foveation.utils.fastaugs.transforms.ToChannelsLast.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.todevice method)": [[34, "foveation.utils.fastaugs.transforms.ToDevice.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.tofloat method)": [[34, "foveation.utils.fastaugs.transforms.ToFloat.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.tofloatdiv method)": [[34, "foveation.utils.fastaugs.transforms.ToFloatDiv.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.tonumpy method)": [[34, "foveation.utils.fastaugs.transforms.ToNumpy.last_params", false]], "last_params() (foveation.utils.fastaugs.transforms.totorchimage method)": [[34, "foveation.utils.fastaugs.transforms.ToTorchImage.last_params", false]], "launch_from_args() (foveation.trainer.trainer class method)": [[28, "foveation.trainer.Trainer.launch_from_args", false]], "layerblock (class in foveation.arch.mlp)": [[11, "foveation.arch.mlp.LayerBlock", false]], "layernorm (class in foveation.arch.convnextv2)": [[4, "foveation.arch.convnextv2.LayerNorm", false]], "layernorm (class in foveation.arch.knnconvnextv2)": [[8, "foveation.arch.knnconvnextv2.LayerNorm", false]], "learning_schedule() (in module foveation.utils.lr_scheduling)": [[39, "foveation.utils.lr_scheduling.learning_schedule", false]], "linearprobe (class in foveation.probes)": [[19, "foveation.probes.LinearProbe", false]], "list_available_layers() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.list_available_layers", false]], "list_knn_layers() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.list_knn_layers", false]], "lms_to_lgrby() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.lms_to_lgrby", false]], "load_checkpoint() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.load_checkpoint", false]], "load_config() (in module foveation.trainer)": [[28, "foveation.trainer.load_config", false]], "load_dinov3() (in module foveation.arch.dinov3)": [[5, "foveation.arch.dinov3.load_dinov3", false]], "load_pretrained() (in module foveation.utils)": [[29, "foveation.utils.load_pretrained", false]], "load_state_dict() (foveation.utils.lr_scheduling.cosinedecaywithwarmup method)": [[39, "foveation.utils.lr_scheduling.CosineDecayWithWarmup.load_state_dict", false]], "load_weights() (foveation.arch.knnvit.knnpatchembedding method)": [[10, "foveation.arch.knnvit.KNNPatchEmbedding.load_weights", false]], "log() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.log", false]], "logit() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.logit", false]], "logpolar_radius() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.logpolar_radius", false]], "loraparam (class in foveation.utils.lora)": [[37, "foveation.utils.lora.LoRAParam", false]], "lstsq() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.lstsq", false]], "lu() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.lu", false]], "m() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.m", false]], "make_flop_counter() (in module foveation.utils.flops)": [[35, "foveation.utils.flops.make_flop_counter", false]], "map_3d() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.map_3d", false]], "map_to_xyz() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.map_to_xyz", false]], "mask (foveation.utils.losses.simclrloss attribute)": [[38, "foveation.utils.losses.SimCLRLoss.mask", false]], "mask_batch() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.mask_batch", false], [31, "id0", false]], "mask_correlated_samples() (foveation.utils.losses.simclrloss method)": [[38, "foveation.utils.losses.SimCLRLoss.mask_correlated_samples", false]], "mask_tensor() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.mask_tensor", false]], "mat3() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.mat3", false]], "mat3() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.mat3", false]], "measure_latency() (in module foveation.utils.flops)": [[35, "foveation.utils.flops.measure_latency", false]], "min_diff_for_cmf_a() (in module foveation.sensing.retina)": [[25, "foveation.sensing.retina.min_diff_for_cmf_a", false]], "mlp_spec (foveation.probes.saccadenetprobes attribute)": [[19, "foveation.probes.SaccadeNetProbes.mlp_spec", false]], "mlpwrapper (class in foveation.arch.mlp)": [[11, "foveation.arch.mlp.MLPWrapper", false]], "model (foveation.visualizer.visualizer attribute)": [[41, "foveation.visualizer.Visualizer.model", false]], "module": [[0, "module-foveation", false], [1, "module-foveation.arch", false], [2, "module-foveation.arch.alexnet", false], [3, "module-foveation.arch.architectures", false], [4, "module-foveation.arch.convnextv2", false], [5, "module-foveation.arch.dinov3", false], [6, "module-foveation.arch.knn", false], [7, "module-foveation.arch.knnalexnet", false], [8, "module-foveation.arch.knnconvnextv2", false], [9, "module-foveation.arch.knnresnet", false], [10, "module-foveation.arch.knnvit", false], [11, "module-foveation.arch.mlp", false], [12, "module-foveation.arch.norm", false], [13, "module-foveation.arch.polar", false], [14, "module-foveation.arch.resnet", false], [15, "module-foveation.arch.vit", false], [16, "module-foveation.arch.wrapper", false], [17, "module-foveation.demo", false], [18, "module-foveation.paths", false], [19, "module-foveation.probes", false], [20, "module-foveation.saccadenet", false], [21, "module-foveation.sensing", false], [22, "module-foveation.sensing.coords", false], [23, "module-foveation.sensing.manifold", false], [24, "module-foveation.sensing.policies", false], [25, "module-foveation.sensing.retina", false], [26, "module-foveation.sensing.saliency", false], [27, "module-foveation.sensing.samplers", false], [28, "module-foveation.trainer", false], [29, "module-foveation.utils", false], [30, "module-foveation.utils.fastaugs", false], [31, "module-foveation.utils.fastaugs.functional", false], [32, "module-foveation.utils.fastaugs.functional_tensor", false], [34, "module-foveation.utils.fastaugs.transforms", false], [35, "module-foveation.utils.flops", false], [36, "module-foveation.utils.knnprobe", false], [37, "module-foveation.utils.lora", false], [38, "module-foveation.utils.losses", false], [39, "module-foveation.utils.lr_scheduling", false], [40, "module-foveation.utils.std_transforms", false], [41, "module-foveation.visualizer", false]], "module_load() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.module_load", false]], "multi_fixation_accuracy() (foveation.visualizer.visualizer method)": [[41, "foveation.visualizer.Visualizer.multi_fixation_accuracy", false]], "multi_policy (foveation.sensing.policies.multirandomsaccadepolicy attribute)": [[24, "foveation.sensing.policies.MultiRandomSaccadePolicy.multi_policy", false]], "multiheadselfattention (class in foveation.arch.vit)": [[15, "foveation.arch.vit.MultiHeadSelfAttention", false]], "multirandomsaccadepolicy (class in foveation.sensing.policies)": [[24, "foveation.sensing.policies.MultiRandomSaccadePolicy", false]], "multisample (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.MultiSample", false]], "n_fixations (foveation.sensing.policies.multirandomsaccadepolicy attribute)": [[24, "foveation.sensing.policies.MultiRandomSaccadePolicy.n_fixations", false]], "nonrandom_val (foveation.sensing.policies.multirandomsaccadepolicy attribute)": [[24, "foveation.sensing.policies.MultiRandomSaccadePolicy.nonrandom_val", false]], "norm() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.norm", false]], "norm_dist_from_center (foveation.sensing.policies.multirandomsaccadepolicy attribute)": [[24, "foveation.sensing.policies.MultiRandomSaccadePolicy.norm_dist_from_center", false]], "normalize() (in module foveation.utils)": [[29, "foveation.utils.normalize", false]], "normalize() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.normalize", false], [31, "id1", false]], "normalize_coords() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.normalize_coords", false]], "normalize_imagenet() (in module foveation.utils)": [[29, "foveation.utils.normalize_imagenet", false]], "normalizegpu (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.NormalizeGPU", false]], "nosaccadepolicy (class in foveation.sensing.policies)": [[24, "foveation.sensing.policies.NoSaccadePolicy", false]], "num_classes (foveation.probes.saccadenetprobe attribute)": [[19, "foveation.probes.SaccadeNetProbe.num_classes", false]], "num_classes (foveation.probes.saccadenetprobes attribute)": [[19, "foveation.probes.SaccadeNetProbes.num_classes", false]], "num_features (foveation.probes.saccadenetprobe attribute)": [[19, "foveation.probes.SaccadeNetProbe.num_features", false]], "num_sampling_coords() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.num_sampling_coords", false]], "num_sampling_coords_isotropic() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.num_sampling_coords_isotropic", false]], "op() (foveation.utils.fastaugs.transforms.normalizegpu method)": [[34, "foveation.utils.fastaugs.transforms.NormalizeGPU.op", false]], "out_base_dir (foveation.visualizer.visualizer attribute)": [[41, "foveation.visualizer.Visualizer.out_base_dir", false]], "out_dir (foveation.visualizer.visualizer attribute)": [[41, "foveation.visualizer.Visualizer.out_dir", false]], "pad() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.pad", false]], "pad_cartesian() (foveation.sensing.coords.samplingcoords method)": [[22, "foveation.sensing.coords.SamplingCoords.pad_cartesian", false]], "pairs_per_sample (foveation.utils.losses.simclrloss attribute)": [[38, "foveation.utils.losses.SimCLRLoss.pairs_per_sample", false]], "partitioningpatchembedding (class in foveation.arch.knnvit)": [[10, "foveation.arch.knnvit.PartitioningPatchEmbedding", false]], "patchembedding (class in foveation.arch.vit)": [[15, "foveation.arch.vit.PatchEmbedding", false]], "perspective() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.perspective", false]], "phi_3d() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.phi_3d", false]], "plot_coordinates() (foveation.visualizer.visualizer method)": [[41, "foveation.visualizer.Visualizer.plot_coordinates", false]], "plot_rf_diameters() (foveation.visualizer.visualizer method)": [[41, "foveation.visualizer.Visualizer.plot_rf_diameters", false]], "plot_sampling_grids() (foveation.visualizer.visualizer method)": [[41, "foveation.visualizer.Visualizer.plot_sampling_grids", false]], "plot_spatial_rf_from_multi_layers() (foveation.visualizer.visualizer method)": [[41, "foveation.visualizer.Visualizer.plot_spatial_rf_from_multi_layers", false]], "polar_to_cart() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.polar_to_cart", false]], "polarpadder (class in foveation.arch.polar)": [[13, "foveation.arch.polar.PolarPadder", false]], "positionalencoding (class in foveation.arch.vit)": [[15, "foveation.arch.vit.PositionalEncoding", false]], "posterize() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.posterize", false]], "prep_dinov3_finetuning() (in module foveation.arch.dinov3)": [[5, "foveation.arch.dinov3.prep_dinov3_finetuning", false]], "print_all_functions() (foveation.visualizer.visualizer method)": [[41, "foveation.visualizer.Visualizer.print_all_functions", false]], "probe (foveation.probes.linearprobe attribute)": [[19, "foveation.probes.LinearProbe.probe", false]], "probes (foveation.probes.saccadenetprobes attribute)": [[19, "foveation.probes.SaccadeNetProbes.probes", false]], "r_from_z() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.r_from_z", false]], "radians() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.radians", false]], "random_adjust_brightness() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.random_adjust_brightness", false]], "random_adjust_contrast() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.random_adjust_contrast", false]], "random_choice() (foveation.utils.fastaugs.transforms.randompatchshuffle method)": [[34, "foveation.utils.fastaugs.transforms.RandomPatchShuffle.random_choice", false]], "random_color_jitter() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.random_color_jitter", false]], "random_gaussian_blur2d() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.random_gaussian_blur2d", false]], "random_grayscale() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.random_grayscale", false]], "random_grid_sample() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.random_grid_sample", false], [31, "id13", false]], "random_hsv_jitter2() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.random_hsv_jitter2", false]], "random_solarization() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.random_solarization", false]], "randomapply (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.RandomApply", false]], "randombrightness (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.RandomBrightness", false]], "randomcolorjitter (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.RandomColorJitter", false]], "randomcolorjitteryiq (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.RandomColorJitterYIQ", false]], "randomcontrast (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.RandomContrast", false]], "randomgaussianblur (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.RandomGaussianBlur", false]], "randomgrayscale (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.RandomHorizontalFlip", false]], "randompatchshuffle (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.RandomPatchShuffle", false]], "randomrotate (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.RandomRotate", false]], "randomrotateobject (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.RandomRotateObject", false]], "randomsolarization (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.RandomSolarization", false]], "randomzoom (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.RandomZoom", false]], "refine_names() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.refine_names", false]], "register_hook() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.register_hook", false]], "register_post_accumulate_grad_hook() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.register_post_accumulate_grad_hook", false]], "reinforce() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.reinforce", false]], "remove_lora() (in module foveation.utils.lora)": [[37, "foveation.utils.lora.remove_lora", false]], "rename() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.rename", false]], "rename_() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.rename_", false]], "replay() (foveation.utils.fastaugs.transforms.circularmask method)": [[34, "foveation.utils.fastaugs.transforms.CircularMask.replay", false]], "replay() (foveation.utils.fastaugs.transforms.randomrotate method)": [[34, "foveation.utils.fastaugs.transforms.RandomRotate.replay", false]], "replay() (foveation.utils.fastaugs.transforms.randomrotateobject method)": [[34, "foveation.utils.fastaugs.transforms.RandomRotateObject.replay", false]], "replay() (foveation.utils.fastaugs.transforms.randomzoom method)": [[34, "foveation.utils.fastaugs.transforms.RandomZoom.replay", false]], "reproducible_results() (in module foveation.utils)": [[29, "foveation.utils.reproducible_results", false]], "resample_patch_embed_conv() (in module foveation.arch.dinov3)": [[5, "foveation.arch.dinov3.resample_patch_embed_conv", false]], "reset_model() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.reset_model", false]], "resize() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.resize", false]], "resize() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.resize", false]], "resize_as() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.resize_as", false]], "resnet (class in foveation.arch.resnet)": [[14, "foveation.arch.resnet.ResNet", false]], "resnet101() (in module foveation.arch.resnet)": [[14, "foveation.arch.resnet.resnet101", false]], "resnet18() (in module foveation.arch.resnet)": [[14, "foveation.arch.resnet.resnet18", false]], "resnet34() (in module foveation.arch.resnet)": [[14, "foveation.arch.resnet.resnet34", false]], "resnet50() (in module foveation.arch.resnet)": [[14, "foveation.arch.resnet.resnet50", false]], "resnet_ssl() (in module foveation.arch.resnet)": [[14, "foveation.arch.resnet.resnet_ssl", false]], "retinal_transform (foveation.sensing.policies.multirandomsaccadepolicy attribute)": [[24, "foveation.sensing.policies.MultiRandomSaccadePolicy.retinal_transform", false]], "retinal_transform (foveation.sensing.policies.nosaccadepolicy attribute)": [[24, "foveation.sensing.policies.NoSaccadePolicy.retinal_transform", false]], "retinaltransform (class in foveation.sensing.retina)": [[25, "foveation.sensing.retina.RetinalTransform", false]], "reverse_map() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.reverse_map", false]], "rgb_to_grayscale() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.rgb_to_grayscale", false]], "rgb_to_xyz() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.rgb_to_xyz", false]], "rho_3d() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.rho_3d", false]], "ropemultiheadselfattention (class in foveation.arch.vit)": [[15, "foveation.arch.vit.RoPEMultiHeadSelfAttention", false]], "ropepositionalencoding (class in foveation.arch.vit)": [[15, "foveation.arch.vit.RoPEPositionalEncoding", false]], "ropetransformerblock (class in foveation.arch.vit)": [[15, "foveation.arch.vit.RoPETransformerBlock", false]], "rotate() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.rotate", false]], "rotate() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.rotate", false]], "rotate_mat() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.rotate_mat", false]], "rotate_object() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.rotate_object", false]], "rotate_object_mat() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.rotate_object_mat", false]], "rowcol_to_xy() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.rowcol_to_xy", false]], "saccadenet (class in foveation.saccadenet)": [[20, "foveation.saccadenet.SaccadeNet", false]], "saccadenet_alexnet2023_baseline() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_alexnet2023_baseline", false]], "saccadenet_alexnet2023_knn() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_alexnet2023_knn", false]], "saccadenet_dinov3() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_dinov3", false]], "saccadenet_knnresnet() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_knnresnet", false]], "saccadenet_knnresnet18() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_knnresnet18", false]], "saccadenet_knnresnet18_dwsep() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_knnresnet18_dwsep", false]], "saccadenet_knnresnet18_dwsep_lowres() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_knnresnet18_dwsep_lowres", false]], "saccadenet_knnresnet18_lowres() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_knnresnet18_lowres", false]], "saccadenet_knnresnet9() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_knnresnet9", false]], "saccadenet_knnresnet9_dwsep() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_knnresnet9_dwsep", false]], "saccadenet_knnresnet9_dwsep_lowres() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_knnresnet9_dwsep_lowres", false]], "saccadenet_knnresnet9_lowres() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_knnresnet9_lowres", false]], "saccadenet_knnvit() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_knnvit", false]], "saccadenet_knnvit_base() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_knnvit_base", false]], "saccadenet_knnvit_small() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_knnvit_small", false]], "saccadenet_knnvit_tiny() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_knnvit_tiny", false]], "saccadenet_resnet18_baseline() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_resnet18_baseline", false]], "saccadenet_resnet34_baseline() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_resnet34_baseline", false]], "saccadenet_resnet50_baseline() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_resnet50_baseline", false]], "saccadenet_vit() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_vit", false]], "saccadenet_vit_base() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_vit_base", false]], "saccadenet_vit_small() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_vit_small", false]], "saccadenet_vit_tiny() (in module foveation.arch.architectures)": [[3, "foveation.arch.architectures.saccadenet_vit_tiny", false]], "saccadenetprobe (class in foveation.probes)": [[19, "foveation.probes.SaccadeNetProbe", false]], "saccadenetprobes (class in foveation.probes)": [[19, "foveation.probes.SaccadeNetProbes", false]], "sample_fixations() (foveation.sensing.policies.basesaccadepolicy method)": [[24, "foveation.sensing.policies.BaseSaccadePolicy.sample_fixations", false]], "sample_from_logdensity() (in module foveation.sensing.saliency)": [[26, "foveation.sensing.saliency.sample_from_logdensity", false]], "sample_from_logits_pc() (in module foveation.sensing.saliency)": [[26, "foveation.sensing.saliency.sample_from_logits_pc", false]], "sample_params() (foveation.utils.fastaugs.transforms.colorjitter static method)": [[34, "foveation.utils.fastaugs.transforms.ColorJitter.sample_params", false]], "sample_params() (foveation.utils.fastaugs.transforms.randomcolorjitter static method)": [[34, "foveation.utils.fastaugs.transforms.RandomColorJitter.sample_params", false]], "sample_params() (foveation.utils.fastaugs.transforms.randomcolorjitteryiq method)": [[34, "foveation.utils.fastaugs.transforms.RandomColorJitterYIQ.sample_params", false]], "samplingcoords (class in foveation.sensing.coords)": [[22, "foveation.sensing.coords.SamplingCoords", false]], "sat_mat() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.sat_mat", false]], "save_checkpoint() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.save_checkpoint", false]], "set_trace() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.set_trace", false]], "setup_activation_hooks() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.setup_activation_hooks", false]], "setup_distributed() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.setup_distributed", false]], "share_memory_() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.share_memory_", false]], "sigmoid() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.sigmoid", false]], "sim_coeff (foveation.utils.losses.vicregloss attribute)": [[38, "foveation.utils.losses.VicRegLoss.sim_coeff", false]], "simclrloss (class in foveation.utils.losses)": [[38, "foveation.utils.losses.SimCLRLoss", false]], "similarity_f (foveation.utils.losses.simclrloss attribute)": [[38, "foveation.utils.losses.SimCLRLoss.similarity_f", false]], "solarization() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.solarization", false]], "solarize() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.solarize", false]], "solve() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.solve", false]], "split() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.split", false]], "srgb_to_lms() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.srgb_to_lms", false]], "srgb_to_lrgb() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.srgb_to_lrgb", false]], "state_dict() (foveation.utils.lr_scheduling.cosinedecaywithwarmup method)": [[39, "foveation.utils.lr_scheduling.CosineDecayWithWarmup.state_dict", false]], "std_coeff (foveation.utils.losses.vicregloss attribute)": [[38, "foveation.utils.losses.VicRegLoss.std_coeff", false]], "step() (foveation.utils.lr_scheduling.lars method)": [[39, "foveation.utils.lr_scheduling.LARS.step", false]], "stft() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.stft", false]], "storage() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.storage", false]], "storage_type() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.storage_type", false]], "symeig() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.symeig", false]], "temperature (foveation.utils.losses.simclrloss attribute)": [[38, "foveation.utils.losses.SimCLRLoss.temperature", false]], "ten_crop() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.ten_crop", false]], "tensor (class in foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor", false]], "timeit() (in module foveation.utils)": [[29, "foveation.utils.timeit", false]], "to() (foveation.saccadenet.saccadenet method)": [[20, "foveation.saccadenet.SaccadeNet.to", false]], "to() (foveation.sensing.coords.samplingcoords method)": [[22, "foveation.sensing.coords.SamplingCoords.to", false]], "to_channels_first() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.to_channels_first", false], [31, "id2", false]], "to_channels_last() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.to_channels_last", false], [31, "id3", false]], "to_device() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.to_device", false]], "to_float() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.to_float", false]], "to_grayscale() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.to_grayscale", false]], "to_numpy() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.to_numpy", false]], "to_sparse_coo() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.to_sparse_coo", false]], "to_torch_image() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.to_torch_image", false]], "tochannelsfirst (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.ToChannelsFirst", false]], "tochannelslast (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.ToChannelsLast", false]], "todevice (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.ToDevice", false]], "tofloat (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.ToFloat", false]], "tofloatdiv (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.ToFloatDiv", false]], "tograyscalegpu (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.ToGrayscaleGPU", false]], "tograyscaletorchgpu (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.ToGrayscaleTorchGPU", false]], "tonumpy (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.ToNumpy", false]], "torch_pad() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.torch_pad", false]], "totorchimage (class in foveation.utils.fastaugs.transforms)": [[34, "foveation.utils.fastaugs.transforms.ToTorchImage", false]], "train() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.train", false]], "train_loop() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.train_loop", false]], "trainer (class in foveation.trainer)": [[28, "foveation.trainer.Trainer", false]], "trainer (foveation.visualizer.visualizer attribute)": [[41, "foveation.visualizer.Visualizer.trainer", false]], "transform_sampling_grid() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.transform_sampling_grid", false]], "transformerblock (class in foveation.arch.vit)": [[15, "foveation.arch.vit.TransformerBlock", false]], "translate_mat() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.translate_mat", false]], "trunc_normal_() (in module foveation.utils.lr_scheduling)": [[39, "foveation.utils.lr_scheduling.trunc_normal_", false]], "unflatten() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.unflatten", false]], "unique() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.unique", false]], "unique_consecutive() (foveation.utils.fastaugs.functional_tensor.tensor method)": [[32, "foveation.utils.fastaugs.functional_tensor.Tensor.unique_consecutive", false]], "val_loop() (foveation.trainer.trainer method)": [[28, "foveation.trainer.Trainer.val_loop", false]], "val_mat() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.val_mat", false]], "vflip() (in module foveation.utils.fastaugs.functional_tensor)": [[32, "foveation.utils.fastaugs.functional_tensor.vflip", false]], "vicregloss (class in foveation.utils.losses)": [[38, "foveation.utils.losses.VicRegLoss", false]], "vis_cartesian_to_cort_cartesian() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.vis_cartesian_to_cort_cartesian", false]], "vis_cartesian_to_cortical_cartesian_coords() (in module foveation.sensing.manifold)": [[23, "foveation.sensing.manifold.vis_cartesian_to_cortical_cartesian_coords", false]], "vis_cartesian_to_cortical_cylindrical() (in module foveation.sensing.manifold)": [[23, "foveation.sensing.manifold.vis_cartesian_to_cortical_cylindrical", false]], "visiontransformer (class in foveation.arch.vit)": [[15, "foveation.arch.vit.VisionTransformer", false]], "visualize_filter() (foveation.visualizer.visualizer method)": [[41, "foveation.visualizer.Visualizer.visualize_filter", false]], "visualize_filter_over_space() (foveation.visualizer.visualizer method)": [[41, "foveation.visualizer.Visualizer.visualize_filter_over_space", false]], "visualize_filters() (foveation.visualizer.visualizer method)": [[41, "foveation.visualizer.Visualizer.visualize_filters", false]], "visualize_filters() (in module foveation.visualizer)": [[41, "foveation.visualizer.visualize_filters", false]], "visualize_filters_knn() (in module foveation.visualizer)": [[41, "foveation.visualizer.visualize_filters_knn", false]], "visualizer (class in foveation.visualizer)": [[41, "foveation.visualizer.Visualizer", false]], "world_size (foveation.utils.losses.barlowtwinsloss attribute)": [[38, "foveation.utils.losses.BarlowTwinsLoss.world_size", false]], "world_size (foveation.utils.losses.simclrloss attribute)": [[38, "foveation.utils.losses.SimCLRLoss.world_size", false]], "xy_to_colrow() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.xy_to_colrow", false]], "xy_to_rowcol() (in module foveation.sensing.coords)": [[22, "foveation.sensing.coords.xy_to_rowcol", false]], "xyz_to_lms() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.xyz_to_lms", false]], "z_3d() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.z_3d", false]], "z_integrand() (foveation.sensing.manifold.corticalsensormanifold method)": [[23, "foveation.sensing.manifold.CorticalSensorManifold.z_integrand", false]], "zoom() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.zoom", false]], "zoom_mat() (in module foveation.utils.fastaugs.functional)": [[31, "foveation.utils.fastaugs.functional.zoom_mat", false]]}, "objects": {"": [[0, 0, 0, "-", "foveation"]], "foveation": [[1, 0, 0, "-", "arch"], [17, 0, 0, "-", "demo"], [0, 3, 1, "", "get_model_from_base_fn"], [0, 3, 1, "", "get_trainer_from_base_fn"], [18, 0, 0, "-", "paths"], [19, 0, 0, "-", "probes"], [20, 0, 0, "-", "saccadenet"], [21, 0, 0, "-", "sensing"], [28, 0, 0, "-", "trainer"], [29, 0, 0, "-", "utils"], [41, 0, 0, "-", "visualizer"]], "foveation.arch": [[2, 0, 0, "-", "alexnet"], [3, 0, 0, "-", "architectures"], [4, 0, 0, "-", "convnextv2"], [5, 0, 0, "-", "dinov3"], [6, 0, 0, "-", "knn"], [7, 0, 0, "-", "knnalexnet"], [8, 0, 0, "-", "knnconvnextv2"], [9, 0, 0, "-", "knnresnet"], [10, 0, 0, "-", "knnvit"], [11, 0, 0, "-", "mlp"], [12, 0, 0, "-", "norm"], [13, 0, 0, "-", "polar"], [14, 0, 0, "-", "resnet"], [15, 0, 0, "-", "vit"], [16, 0, 0, "-", "wrapper"]], "foveation.arch.alexnet": [[2, 1, 1, "", "ConvBlock"], [2, 3, 1, "", "alexnet2023_baseline"], [2, 3, 1, "", "build_model"], [2, 3, 1, "", "get_backbone"], [2, 3, 1, "", "get_repr_size"]], "foveation.arch.alexnet.ConvBlock": [[2, 2, 1, "", "__init__"]], "foveation.arch.architectures": [[3, 3, 1, "", "arch_wrapper"], [3, 3, 1, "", "saccadenet_alexnet2023_baseline"], [3, 3, 1, "", "saccadenet_alexnet2023_knn"], [3, 3, 1, "", "saccadenet_dinov3"], [3, 3, 1, "", "saccadenet_knnresnet"], [3, 3, 1, "", "saccadenet_knnresnet18"], [3, 3, 1, "", "saccadenet_knnresnet18_dwsep"], [3, 3, 1, "", "saccadenet_knnresnet18_dwsep_lowres"], [3, 3, 1, "", "saccadenet_knnresnet18_lowres"], [3, 3, 1, "", "saccadenet_knnresnet9"], [3, 3, 1, "", "saccadenet_knnresnet9_dwsep"], [3, 3, 1, "", "saccadenet_knnresnet9_dwsep_lowres"], [3, 3, 1, "", "saccadenet_knnresnet9_lowres"], [3, 3, 1, "", "saccadenet_knnvit"], [3, 3, 1, "", "saccadenet_knnvit_base"], [3, 3, 1, "", "saccadenet_knnvit_small"], [3, 3, 1, "", "saccadenet_knnvit_tiny"], [3, 3, 1, "", "saccadenet_resnet18_baseline"], [3, 3, 1, "", "saccadenet_resnet34_baseline"], [3, 3, 1, "", "saccadenet_resnet50_baseline"], [3, 3, 1, "", "saccadenet_vit"], [3, 3, 1, "", "saccadenet_vit_base"], [3, 3, 1, "", "saccadenet_vit_small"], [3, 3, 1, "", "saccadenet_vit_tiny"]], "foveation.arch.convnextv2": [[4, 1, 1, "", "Block"], [4, 1, 1, "", "ConvNeXtV2"], [4, 1, 1, "", "GRN"], [4, 1, 1, "", "LayerNorm"], [4, 3, 1, "", "convnext_pico"], [4, 3, 1, "", "convnextv2_atto"], [4, 3, 1, "", "convnextv2_base"], [4, 3, 1, "", "convnextv2_femto"], [4, 3, 1, "", "convnextv2_huge"], [4, 3, 1, "", "convnextv2_large"], [4, 3, 1, "", "convnextv2_nano"], [4, 3, 1, "", "convnextv2_tiny"]], "foveation.arch.convnextv2.Block": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "forward"]], "foveation.arch.convnextv2.ConvNeXtV2": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "forward"], [4, 2, 1, "", "forward_features"]], "foveation.arch.convnextv2.GRN": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "forward"]], "foveation.arch.convnextv2.LayerNorm": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "forward"]], "foveation.arch.dinov3": [[5, 3, 1, "", "build_dinov3"], [5, 3, 1, "", "load_dinov3"], [5, 3, 1, "", "prep_dinov3_finetuning"], [5, 3, 1, "", "resample_patch_embed_conv"]], "foveation.arch.knn": [[6, 1, 1, "", "KNNBaseLayer"], [6, 1, 1, "", "KNNConvLayer"], [6, 1, 1, "", "KNNDepthwiseConvLayer"], [6, 1, 1, "", "KNNDepthwiseSeparableConvLayer"], [6, 1, 1, "", "KNNPoolingLayer"], [6, 3, 1, "", "compute_binary_receptive_field"], [6, 3, 1, "", "compute_receptive_field"], [6, 3, 1, "", "get_in_out_coords"]], "foveation.arch.knn.KNNBaseLayer": [[6, 2, 1, "", "_compute_euclidean_distances_batched"], [6, 2, 1, "", "_compute_geodesic_distances"], [6, 2, 1, "", "_compute_knns"]], "foveation.arch.knn.KNNConvLayer": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "_apply_local_rf"], [6, 2, 1, "", "_apply_local_rf_to_weights"], [6, 2, 1, "", "_init_conv_like"], [6, 2, 1, "", "_pad_and_gather_knns"], [6, 2, 1, "", "compute_local_rf"], [6, 2, 1, "", "compute_reference_coords"], [6, 2, 1, "", "forward"]], "foveation.arch.knn.KNNDepthwiseConvLayer": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "_init_depthwise_conv_like"], [6, 2, 1, "", "forward"]], "foveation.arch.knn.KNNDepthwiseSeparableConvLayer": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "_init_depthwise_separable_conv_like"], [6, 2, 1, "", "forward"]], "foveation.arch.knn.KNNPoolingLayer": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "_compute_gaussian_weights"], [6, 2, 1, "", "forward"]], "foveation.arch.knnalexnet": [[7, 1, 1, "", "KNNAlexNet"], [7, 1, 1, "", "KNNAlexNetBlock"]], "foveation.arch.knnalexnet.KNNAlexNet": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "forward"]], "foveation.arch.knnalexnet.KNNAlexNetBlock": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "forward"]], "foveation.arch.knnconvnextv2": [[8, 1, 1, "", "Block"], [8, 1, 1, "", "ConvNeXtV2"], [8, 1, 1, "", "GRN"], [8, 1, 1, "", "LayerNorm"], [8, 3, 1, "", "knnconvnextv2_atto"], [8, 3, 1, "", "knnconvnextv2_base"], [8, 3, 1, "", "knnconvnextv2_femto"], [8, 3, 1, "", "knnconvnextv2_huge"], [8, 3, 1, "", "knnconvnextv2_large"], [8, 3, 1, "", "knnconvnextv2_nano"], [8, 3, 1, "", "knnconvnextv2_pico"], [8, 3, 1, "", "knnconvnextv2_tiny"]], "foveation.arch.knnconvnextv2.Block": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "forward"]], "foveation.arch.knnconvnextv2.ConvNeXtV2": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "forward"], [8, 2, 1, "", "forward_features"]], "foveation.arch.knnconvnextv2.GRN": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "forward"]], "foveation.arch.knnconvnextv2.LayerNorm": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "forward"]], "foveation.arch.knnresnet": [[9, 1, 1, "", "KNNResNet"], [9, 1, 1, "", "KNNResNetBasicBlock"]], "foveation.arch.knnresnet.KNNResNet": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "_make_layer"], [9, 2, 1, "", "forward"]], "foveation.arch.knnresnet.KNNResNetBasicBlock": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "forward"]], "foveation.arch.knnvit": [[10, 1, 1, "", "DinoV3RoPE"], [10, 1, 1, "", "KNNPartitioningPatchEmbedding"], [10, 1, 1, "", "KNNPatchEmbedding"], [10, 1, 1, "", "KNNViT"], [10, 1, 1, "", "PartitioningPatchEmbedding"]], "foveation.arch.knnvit.DinoV3RoPE": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "forward"], [10, 4, 1, "", "inv_freq"]], "foveation.arch.knnvit.KNNPartitioningPatchEmbedding": [[10, 2, 1, "", "__init__"]], "foveation.arch.knnvit.KNNPatchEmbedding": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "forward"], [10, 2, 1, "", "load_weights"]], "foveation.arch.knnvit.KNNViT": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "forward"]], "foveation.arch.knnvit.PartitioningPatchEmbedding": [[10, 2, 1, "", "__init__"]], "foveation.arch.mlp": [[11, 1, 1, "", "LayerBlock"], [11, 1, 1, "", "MLPWrapper"], [11, 3, 1, "", "get_mlp"]], "foveation.arch.mlp.LayerBlock": [[11, 2, 1, "", "__init__"]], "foveation.arch.mlp.MLPWrapper": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "forward"]], "foveation.arch.norm": [[12, 1, 1, "", "KNNBatchNorm"], [12, 1, 1, "", "KNNChannelNorm"], [12, 1, 1, "", "KNNCoordNorm"], [12, 1, 1, "", "KNNGroupNorm"], [12, 1, 1, "", "KNNLayerNorm"], [12, 3, 1, "", "find_valid_num_groups"], [12, 3, 1, "", "get_norm"]], "foveation.arch.norm.KNNBatchNorm": [[12, 2, 1, "", "__init__"]], "foveation.arch.norm.KNNChannelNorm": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "forward"]], "foveation.arch.norm.KNNCoordNorm": [[12, 2, 1, "", "__init__"]], "foveation.arch.norm.KNNGroupNorm": [[12, 2, 1, "", "__init__"]], "foveation.arch.norm.KNNLayerNorm": [[12, 2, 1, "", "__init__"]], "foveation.arch.polar": [[13, 1, 1, "", "PolarPadder"], [13, 3, 1, "", "convert_model_to_polar"]], "foveation.arch.polar.PolarPadder": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "forward"]], "foveation.arch.resnet": [[14, 1, 1, "", "BasicBlockPolar"], [14, 1, 1, "", "BottleneckPolar"], [14, 1, 1, "", "ResNet"], [14, 3, 1, "", "conv3x3_polar"], [14, 3, 1, "", "conv_polar"], [14, 3, 1, "", "get_repr_size"], [14, 3, 1, "", "resnet101"], [14, 3, 1, "", "resnet18"], [14, 3, 1, "", "resnet34"], [14, 3, 1, "", "resnet50"], [14, 3, 1, "", "resnet_ssl"]], "foveation.arch.resnet.BasicBlockPolar": [[14, 2, 1, "", "__init__"], [14, 4, 1, "", "expansion"], [14, 2, 1, "", "forward"]], "foveation.arch.resnet.BottleneckPolar": [[14, 2, 1, "", "__init__"], [14, 4, 1, "", "expansion"], [14, 2, 1, "", "forward"]], "foveation.arch.resnet.ResNet": [[14, 2, 1, "", "__init__"]], "foveation.arch.vit": [[15, 1, 1, "", "MultiHeadSelfAttention"], [15, 1, 1, "", "PatchEmbedding"], [15, 1, 1, "", "PositionalEncoding"], [15, 1, 1, "", "RoPEMultiHeadSelfAttention"], [15, 1, 1, "", "RoPEPositionalEncoding"], [15, 1, 1, "", "RoPETransformerBlock"], [15, 1, 1, "", "TransformerBlock"], [15, 1, 1, "", "VisionTransformer"], [15, 3, 1, "", "apply_2d_rotary_pos_emb"]], "foveation.arch.vit.MultiHeadSelfAttention": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "forward"]], "foveation.arch.vit.PatchEmbedding": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "forward"]], "foveation.arch.vit.PositionalEncoding": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "forward"]], "foveation.arch.vit.RoPEMultiHeadSelfAttention": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "forward"]], "foveation.arch.vit.RoPEPositionalEncoding": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "forward"]], "foveation.arch.vit.RoPETransformerBlock": [[15, 2, 1, "", "__init__"]], "foveation.arch.vit.TransformerBlock": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "forward"]], "foveation.arch.vit.VisionTransformer": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "_init_weights"], [15, 2, 1, "", "forward"]], "foveation.arch.wrapper": [[16, 1, 1, "", "BackboneProjectorWrapper"]], "foveation.arch.wrapper.BackboneProjectorWrapper": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "forward"]], "foveation.demo": [[17, 3, 1, "", "get_image_as_batch"]], "foveation.probes": [[19, 1, 1, "", "LinearProbe"], [19, 1, 1, "", "SaccadeNetProbe"], [19, 1, 1, "", "SaccadeNetProbes"]], "foveation.probes.LinearProbe": [[19, 2, 1, "", "__init__"], [19, 4, 1, "", "dropout"], [19, 2, 1, "", "forward"], [19, 4, 1, "", "probe"]], "foveation.probes.SaccadeNetProbe": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "_init_fix_agg"], [19, 4, 1, "", "dropout"], [19, 4, 1, "", "fix_agg"], [19, 2, 1, "", "forward"], [19, 4, 1, "", "num_classes"], [19, 4, 1, "", "num_features"]], "foveation.probes.SaccadeNetProbes": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "_init_probes"], [19, 4, 1, "", "dropout"], [19, 4, 1, "", "fix_agg"], [19, 2, 1, "", "forward"], [19, 4, 1, "", "mlp_spec"], [19, 4, 1, "", "num_classes"], [19, 4, 1, "", "probes"]], "foveation.saccadenet": [[20, 1, 1, "", "SaccadeNet"]], "foveation.saccadenet.SaccadeNet": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "cleanup_activation_hooks"], [20, 2, 1, "", "forward"], [20, 2, 1, "", "forward_ssl"], [20, 2, 1, "", "forward_supervised"], [20, 2, 1, "", "get_activations"], [20, 2, 1, "", "get_captured_activations"], [20, 2, 1, "", "get_in_channels"], [20, 2, 1, "", "get_num_coords"], [20, 2, 1, "", "get_repr_sizes"], [20, 2, 1, "", "get_transforms"], [20, 2, 1, "", "init_fixation_system"], [20, 2, 1, "", "list_available_layers"], [20, 2, 1, "", "list_knn_layers"], [20, 2, 1, "", "setup_activation_hooks"], [20, 2, 1, "", "to"]], "foveation.sensing": [[22, 0, 0, "-", "coords"], [23, 0, 0, "-", "manifold"], [24, 0, 0, "-", "policies"], [25, 0, 0, "-", "retina"], [26, 0, 0, "-", "saliency"], [27, 0, 0, "-", "samplers"]], "foveation.sensing.coords": [[22, 1, 1, "", "SamplingCoords"], [22, 3, 1, "", "_compute_isotropic_r_and_num_theta"], [22, 3, 1, "", "auto_match_num_coords"], [22, 3, 1, "", "cart_to_complex_log"], [22, 3, 1, "", "cart_to_polar"], [22, 3, 1, "", "find_desired_res"], [22, 3, 1, "", "get_isotropic_sampling_coords"], [22, 3, 1, "", "get_logpolar_image_sampling_coords"], [22, 3, 1, "", "get_sampling_coords"], [22, 3, 1, "", "logpolar_radius"], [22, 3, 1, "", "num_sampling_coords"], [22, 3, 1, "", "num_sampling_coords_isotropic"], [22, 3, 1, "", "polar_to_cart"], [22, 3, 1, "", "rowcol_to_xy"], [22, 3, 1, "", "transform_sampling_grid"], [22, 3, 1, "", "xy_to_colrow"], [22, 3, 1, "", "xy_to_rowcol"]], "foveation.sensing.coords.SamplingCoords": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "clone"], [22, 2, 1, "", "get_scatter_sizes"], [22, 2, 1, "", "get_strided_coords"], [22, 2, 1, "", "pad_cartesian"], [22, 2, 1, "", "to"]], "foveation.sensing.manifold": [[23, 1, 1, "", "CorticalSensorManifold"], [23, 3, 1, "", "cortical_cylindrical_to_cortical_cartesian"], [23, 3, 1, "", "vis_cartesian_to_cortical_cartesian_coords"], [23, 3, 1, "", "vis_cartesian_to_cortical_cylindrical"]], "foveation.sensing.manifold.CorticalSensorManifold": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "cort_cartesian_to_cort_cylindrical"], [23, 2, 1, "", "cylindrical_to_visual_polar"], [23, 2, 1, "", "dm_dr"], [23, 2, 1, "", "drho_dr"], [23, 2, 1, "", "init_cortical_mesh"], [23, 2, 1, "", "init_visual_mesh"], [23, 2, 1, "", "m"], [23, 2, 1, "", "map_3d"], [23, 2, 1, "", "map_to_xyz"], [23, 2, 1, "", "normalize_coords"], [23, 2, 1, "", "phi_3d"], [23, 2, 1, "", "r_from_z"], [23, 2, 1, "", "reverse_map"], [23, 2, 1, "", "rho_3d"], [23, 2, 1, "", "vis_cartesian_to_cort_cartesian"], [23, 2, 1, "", "z_3d"], [23, 2, 1, "", "z_integrand"]], "foveation.sensing.policies": [[24, 1, 1, "", "BaseSaccadePolicy"], [24, 1, 1, "", "MultiRandomSaccadePolicy"], [24, 1, 1, "", "NoSaccadePolicy"]], "foveation.sensing.policies.BaseSaccadePolicy": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "get_random_crop"], [24, 2, 1, "", "get_random_nearcenter_fixation"], [24, 2, 1, "", "sample_fixations"]], "foveation.sensing.policies.MultiRandomSaccadePolicy": [[24, 2, 1, "", "__init__"], [24, 4, 1, "", "fixation_size"], [24, 2, 1, "", "forward"], [24, 4, 1, "", "multi_policy"], [24, 4, 1, "", "n_fixations"], [24, 4, 1, "", "nonrandom_val"], [24, 4, 1, "", "norm_dist_from_center"], [24, 4, 1, "", "retinal_transform"]], "foveation.sensing.policies.NoSaccadePolicy": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "forward"], [24, 4, 1, "", "retinal_transform"]], "foveation.sensing.retina": [[25, 1, 1, "", "GaussianColorDecay"], [25, 1, 1, "", "RetinalTransform"], [25, 3, 1, "", "get_min_cmf_a"], [25, 3, 1, "", "min_diff_for_cmf_a"]], "foveation.sensing.retina.GaussianColorDecay": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "forward"]], "foveation.sensing.retina.RetinalTransform": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "_apply_aspect_ratio"], [25, 2, 1, "", "_check_aspect_ratio"], [25, 2, 1, "", "_check_fix_loc"], [25, 2, 1, "", "_check_fixation_size"], [25, 2, 1, "", "change_sigma"], [25, 2, 1, "", "forward"], [25, 2, 1, "", "get_warp_params"]], "foveation.sensing.saliency": [[26, 3, 1, "", "get_center_bias"], [26, 3, 1, "", "sample_from_logdensity"], [26, 3, 1, "", "sample_from_logits_pc"]], "foveation.sensing.samplers": [[27, 1, 1, "", "BaseGridSampler"], [27, 1, 1, "", "GaussianKNNGridSampler"], [27, 1, 1, "", "GridSampler"], [27, 1, 1, "", "KNNGridSampler"]], "foveation.sensing.samplers.BaseGridSampler": [[27, 2, 1, "", "_prep_grid_for_grid_sample"], [27, 2, 1, "", "_transform_fix_grid"]], "foveation.sensing.samplers.GaussianKNNGridSampler": [[27, 2, 1, "", "__init__"]], "foveation.sensing.samplers.GridSampler": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "all_coords"], [27, 2, 1, "", "forward"]], "foveation.sensing.samplers.KNNGridSampler": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "all_coords"], [27, 2, 1, "", "forward"]], "foveation.trainer": [[28, 1, 1, "", "Trainer"], [28, 3, 1, "", "find_config"], [28, 3, 1, "", "load_config"]], "foveation.trainer.Trainer": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "add_supervised_meters"], [28, 2, 1, "", "checkpoint"], [28, 2, 1, "", "cleanup_distributed"], [28, 2, 1, "", "compute_activations"], [28, 2, 1, "", "copy_hydra_outputs"], [28, 2, 1, "", "create_model_and_scaler"], [28, 2, 1, "", "create_optimizer"], [28, 2, 1, "", "create_standard_loader"], [28, 2, 1, "", "create_train_loader"], [28, 2, 1, "", "create_val_loader"], [28, 2, 1, "", "eval_and_log"], [28, 2, 1, "", "exec"], [28, 2, 1, "", "final_accuracy"], [28, 2, 1, "", "initialize_logger"], [28, 2, 1, "", "initialize_remote_logger"], [28, 2, 1, "", "launch_from_args"], [28, 2, 1, "", "load_checkpoint"], [28, 2, 1, "", "log"], [28, 2, 1, "", "reset_model"], [28, 2, 1, "", "save_checkpoint"], [28, 2, 1, "", "setup_distributed"], [28, 2, 1, "", "train"], [28, 2, 1, "", "train_loop"], [28, 2, 1, "", "val_loop"]], "foveation.utils": [[29, 1, 1, "", "HiddenPrints"], [29, 3, 1, "", "add_to_all"], [29, 3, 1, "", "analyze_rf"], [30, 0, 0, "-", "fastaugs"], [29, 3, 1, "", "flatten_dict"], [35, 0, 0, "-", "flops"], [29, 3, 1, "", "get_model"], [29, 3, 1, "", "get_random_name"], [36, 0, 0, "-", "knnprobe"], [29, 3, 1, "", "load_pretrained"], [37, 0, 0, "-", "lora"], [38, 0, 0, "-", "losses"], [39, 0, 0, "-", "lr_scheduling"], [29, 3, 1, "", "normalize"], [29, 3, 1, "", "normalize_imagenet"], [29, 3, 1, "", "reproducible_results"], [40, 0, 0, "-", "std_transforms"], [29, 3, 1, "", "timeit"]], "foveation.utils.HiddenPrints": [[29, 2, 1, "", "__init__"]], "foveation.utils.fastaugs": [[31, 0, 0, "-", "functional"], [32, 0, 0, "-", "functional_tensor"], [34, 0, 0, "-", "transforms"]], "foveation.utils.fastaugs.functional": [[31, 3, 1, "id4", "_get_scale_factor"], [31, 3, 1, "", "_grid_sample"], [31, 3, 1, "", "_prepare_coords"], [31, 3, 1, "", "_prepare_mat"], [31, 3, 1, "", "_prepare_param"], [31, 3, 1, "", "_prepare_rot_pt"], [31, 3, 1, "", "_prepare_thetas"], [31, 3, 1, "", "adjust_brightness"], [31, 3, 1, "", "adjust_brightness_pil"], [31, 3, 1, "", "adjust_contrast"], [31, 3, 1, "", "adjust_contrast_logit"], [31, 3, 1, "", "adjust_contrast_pil"], [31, 3, 1, "", "adjust_rms_contrast"], [31, 3, 1, "", "adjust_rms_contrast_logit"], [31, 3, 1, "", "affine_transform"], [31, 3, 1, "", "apply_mask"], [31, 3, 1, "", "crop"], [31, 3, 1, "", "div_"], [31, 3, 1, "", "dummy_red"], [31, 3, 1, "", "flip_mat"], [31, 3, 1, "", "generate_batch_permutations"], [31, 3, 1, "", "grid_sample"], [31, 3, 1, "", "hsv_jitter"], [31, 3, 1, "", "hsv_jitter2"], [31, 3, 1, "", "hsv_jitter_array"], [31, 3, 1, "", "hsv_jitter_array2"], [31, 3, 1, "", "hsv_jitter_tensor"], [31, 3, 1, "", "hsv_mat"], [31, 3, 1, "", "hsv_mat2"], [31, 3, 1, "", "hue_mat"], [31, 3, 1, "", "lms_to_lgrby"], [31, 3, 1, "", "logit"], [31, 3, 1, "id0", "mask_batch"], [31, 3, 1, "", "mask_tensor"], [31, 3, 1, "", "mat3"], [31, 3, 1, "id1", "normalize"], [31, 3, 1, "", "radians"], [31, 3, 1, "", "random_adjust_brightness"], [31, 3, 1, "", "random_adjust_contrast"], [31, 3, 1, "", "random_gaussian_blur2d"], [31, 3, 1, "", "random_grayscale"], [31, 3, 1, "id13", "random_grid_sample"], [31, 3, 1, "", "random_hsv_jitter2"], [31, 3, 1, "", "random_solarization"], [31, 3, 1, "", "rgb_to_xyz"], [31, 3, 1, "", "rotate"], [31, 3, 1, "", "rotate_mat"], [31, 3, 1, "", "rotate_object"], [31, 3, 1, "", "rotate_object_mat"], [31, 3, 1, "", "sat_mat"], [31, 3, 1, "", "set_trace"], [31, 3, 1, "", "sigmoid"], [31, 3, 1, "", "solarization"], [31, 3, 1, "", "srgb_to_lms"], [31, 3, 1, "", "srgb_to_lrgb"], [31, 3, 1, "id2", "to_channels_first"], [31, 3, 1, "id3", "to_channels_last"], [31, 3, 1, "", "to_device"], [31, 3, 1, "", "to_float"], [31, 3, 1, "", "to_grayscale"], [31, 3, 1, "", "to_numpy"], [31, 3, 1, "", "to_torch_image"], [31, 3, 1, "", "translate_mat"], [31, 3, 1, "", "val_mat"], [31, 3, 1, "", "xyz_to_lms"], [31, 3, 1, "", "zoom"], [31, 3, 1, "", "zoom_mat"]], "foveation.utils.fastaugs.functional_tensor": [[32, 1, 1, "", "Tensor"], [32, 3, 1, "", "_get_sbc_mat"], [32, 3, 1, "", "adjust_brightness"], [32, 3, 1, "", "adjust_contrast"], [32, 3, 1, "", "adjust_gamma"], [32, 3, 1, "", "adjust_hue"], [32, 3, 1, "", "adjust_hue_fast"], [32, 3, 1, "", "adjust_saturation"], [32, 3, 1, "", "adjust_sharpness"], [32, 3, 1, "", "affine"], [32, 3, 1, "", "autocontrast"], [32, 3, 1, "", "center_crop"], [32, 3, 1, "", "color_jitter"], [32, 3, 1, "", "conv2d"], [32, 3, 1, "", "convert_image_dtype"], [32, 3, 1, "", "crop"], [32, 3, 1, "", "equalize"], [32, 3, 1, "", "five_crop"], [32, 3, 1, "", "gaussian_blur"], [32, 3, 1, "", "get_image_num_channels"], [32, 3, 1, "", "get_image_size"], [32, 3, 1, "", "grid_sample"], [32, 3, 1, "", "hflip"], [32, 3, 1, "", "interpolate"], [32, 3, 1, "", "invert"], [32, 3, 1, "", "mat3"], [32, 3, 1, "", "pad"], [32, 3, 1, "", "perspective"], [32, 3, 1, "", "posterize"], [32, 3, 1, "", "random_color_jitter"], [32, 3, 1, "", "resize"], [32, 3, 1, "", "rgb_to_grayscale"], [32, 3, 1, "", "rotate"], [32, 3, 1, "", "solarize"], [32, 3, 1, "", "ten_crop"], [32, 3, 1, "", "torch_pad"], [32, 3, 1, "", "vflip"]], "foveation.utils.fastaugs.functional_tensor.Tensor": [[32, 2, 1, "", "_clear_non_serializable_cached_data"], [32, 2, 1, "", "align_to"], [32, 2, 1, "", "backward"], [32, 2, 1, "", "detach"], [32, 2, 1, "", "detach_"], [32, 2, 1, "", "dim_order"], [32, 2, 1, "", "eig"], [32, 2, 1, "", "is_shared"], [32, 2, 1, "", "istft"], [32, 2, 1, "", "lstsq"], [32, 2, 1, "", "lu"], [32, 2, 1, "", "module_load"], [32, 2, 1, "", "norm"], [32, 2, 1, "", "refine_names"], [32, 2, 1, "", "register_hook"], [32, 2, 1, "", "register_post_accumulate_grad_hook"], [32, 2, 1, "", "reinforce"], [32, 2, 1, "", "rename"], [32, 2, 1, "", "rename_"], [32, 2, 1, "", "resize"], [32, 2, 1, "", "resize_as"], [32, 2, 1, "", "share_memory_"], [32, 2, 1, "", "solve"], [32, 2, 1, "", "split"], [32, 2, 1, "", "stft"], [32, 2, 1, "", "storage"], [32, 2, 1, "", "storage_type"], [32, 2, 1, "", "symeig"], [32, 2, 1, "", "to_sparse_coo"], [32, 2, 1, "", "unflatten"], [32, 2, 1, "", "unique"], [32, 2, 1, "", "unique_consecutive"]], "foveation.utils.fastaugs.transforms": [[34, 1, 1, "", "CircularMask"], [34, 1, 1, "", "ColorJitter"], [34, 1, 1, "", "Compose"], [34, 1, 1, "", "MultiSample"], [34, 1, 1, "", "NormalizeGPU"], [34, 1, 1, "", "RandomApply"], [34, 1, 1, "", "RandomBrightness"], [34, 1, 1, "", "RandomColorJitter"], [34, 1, 1, "", "RandomColorJitterYIQ"], [34, 1, 1, "", "RandomContrast"], [34, 1, 1, "", "RandomGaussianBlur"], [34, 1, 1, "", "RandomGrayscale"], [34, 1, 1, "", "RandomHorizontalFlip"], [34, 1, 1, "", "RandomPatchShuffle"], [34, 1, 1, "", "RandomRotate"], [34, 1, 1, "", "RandomRotateObject"], [34, 1, 1, "", "RandomSolarization"], [34, 1, 1, "", "RandomZoom"], [34, 1, 1, "", "ToChannelsFirst"], [34, 1, 1, "", "ToChannelsLast"], [34, 1, 1, "", "ToDevice"], [34, 1, 1, "", "ToFloat"], [34, 1, 1, "", "ToFloatDiv"], [34, 1, 1, "", "ToGrayscaleGPU"], [34, 1, 1, "", "ToGrayscaleTorchGPU"], [34, 1, 1, "", "ToNumpy"], [34, 1, 1, "", "ToTorchImage"]], "foveation.utils.fastaugs.transforms.CircularMask": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "before_call"], [34, 5, 1, "", "blur_radius"], [34, 2, 1, "", "draw_params"], [34, 2, 1, "", "last_params"], [34, 2, 1, "", "replay"]], "foveation.utils.fastaugs.transforms.ColorJitter": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "last_params"], [34, 2, 1, "", "sample_params"]], "foveation.utils.fastaugs.transforms.Compose": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"]], "foveation.utils.fastaugs.transforms.MultiSample": [[34, 2, 1, "", "__init__"]], "foveation.utils.fastaugs.transforms.NormalizeGPU": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "last_params"], [34, 2, 1, "", "op"]], "foveation.utils.fastaugs.transforms.RandomApply": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "last_params"]], "foveation.utils.fastaugs.transforms.RandomBrightness": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "last_params"]], "foveation.utils.fastaugs.transforms.RandomColorJitter": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "last_params"], [34, 2, 1, "", "sample_params"]], "foveation.utils.fastaugs.transforms.RandomColorJitterYIQ": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "last_params"], [34, 2, 1, "", "sample_params"]], "foveation.utils.fastaugs.transforms.RandomContrast": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "last_params"]], "foveation.utils.fastaugs.transforms.RandomGaussianBlur": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "last_params"]], "foveation.utils.fastaugs.transforms.RandomGrayscale": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "last_params"]], "foveation.utils.fastaugs.transforms.RandomHorizontalFlip": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "last_params"]], "foveation.utils.fastaugs.transforms.RandomPatchShuffle": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "last_params"], [34, 2, 1, "", "random_choice"]], "foveation.utils.fastaugs.transforms.RandomRotate": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "draw_params"], [34, 2, 1, "", "last_params"], [34, 2, 1, "", "replay"]], "foveation.utils.fastaugs.transforms.RandomRotateObject": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "draw_params"], [34, 2, 1, "", "last_params"], [34, 2, 1, "", "replay"]], "foveation.utils.fastaugs.transforms.RandomSolarization": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "last_params"]], "foveation.utils.fastaugs.transforms.RandomZoom": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "before_call"], [34, 2, 1, "", "draw_params"], [34, 2, 1, "", "last_params"], [34, 2, 1, "", "replay"]], "foveation.utils.fastaugs.transforms.ToChannelsFirst": [[34, 2, 1, "", "apply_last"], [34, 2, 1, "", "last_params"]], "foveation.utils.fastaugs.transforms.ToChannelsLast": [[34, 2, 1, "", "apply_last"], [34, 2, 1, "", "last_params"]], "foveation.utils.fastaugs.transforms.ToDevice": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "last_params"]], "foveation.utils.fastaugs.transforms.ToFloat": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "last_params"]], "foveation.utils.fastaugs.transforms.ToFloatDiv": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "last_params"]], "foveation.utils.fastaugs.transforms.ToGrayscaleGPU": [[34, 2, 1, "", "__init__"]], "foveation.utils.fastaugs.transforms.ToGrayscaleTorchGPU": [[34, 2, 1, "", "__init__"]], "foveation.utils.fastaugs.transforms.ToNumpy": [[34, 2, 1, "", "apply_last"], [34, 2, 1, "", "last_params"]], "foveation.utils.fastaugs.transforms.ToTorchImage": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "apply_last"], [34, 2, 1, "", "last_params"]], "foveation.utils.flops": [[35, 1, 1, "", "FlopWrapper"], [35, 3, 1, "", "_int_list_from_value"], [35, 3, 1, "", "get_flops_df"], [35, 3, 1, "", "make_flop_counter"], [35, 3, 1, "", "measure_latency"]], "foveation.utils.flops.FlopWrapper": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "forward"], [35, 2, 1, "", "get_inputs"]], "foveation.utils.knnprobe": [[36, 3, 1, "", "knn_classifier"], [36, 3, 1, "", "knn_probe"]], "foveation.utils.lora": [[37, 1, 1, "", "LoRAParam"], [37, 3, 1, "", "apply_lora"], [37, 3, 1, "", "remove_lora"]], "foveation.utils.lora.LoRAParam": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "forward"]], "foveation.utils.losses": [[38, 1, 1, "", "BarlowTwinsLoss"], [38, 1, 1, "", "SimCLRLoss"], [38, 1, 1, "", "VicRegLoss"]], "foveation.utils.losses.BarlowTwinsLoss": [[38, 2, 1, "", "__init__"], [38, 4, 1, "", "batch_size"], [38, 4, 1, "", "bn"], [38, 2, 1, "", "forward"], [38, 4, 1, "", "lambd"], [38, 4, 1, "", "world_size"]], "foveation.utils.losses.SimCLRLoss": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "accuracy"], [38, 4, 1, "", "batch_size"], [38, 2, 1, "", "compute_logits"], [38, 4, 1, "", "criterion"], [38, 2, 1, "", "forward"], [38, 4, 1, "", "mask"], [38, 2, 1, "", "mask_correlated_samples"], [38, 4, 1, "", "pairs_per_sample"], [38, 4, 1, "", "similarity_f"], [38, 4, 1, "", "temperature"], [38, 4, 1, "", "world_size"]], "foveation.utils.losses.VicRegLoss": [[38, 2, 1, "", "__init__"], [38, 4, 1, "", "cov_coeff"], [38, 2, 1, "", "forward"], [38, 4, 1, "", "sim_coeff"], [38, 4, 1, "", "std_coeff"]], "foveation.utils.lr_scheduling": [[39, 1, 1, "", "CosineDecayWithWarmup"], [39, 1, 1, "", "LARS"], [39, 3, 1, "", "cosine_decay"], [39, 3, 1, "", "cosine_scheduler"], [39, 3, 1, "", "learning_schedule"], [39, 3, 1, "", "trunc_normal_"]], "foveation.utils.lr_scheduling.CosineDecayWithWarmup": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "load_state_dict"], [39, 2, 1, "", "state_dict"]], "foveation.utils.lr_scheduling.LARS": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "step"]], "foveation.utils.std_transforms": [[40, 3, 1, "", "get_std_transforms"]], "foveation.visualizer": [[41, 1, 1, "", "Visualizer"], [41, 3, 1, "", "get_first_conv_weights"], [41, 3, 1, "", "visualize_filters"], [41, 3, 1, "", "visualize_filters_knn"]], "foveation.visualizer.Visualizer": [[41, 2, 1, "", "__init__"], [41, 4, 1, "", "model"], [41, 2, 1, "", "multi_fixation_accuracy"], [41, 4, 1, "", "out_base_dir"], [41, 4, 1, "", "out_dir"], [41, 2, 1, "", "plot_coordinates"], [41, 2, 1, "", "plot_rf_diameters"], [41, 2, 1, "", "plot_sampling_grids"], [41, 2, 1, "", "plot_spatial_rf_from_multi_layers"], [41, 2, 1, "", "print_all_functions"], [41, 4, 1, "", "trainer"], [41, 2, 1, "", "visualize_filter"], [41, 2, 1, "", "visualize_filter_over_space"], [41, 2, 1, "", "visualize_filters"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "terms": {"": [5, 11, 19, 20, 24, 31, 32, 34, 35, 41, 44, 46, 47, 48, 49], "0": [4, 5, 6, 7, 8, 9, 10, 15, 22, 23, 24, 25, 26, 31, 32, 34, 36, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50], "00": [45, 47, 48, 49, 50], "0005": 34, "001": 39, "01": [22, 32, 44, 47, 48, 49], "0100": 32, "02": 49, "0200": 32, "0300": 32, "05": [44, 45, 46, 47, 48, 49], "05709": 34, "06": 49, "07": 36, "08": 24, "09it": [45, 47, 48], "1": [2, 4, 5, 6, 8, 9, 10, 14, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 38, 39, 41, 46, 47, 48, 49, 50], "10": [6, 23, 28, 29, 34, 44, 45, 46, 47, 48], "100": [35, 41, 44, 45, 47, 49, 50], "1000": [4, 8, 10, 14, 15, 19, 22, 31, 36, 44, 46, 47, 48, 50], "10000": 23, "100000": 44, "101": 14, "1024": [46, 47, 48, 50], "103": 47, "104157": 32, "106": [47, 50], "11": [22, 32, 45, 46, 47, 48, 50], "111": 44, "114": 31, "11it": 45, "12": [3, 10, 15, 45, 46], "121": [45, 46, 48], "122": 45, "128": [32, 45, 46, 48], "1281167": 48, "13": [45, 46, 47, 48, 49, 50], "131": 44, "132": [44, 45], "133": 44, "137": 45, "138": [46, 48], "14x14": 50, "15": [25, 34, 38, 44, 45], "150": 44, "1536": 47, "16": [7, 9, 10, 15, 25, 41, 44, 45, 46, 47, 48, 49, 50], "160": 49, "16183": 45, "16x": 50, "16x16": 50, "17": 49, "173": 44, "177": 44, "178": 47, "18": 14, "180": [23, 34], "19": 49, "192": [3, 4, 8], "1980": 23, "1984": [23, 44], "19it": 49, "1_re": [46, 48, 50], "1d": [25, 44], "1e": [4, 6, 8, 31, 38, 46, 47, 48], "1f": 44, "1k": 48, "2": [2, 3, 6, 7, 9, 15, 20, 22, 23, 24, 25, 26, 27, 31, 32, 34, 38, 39, 41, 46, 47, 48, 49, 50], "20": [35, 36, 41, 44, 45, 49], "200": [25, 41, 44, 49], "2002": 34, "2009": 23, "2017": 38, "2025": [54, 55], "2048": 38, "22": 49, "224": [2, 10, 14, 15, 20, 34, 49], "2240": [46, 47, 48, 50], "224x224": 50, "2250": [46, 47, 48, 50], "2290": [46, 47, 48, 50], "23": [48, 49], "230": [46, 48, 50], "24": 34, "25": [32, 34, 38, 45, 46, 48], "255": [31, 32], "256": [25, 26, 38, 46, 48, 50], "26": [46, 48, 50], "266": [46, 47, 50], "27": 46, "28": 49, "299": 31, "2d": [15, 32, 37, 45], "2nd": 32, "2x3x4x5": 31, "3": [2, 3, 4, 8, 9, 10, 14, 15, 20, 23, 27, 28, 31, 32, 34, 38, 41, 44, 46, 47, 48, 49, 50, 54, 55], "30": [34, 45, 48, 49], "3000": 27, "304": 44, "31": 49, "32": [2, 12, 32], "322": 47, "327": [46, 48], "332": 50, "34": [14, 48], "3433196042": 47, "35": 48, "3595": 48, "36": 48, "360": 31, "37": 48, "373": 50, "376": 47, "38": 48, "384": [3, 4, 8, 46, 47, 48, 49, 50], "39": [45, 46, 47, 48, 49, 50], "391": 48, "3976": [47, 50], "3d": [23, 32, 41, 44, 45], "3x3": 14, "4": [8, 10, 12, 14, 15, 31, 32, 34, 38, 41, 44, 46, 47, 48, 49, 50], "40": 41, "4060": [46, 47, 48, 50], "4068": 47, "4085": [46, 48, 50], "4096": [46, 47, 48, 50], "41": 49, "42": 49, "4324": [45, 46, 47, 49], "44": [47, 49, 50], "45": 34, "4560": [46, 47, 48, 50], "46": [47, 49], "48": 49, "4850": [46, 47, 48, 50], "48it": 47, "49963": 49, "4d": 32, "4x": 50, "5": [7, 9, 11, 22, 23, 25, 31, 32, 34, 38, 41, 44, 45, 46, 47, 48, 49, 50], "50": [14, 44, 45], "500": 44, "50176": 49, "5096": 45, "51": 49, "512": 48, "53": [46, 48, 50], "534": 48, "53it": 47, "5496": 25, "55": [44, 45], "554": [45, 46, 47, 49], "56": 49, "5781": 48, "57it": 50, "58": 49, "587": 31, "59": [47, 49], "5d": 32, "6": [3, 4, 6, 8, 32, 34, 38, 44, 45, 46, 47, 48, 49, 50], "60": [46, 48, 50], "601": 31, "60521": 32, "639": 47, "64": [9, 14, 45, 46, 47, 48, 49, 50], "640x480": 45, "64_in1k": [46, 47, 48, 50], "64x64": 50, "65": 25, "654": 47, "66": 49, "66it": 50, "7": [31, 32, 41, 44, 45, 46, 47, 48, 50], "701": 47, "70it": 47, "75": [32, 34], "755": 50, "768": [3, 4, 8, 10, 15], "785765": [47, 50], "78_re": [47, 50], "7_": 47, "8": [5, 32, 37, 44, 45, 46, 47, 48, 49, 50], "80": 34, "800": 47, "8000": [54, 55], "80it": 49, "8192": [11, 14], "85it": 47, "867061780": 32, "8x8": 50, "9": [4, 7, 8, 32, 39, 41, 44, 45, 46, 48, 49, 50, 54, 55], "9216": 11, "96": [4, 8, 46, 48, 50], "964": [46, 48, 50], "A": [5, 6, 7, 8, 9, 11, 19, 20, 22, 23, 24, 27, 31, 32, 37, 38, 39, 41, 52], "For": [31, 32, 34, 37, 38, 44, 45, 46, 48, 49, 54, 55], "If": [6, 7, 9, 11, 12, 14, 19, 20, 22, 24, 26, 28, 31, 32, 34, 37, 38, 46, 50, 54, 55], "In": [32, 46, 47], "It": [0, 10, 13, 19, 20, 22, 32, 34, 38, 41, 45], "Not": 34, "One": [32, 45], "The": [0, 4, 5, 6, 8, 11, 15, 16, 19, 20, 24, 31, 32, 34, 38, 41, 44, 45, 46, 47, 48, 54, 55], "Then": [45, 54, 55], "There": 32, "These": [38, 45, 50], "To": [31, 32, 34, 45, 46, 47, 48, 49, 50, 54, 55], "With": 32, "_": [2, 44, 46, 49], "__dict__": 32, "__init__": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 34, 35, 37, 38, 39, 41, 42, 43], "_apply_aspect_ratio": [0, 21, 25, 42, 43], "_apply_local_rf": [0, 1, 6, 42, 43], "_apply_local_rf_to_weight": [0, 1, 6, 42, 43], "_back": 32, "_bottom": 32, "_build": [54, 55], "_channel": 32, "_check_aspect_ratio": [0, 21, 25, 42, 43], "_check_fix_loc": [0, 21, 25, 42, 43, 45, 46, 47, 48, 50], "_check_fixation_s": [0, 21, 25, 42, 43], "_clear_non_serializable_cached_data": [0, 29, 32, 42, 43], "_compute_euclidean_distances_batch": [0, 1, 6, 42, 43], "_compute_gaussian_weight": [0, 1, 6, 42, 43], "_compute_geodesic_dist": [0, 1, 6, 42, 43], "_compute_isotropic_r_and_num_theta": [0, 21, 22, 42, 43], "_compute_knn": [0, 1, 6, 42, 43], "_front": 32, "_get_sbc_mat": [0, 29, 32, 42, 43], "_get_scale_factor": [0, 29, 31, 42, 43], "_gp8wy0500ggx8dgwvfm7_cr0000gn": 47, "_grid_sampl": [0, 29, 31, 42, 43], "_init_conv_lik": [0, 1, 6, 42, 43], "_init_depthwise_conv_lik": [0, 1, 6, 42, 43], "_init_depthwise_separable_conv_lik": [0, 1, 6, 42, 43], "_init_fix_agg": [0, 19, 42, 43], "_init_prob": [0, 19, 42, 43], "_init_weight": [0, 1, 15, 42, 43], "_int_list_from_valu": [0, 29, 35, 42, 43], "_left": 32, "_make_lay": [0, 1, 9, 42, 43], "_nnz": 32, "_pad_and_gather_knn": [0, 1, 6, 42, 43], "_prep_grid_for_grid_sampl": [0, 21, 27, 42, 43], "_prepare_coord": [0, 29, 31, 42, 43], "_prepare_mat": [0, 29, 31, 42, 43], "_prepare_param": [0, 29, 31, 42, 43], "_prepare_rot_pt": [0, 29, 31, 42, 43], "_prepare_theta": [0, 29, 31, 42, 43], "_right": 32, "_top": 32, "_transform_fix_grid": [0, 21, 27, 42, 43], "_vf": [45, 46, 47, 48, 49], "ab": [34, 44], "abl": 32, "about": 46, "abov": 34, "abs_cart_coord": 45, "absolut": [10, 15, 45], "abstract": 6, "access": 32, "accord": [6, 23, 32], "accumul": 32, "accur": 6, "accuraci": [0, 28, 29, 36, 38, 41, 42, 43, 48], "achiev": 22, "acquir": 25, "across": [13, 38, 44, 46], "act": [2, 11, 48], "act_fn": 47, "activ": [7, 11, 20, 46, 54, 55], "activit": 48, "actual": [22, 32, 44], "ad": [7, 8, 9, 15, 32], "adapt": [50, 54, 55], "adaptiveavgpool2d": 13, "add": [0, 15, 28, 37, 44, 47, 49], "add_": 32, "add_aspect_vari": 24, "add_subplot": [44, 45], "add_supervised_met": [0, 28, 42, 43], "add_to_al": [0, 29, 42, 43, 52], "addit": [0, 8, 10, 11, 20, 22, 25, 28, 32, 41], "addition": 32, "adjust": [22, 31, 32, 34, 46, 47, 48, 50], "adjust_bright": [0, 29, 31, 32, 42, 43], "adjust_brightness_pil": [0, 29, 31, 42, 43], "adjust_contrast": [0, 29, 31, 32, 42, 43], "adjust_contrast_logit": [0, 29, 31, 42, 43], "adjust_contrast_pil": [0, 29, 31, 42, 43], "adjust_gamma": [0, 29, 32, 42, 43], "adjust_hu": [0, 29, 32, 42, 43], "adjust_hue_fast": [0, 29, 32, 42, 43], "adjust_rms_contrast": [0, 29, 31, 42, 43], "adjust_rms_contrast_logit": [0, 29, 31, 42, 43], "adjust_satur": [0, 29, 32, 42, 43], "adjust_sharp": [0, 29, 32, 42, 43], "affect": 32, "affin": [0, 29, 31, 32, 42, 43, 46, 48], "affine_grid": [32, 45], "affine_transform": [0, 29, 31, 42, 43], "after": [6, 7, 9, 32, 45, 46, 48], "after_pool": 2, "afterward": [4, 8, 12, 13, 14, 15, 35, 37], "aggreg": [13, 19, 48], "agnost": 32, "aground": 31, "aim": 38, "aka": 34, "akin": 27, "al": 38, "albument": [31, 34], "alexnet": [0, 1, 7, 42, 43, 52], "alexnet2023_baselin": [0, 1, 2, 42, 43], "algorithm": 32, "alia": 32, "alias": 32, "align": [5, 6, 32], "align_corn": [5, 31, 32, 45], "align_to": [0, 29, 32, 42, 43], "align_to_window": 32, "all": [4, 6, 8, 11, 12, 13, 14, 15, 19, 20, 22, 27, 28, 29, 31, 32, 34, 35, 37, 38, 44, 46, 47, 48, 49, 50, 54, 55], "all_angl": 44, "all_coord": [0, 21, 27, 42, 43], "allow": [0, 11, 15, 19, 32, 44, 45, 48, 50, 54, 55], "allow_distribut": 0, "almost": 39, "along": [11, 23, 44], "alongsid": 14, "alpha": [32, 37, 41, 44, 47, 49], "alpha_layer0": 41, "alreadi": [6, 20, 32], "also": [23, 31, 32, 34, 46, 48, 49, 54, 55], "alt_patch_emb": 47, "although": [4, 8, 12, 13, 14, 15, 35, 37], "alvarez": [54, 55], "alvarez_lab": 48, "alvarez_lab_tier1": 48, "alwai": [32, 46, 47, 48, 50], "ambigu": 32, "ambiguity_check": 32, "among": 38, "amount": 44, "amp": [46, 47, 50], "an": [0, 3, 10, 13, 14, 20, 22, 23, 31, 32, 34, 38, 41, 45, 47, 48, 49, 50], "analysi": [11, 41], "analyz": [19, 29], "analyze_rf": [0, 29, 42, 43, 52], "angl": [22, 23, 31, 34, 45], "angular": [13, 22, 44, 45], "ani": [10, 14, 20, 22, 24, 31, 32, 45, 48], "anisotropi": 45, "annoyingli": 45, "anti": 32, "antialia": 32, "apart": 38, "api": [32, 54, 55], "appear": 32, "append": 44, "appli": [6, 7, 9, 10, 11, 15, 16, 19, 20, 22, 24, 25, 26, 28, 31, 32, 34, 37], "applic": [32, 34, 51], "apply_2d_rotary_pos_emb": [0, 1, 15, 42, 43], "apply_last": [0, 29, 34, 42, 43], "apply_lora": [0, 29, 37, 42, 43], "apply_mask": [0, 29, 31, 42, 43], "apply_mlp": 16, "approach": [6, 38, 45, 47], "appropri": [5, 28], "approx4096": 50, "approxim": [6, 22, 23, 44], "ar": [3, 6, 13, 20, 22, 23, 24, 25, 27, 31, 32, 34, 38, 41, 44, 45, 46, 47, 48, 50], "arang": 44, "arbitrari": [3, 27, 32, 41], "arc": 44, "arch": [0, 42, 43, 46, 47, 49, 50, 52], "arch_flag": [6, 7, 9, 10, 46], "arch_wrapp": [0, 1, 3, 42, 43], "architectur": [0, 1, 6, 7, 9, 10, 11, 15, 42, 43, 46, 47, 52, 54, 55], "area": [20, 22, 24, 25, 32, 41, 44, 45, 49], "area_rang": [20, 24, 28], "arg": [2, 3, 11, 20, 27, 32], "argmax": 26, "argmin": 44, "argument": [0, 8, 10, 11, 20, 25, 27, 32, 41, 45, 46, 47, 48, 49], "around": [22, 23, 31, 32, 34, 47], "arrai": [6, 22, 23, 25, 27, 31, 34, 44, 49], "arraybatch": 34, "arrayimag": [31, 34], "art": [52, 54, 55], "arxiv": [34, 54, 55], "as_tensor": 23, "aspect": [24, 25, 29, 41, 47], "aspect_ratio": 25, "assert": 49, "assign": [32, 47], "assum": [5, 15, 25, 31, 34, 41], "asymmetri": 29, "aten": [45, 46, 47, 48, 49], "attempt": 46, "attent": [10, 15, 47, 50], "atto": 8, "attr": [45, 46, 47, 48, 49], "attribut": [20, 32], "auc": 44, "augment": [28, 30, 31, 34, 38], "auto": [6, 7, 8, 9, 10, 22, 25, 45, 46, 47, 48, 49, 50], "auto_match_cart_resourc": [6, 7, 8, 9, 10, 22, 25, 45, 46, 47, 49], "auto_match_num_coord": [0, 21, 22, 42, 43], "autocast_mod": [46, 47, 50], "autocontrast": [0, 29, 32, 42, 43], "autograd": 32, "automat": [10, 22, 54, 55], "autoreload": [44, 45, 46, 47, 48], "avail": [0, 6, 20, 32, 46, 47, 48, 50], "averag": [27, 28, 44, 45, 46], "average_loss": 28, "avg": [6, 7, 46, 48], "avgpool": 2, "avgpool2d": 13, "avoid": [31, 32], "awai": 32, "awar": 32, "ax": [41, 44, 45, 47, 49], "ax1": [44, 45], "ax2": [44, 45, 49], "ax3": [44, 45, 49], "axes3d": 44, "axes_flat": 49, "axi": [34, 44, 45, 47, 49], "axis_off": 41, "axvlin": 44, "azim": [44, 45], "b": [31, 32, 34, 37, 39, 45], "ba": 37, "back": [25, 37, 46], "backbon": [2, 3, 16, 36, 46, 47, 48], "backbone_kwarg": 2, "backboneprojectorwrapp": [0, 1, 16, 42, 43, 46, 47, 48], "backend": 32, "background": [32, 49], "backward": [0, 29, 32, 42, 43], "bar": 14, "barlow": 38, "barlowtwin": 39, "barlowtwinsloss": [0, 29, 38, 42, 43], "base": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 27, 28, 29, 32, 34, 35, 37, 38, 39, 41, 45, 47, 49, 50, 54, 55], "base_fn": [0, 28, 46, 47, 48, 50], "base_group": 12, "base_lr": 39, "base_valu": 39, "base_width": 14, "basegridsampl": [0, 21, 27, 42, 43], "baselin": 6, "baseline_alexnet_kernel": 2, "basesaccadepolici": [0, 21, 24, 42, 43], "basic": [6, 9, 28, 45, 48, 52, 54, 55], "basicblock": 14, "basicblockpolar": [0, 1, 14, 42, 43], "batch": [6, 7, 9, 10, 12, 19, 24, 25, 26, 28, 31, 32, 34, 38, 45, 46, 48], "batch_siz": [0, 4, 6, 7, 8, 9, 10, 15, 25, 26, 28, 29, 31, 38, 39, 42, 43], "batches_ahead": 28, "batchnorm1d": [11, 12, 38, 46, 48], "bbox_to_anchor": 44, "becaus": [23, 31, 32, 34, 45, 46, 50], "becom": 32, "been": [23, 32, 48], "befor": [13, 14, 19, 22, 23, 32, 34, 44], "before_cal": [0, 29, 34, 42, 43], "begin": 44, "behavior": [32, 41, 45, 46], "behaviour": 32, "being": [32, 34, 41], "belong": 49, "below": [34, 45, 54, 55], "best": [46, 47, 48, 49, 50], "better": [41, 45, 50], "between": [6, 23, 25, 31, 32, 34, 38, 44, 45], "beyond": [22, 44], "bia": [6, 10, 11, 15, 26, 32, 46, 47, 48], "bias": [4, 8], "bicub": [5, 32], "bilinear": [27, 31, 32], "bin": 26, "binari": 22, "bio": 6, "biolog": 52, "bit": 32, "blauch": [54, 55], "blend": 44, "blob": [31, 32, 39], "block": [0, 1, 4, 7, 8, 9, 11, 14, 15, 29, 42, 43, 46, 48, 52], "block_output": 46, "blur": [34, 40], "blur_indic": 31, "blur_radiu": [0, 29, 34, 42, 43], "blur_span": 34, "bn": [0, 29, 38, 42, 43], "bool": [0, 5, 6, 7, 9, 10, 11, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 37, 38], "boolean": 38, "border": [31, 32, 34], "both": [0, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 23, 24, 32, 34, 35, 37, 38], "bottleneck": [14, 19], "bottleneck_dim": 19, "bottleneckpolar": [0, 1, 14, 42, 43], "bottom": [32, 34, 44], "bound": [22, 23, 26, 32, 44], "boundari": [32, 47], "bounding_coord": 26, "brain": 50, "break": 32, "bright": [31, 32, 34], "brightness_factor": [32, 34], "bring": 32, "buffer": 32, "buggi": 32, "build": [3, 5, 10, 32, 45, 47, 52, 54, 55], "build_dinov3": [0, 1, 5, 42, 43], "build_model": [0, 1, 2, 42, 43], "bxcxhxw": 34, "bxhxwxc": [31, 34], "c": [24, 31, 32, 44, 45, 49, 54, 55], "cach": [32, 48], "cache_accuraci": 41, "calcul": [22, 32, 38], "call": [4, 8, 12, 13, 14, 15, 32, 35, 37], "callabl": [11, 14, 25, 39], "caller": 31, "can": [6, 7, 11, 13, 19, 20, 24, 25, 31, 32, 34, 38, 44, 45, 46, 50], "cancel": 23, "cannot": [32, 46], "captur": 20, "care": [4, 8, 12, 13, 14, 15, 35, 37], "cart_3d": 44, "cart_patch_s": [10, 47, 49], "cart_r": [7, 9, 22, 46], "cart_size_mult": 49, "cart_to_complex_log": [0, 21, 22, 42, 43], "cart_to_polar": [0, 21, 22, 42, 43], "cartesian": [6, 7, 8, 9, 10, 15, 22, 23, 25, 27, 44, 45, 46, 47, 48, 49, 50], "cartesian_coord": 23, "cartesian_grid": 27, "cartesian_r": 46, "cartesian_rowcol": 45, "cartesian_visu": 23, "case": [32, 34], "caskroom": [45, 46, 47, 49, 50], "cast": 32, "cat": 44, "cat02": 31, "categori": 46, "category_logit": 46, "caus": 32, "cbar": 44, "cd": [54, 55], "cdist": 44, "cell": 27, "center": [22, 24, 26, 28, 31, 32, 34, 50], "center_crop": [0, 29, 32, 42, 43], "centerbias_mit1003": 26, "centercrop": 34, "central": 45, "certain": 22, "cfg": [3, 5, 20, 28], "chain": 32, "chang": [22, 24, 25, 32, 34, 45], "change_sigma": [0, 21, 25, 42, 43], "channel": [4, 6, 7, 8, 9, 10, 12, 15, 20, 24, 25, 31, 32, 41, 45, 46], "channel_mult": 14, "channels_first": [4, 8], "channels_last": [4, 8, 31, 32], "check": [6, 32, 44, 48], "checkpoint": [0, 28, 42, 43], "chen": 38, "child": 27, "choic": [23, 47, 49], "choos": 6, "chosen": 34, "circref": 6, "circular": [6, 22, 32, 34, 47], "circularmask": [0, 29, 34, 42, 43], "circularpad2d": 32, "circumst": 32, "citat": 52, "cividi": 41, "ckpt": 28, "cl": 15, "clamp": [31, 32, 34], "class": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 27, 28, 29, 32, 34, 35, 37, 38, 39, 41, 44, 46, 47, 50, 54, 55], "classic": [3, 15], "classif": [4, 8, 9, 19, 36], "classifi": [4, 7, 8, 46], "classmethod": 28, "clean": [20, 28], "cleanup_activation_hook": [0, 20, 42, 43], "cleanup_distribut": [0, 28, 42, 43], "clear": 32, "clip": [31, 49], "clone": [0, 21, 22, 34, 42, 43, 45, 46, 47, 48, 49, 50, 54, 55], "clone_input": 34, "close": [10, 44, 46], "closest": 6, "closur": 39, "cluster": [49, 54, 55], "cluster_assign": 49, "cluster_coord": 49, "cluster_mask": 49, "cm": [41, 47], "cmap": [41, 44, 45, 47], "cmasher": 44, "cmf": [6, 8, 10, 22, 23, 25, 27, 44, 45], "cmf_a": [6, 7, 8, 9, 10, 22, 23, 25, 27, 44, 45, 46, 47, 48, 49, 50], "cmf_a_mult": 27, "cmf_a_val": 44, "cmf_integr": 44, "cmr": [44, 45], "cnn": [6, 41, 47, 52], "co": 44, "code": [29, 32, 46, 47, 52, 54, 55], "coeffici": [19, 38], "coexist": 32, "col": [27, 45], "col_pct": 31, "color": [25, 31, 32, 34, 44, 45, 47, 49], "color_bi": 45, "color_jitt": [0, 29, 32, 40, 42, 43], "color_rang": 44, "colorbar": [44, 45], "colorjitt": [0, 29, 34, 42, 43], "colormap": 47, "column": [22, 38], "com": [31, 32, 39, 54, 55], "combin": [7, 19, 23, 32, 46], "compar": [6, 50], "comparison": [22, 38], "compat": [24, 32, 41], "compil": [54, 55], "complet": [7, 54, 55], "complex": [6, 19, 22, 23, 32], "complex128": 32, "complex32": 32, "complex64": 32, "compon": 38, "compos": [0, 29, 31, 32, 34, 42, 43, 46, 47, 48, 50], "comprehens": [19, 54, 55], "comput": [4, 6, 8, 12, 13, 14, 15, 20, 22, 23, 25, 27, 28, 32, 34, 35, 37, 38, 44, 45], "compute_activ": [0, 28, 42, 43, 48], "compute_binary_receptive_field": [0, 1, 6, 42, 43], "compute_lat": 35, "compute_local_rf": [0, 1, 6, 42, 43], "compute_logit": [0, 29, 38, 42, 43], "compute_receptive_field": [0, 1, 6, 42, 43], "compute_reference_coord": [0, 1, 6, 42, 43], "concept": [52, 54, 55], "concret": 32, "conda": [54, 55], "conda_env": 48, "cone": 31, "config": [46, 47, 48, 50, 54, 55], "config_nam": 46, "config_path": 46, "configur": [0, 3, 5, 11, 20, 28, 41], "conform": 45, "conjunct": 32, "connect": 9, "consecut": 32, "consid": [6, 32, 44], "consist": 47, "constant": [6, 22, 32, 35, 44], "constant_num_angl": 22, "constantpad2d": 32, "constrain": 6, "constraint": [24, 25, 38, 50], "construct": [32, 45, 46, 47, 48, 49, 50, 51], "contain": [5, 6, 9, 11, 20, 22, 23, 24, 26, 28, 30, 32, 36, 38, 41, 45, 48, 51], "content": 28, "context": 32, "contigu": 32, "contiguous_format": 32, "continu": 45, "contrast": [31, 32, 34, 38, 46, 47, 48, 50], "contrast_factor": [32, 34], "contribut": [6, 54, 55], "control": [10, 22, 23, 25, 44], "conv": [2, 5, 6, 7, 37, 46, 48], "conv2d": [0, 2, 5, 13, 14, 29, 32, 42, 43], "conv3x3_polar": [0, 1, 14, 42, 43], "conv_coord": 46, "conv_dim": 46, "conv_kernel_cartesian": 46, "conv_lay": [7, 9, 46], "conv_polar": [0, 1, 14, 42, 43], "conv_strid": 46, "convblock": [0, 1, 2, 42, 43], "conveni": [6, 22, 23, 27, 37], "convers": 34, "convert": [13, 15, 22, 23, 31, 32, 34], "convert_image_dtyp": [0, 29, 32, 42, 43], "convert_model_to_polar": [0, 1, 13, 42, 43], "convex": 49, "convexhul": 49, "convnext": [4, 8], "convnext_pico": [0, 1, 4, 42, 43], "convnextv2": [0, 1, 8, 42, 43, 52], "convnextv2_atto": [0, 1, 4, 42, 43], "convnextv2_bas": [0, 1, 4, 42, 43], "convnextv2_femto": [0, 1, 4, 42, 43], "convnextv2_hug": [0, 1, 4, 42, 43], "convnextv2_larg": [0, 1, 4, 42, 43], "convnextv2_nano": [0, 1, 4, 42, 43], "convnextv2_tini": [0, 1, 4, 42, 43], "convolut": [5, 6, 7, 9, 10, 14, 32, 41, 44, 54, 55], "convolv": [6, 32], "coolwarm": 44, "coord": [0, 8, 10, 12, 15, 21, 23, 26, 27, 31, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52], "coordiant": 44, "coordin": [3, 6, 7, 8, 10, 12, 13, 14, 15, 22, 23, 24, 25, 26, 27, 31, 32, 41, 44, 45, 46, 47, 48, 49, 50], "coords_alpha": 41, "copi": [22, 28, 34, 39, 45, 46, 47, 48, 49, 50], "copy_": 32, "copy_hydra_output": [0, 28, 42, 43], "corner": [5, 32], "correct": [32, 38], "correspond": [4, 8, 22, 32], "cort_cartesian_to_cort_cylindr": [0, 21, 23, 42, 43], "cortex": [7, 9, 10, 27], "cortic": [6, 7, 9, 10, 22, 23, 25, 45, 52, 54, 55], "cortical_cylindrical_to_cortical_cartesian": [0, 21, 23, 42, 43], "corticalsensormanifold": [0, 21, 23, 25, 27, 42, 43], "cos_i": 15, "cos_x": 15, "cosin": [10, 15, 38], "cosine_decai": [0, 29, 39, 42, 43], "cosine_schedul": [0, 29, 39, 42, 43], "cosinedecaywithwarmup": [0, 29, 39, 42, 43], "cosinesimilar": 38, "cost": 32, "could": [6, 54, 55], "count": [6, 26], "counter": 6, "counterintuit": 23, "cov_coeff": [0, 29, 38, 42, 43], "cov_loss": 38, "covari": 38, "cpp": [45, 46, 47, 48, 49], "cpu": [22, 23, 28, 31, 34, 44, 45, 46, 47, 48, 49, 50], "creat": [0, 3, 8, 9, 10, 11, 15, 28, 31, 32, 34, 38, 41, 44, 46, 49, 54, 55], "create_graph": 32, "create_model_and_scal": [0, 28, 42, 43], "create_optim": [0, 28, 42, 43], "create_standard_load": [0, 28, 42, 43], "create_train_load": [0, 28, 42, 43], "create_val_load": [0, 28, 42, 43], "criterion": [0, 29, 38, 42], "critic": [23, 44], "crop": [0, 24, 28, 29, 31, 32, 42, 43, 45, 48], "crop_area": 45, "crop_area_rang": [24, 45], "crop_height": 31, "crop_siz": 45, "crop_width": 31, "cross": 38, "crossentropyloss": 38, "ctr_x": [31, 34], "ctr_y": [31, 34], "cubic": 32, "cuda": [0, 3, 5, 6, 7, 8, 9, 10, 12, 15, 17, 20, 25, 26, 27, 28, 32, 35, 37, 44, 46, 47, 48, 50, 54, 55], "cudnn": 32, "cudnn_benchmark": 35, "cupi": [54, 55], "curiou": 44, "curr": 44, "current": [20, 22, 25, 28, 32, 45], "cursor": [54, 55], "curv": 44, "custom": 32, "cxhxw": [31, 34], "cylindr": [23, 44], "cylindrical_to_visual_polar": [0, 21, 23, 42, 43], "d": [23, 29, 32, 44, 45, 46], "d_": 32, "d_l": [6, 10], "dash": 11, "data": [4, 8, 20, 22, 25, 27, 28, 32, 44, 46, 47], "data_format": [4, 8], "datafram": [28, 44], "dataload": 28, "dataset": [28, 48], "debug": [20, 31], "decai": [25, 28, 38], "deep": [14, 22, 52], "deepgaz": 26, "def": [44, 45, 47, 49], "default": [0, 4, 5, 6, 7, 8, 9, 11, 12, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 34, 37, 38, 45, 46], "default_devic": 34, "default_valu": 20, "defin": [4, 6, 8, 12, 13, 14, 15, 23, 24, 32, 35, 37, 45, 46, 47, 48, 49], "deg": [23, 44], "degre": [6, 22, 23, 25, 27, 31, 44, 45], "delta": 24, "demand": [6, 50], "demo": [0, 42, 43, 45, 46, 49, 52], "demonstr": [45, 47, 48, 51], "denomin": [8, 38], "dens": 32, "densiti": [26, 44], "depend": [32, 44, 45, 54, 55], "deprec": [32, 47], "depth": [4, 8, 32], "depthwis": 6, "depthwise_sep_conv": 3, "deriv": [23, 32], "describ": [32, 38, 46], "descript": 29, "design": [9, 15, 19, 46], "desir": [12, 22, 32, 44, 45, 46, 47, 48, 49, 50], "dest_i": [31, 34], "dest_x": [31, 34], "detach": [0, 29, 32, 42, 43, 45, 46, 47, 48, 49, 50], "detach_": [0, 29, 32, 42, 43], "detail": [32, 44, 45, 46, 50], "deteremin": 34, "determin": [6, 20, 23, 32, 34, 44, 46, 49, 50], "determinist": [24, 26, 32], "develop": [44, 54, 55], "deviat": [25, 38], "devic": [0, 3, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 20, 22, 23, 25, 26, 27, 28, 31, 32, 34, 35, 37, 38, 40, 44, 45, 46, 47, 48, 49, 50], "device_typ": [46, 47, 50], "df": 44, "dfrac": 44, "dh": 32, "diagon": 38, "diagram": 52, "diamet": [6, 22, 25, 27, 44], "dict": [20, 24, 28, 32, 35, 36, 41, 44], "dict_kei": 45, "dictconfig": [28, 46], "dictionari": [20, 24, 28, 32, 36, 45], "did": 46, "differ": [3, 19, 20, 22, 25, 32, 34, 38, 44, 46, 51], "differenti": 32, "digit": 29, "dilat": [2, 5, 14, 32], "dim": [3, 4, 8, 10, 15, 29, 32, 45], "dim_ord": [0, 29, 32, 42, 43], "dimens": [4, 7, 8, 10, 12, 13, 15, 19, 32, 44, 46, 48], "dimension": 32, "dinov3": [0, 1, 3, 42, 43, 52, 54, 55], "dinov3rop": [0, 1, 10, 42, 43, 47], "dinov3vitattent": 47, "dinov3vitembed": 47, "dinov3vitlay": 47, "dinov3vitlayerscal": 47, "dinov3vitmlp": 47, "dinov3vitmodel": 47, "direct": [31, 47], "directli": [27, 32, 38, 45, 48], "directori": [0, 28, 41, 48, 54, 55], "disabl": [25, 46, 47, 50], "disallow": 25, "disallow_undersampl": 25, "discov": 47, "discret": 45, "discuss": 32, "disk": 41, "dispatch": 32, "displai": [14, 32, 41], "dist": 44, "distanc": [6, 22, 23, 24, 44, 45, 47], "distil": 50, "distort": 38, "distribut": [0, 26, 28, 29, 38, 48], "div_": [0, 29, 31, 42, 43], "dive": [44, 46], "divid": [10, 12, 15, 46, 48, 50], "dividin": 34, "divis": [32, 34], "dm": 23, "dm_dr": [0, 21, 23, 42, 43], "do": [34, 44, 45, 46, 50, 52, 54, 55], "do_norm": 22, "do_postproc": 20, "doc": [45, 54, 55], "docstr": [54, 55], "document": 45, "doe": [13, 20, 24, 32, 48], "doesn": 32, "don": [13, 31, 48], "done": [45, 46, 47, 48, 50, 54, 55], "doubl": [6, 32], "doubler": [6, 46], "down": 32, "down_proj": 47, "download": [14, 54, 55], "downsampl": [5, 6, 14, 22, 32], "downstream": 16, "dpi": [41, 44, 47, 49], "dr": [23, 44], "draw": [34, 49], "draw_param": [0, 29, 34, 42, 43], "drawn": 34, "drho_dr": [0, 21, 23, 42, 43], "drop": [11, 32, 44, 48], "drop_path": [4, 8, 47], "drop_path_r": [4, 8], "dropout": [0, 2, 10, 11, 15, 19, 42, 43, 46, 47, 48], "dropout_al": 11, "dtype": [13, 20, 22, 25, 27, 31, 32, 34, 40, 45, 46, 47, 48, 50], "due": [23, 27, 32, 45, 47], "dummy_r": [0, 29, 31, 42, 43], "dure": [25, 32], "dw": 32, "e": [6, 11, 22, 24, 28, 31, 32, 34, 44, 54, 55], "each": [4, 6, 7, 8, 9, 10, 15, 19, 20, 22, 24, 27, 31, 32, 34, 38, 41, 44, 45, 48, 49], "earli": 28, "eas": 47, "easi": [34, 54, 55], "easier": 49, "easiest": [45, 48, 54, 55], "easili": 32, "eccentr": [22, 23, 25, 44, 45], "eclipse_r": [44, 45], "edg": 32, "edit": [32, 48], "effect": [6, 32, 37], "effici": [6, 32, 34], "eig": [0, 29, 32, 42, 43], "eigenvector": 32, "either": [6, 32, 34, 35], "element": [6, 31, 32, 38], "elementwise_affin": 47, "elev": [44, 45], "elimin": 32, "ellipsi": 32, "els": [44, 45, 49], "elsewher": [20, 23], "emb": [10, 15], "embed": [3, 5, 9, 10, 11, 15, 19, 20, 38, 47, 50], "embed_dim": [3, 10, 15], "empti": 32, "en": 31, "enabl": [15, 29, 32], "enable_grad": 32, "encod": [10, 15, 38], "encount": [46, 48, 50], "encourag": [38, 44], "end": 13, "end_lr_ratio": 39, "end_valu": 39, "endpoint": 44, "energi": 50, "enforc": [0, 38], "enough": 23, "ensur": [32, 44, 46], "enter": [54, 55], "entir": 7, "entri": 20, "entropi": 38, "enumer": [44, 49], "env": [45, 46, 47, 49, 50], "environ": [54, 55], "ep": [4, 6, 8, 46, 47, 48], "epoch": [28, 39], "equal": [0, 22, 25, 29, 32, 34, 42, 43, 44, 45, 46, 47, 49], "equat": [23, 44], "equidist": 44, "equival": [23, 32, 46], "error": 32, "essenti": 23, "estim": 48, "et": 38, "eta": 39, "etc": [7, 10, 46, 48], "euclidean": [6, 45], "eval": 25, "eval_and_log": [0, 28, 42, 43], "evalu": [19, 20, 23], "even": [32, 44, 48], "evenli": [12, 23, 45], "everi": [4, 8, 12, 13, 14, 15, 32, 35, 37], "everyon": 48, "everyth": [22, 54, 55], "ex_typ": 45, "exact": 32, "exactli": [22, 32, 46], "exampl": [20, 31, 32, 34, 38, 48, 52], "except": [32, 38, 44, 54, 55], "exclud": 38, "exec": [0, 28, 42, 43], "execut": [28, 32], "exhibit": 45, "exist": [6, 41, 48], "exp": 44, "expand": [32, 44], "expans": [0, 1, 14, 42, 43], "expect": [8, 32, 34, 45], "experi": 28, "experiment": 32, "explicitli": 32, "explor": [52, 54, 55], "exponenti": 26, "extend": 22, "extens": 23, "extra": 44, "extra_dict": 28, "extract": 19, "extrem": 50, "extrema": 32, "ey": [20, 31, 50], "f": [32, 44, 45], "f1": [20, 24], "face": 5, "facebookresearch": [39, 54, 55], "factor": [6, 7, 9, 10, 22, 23, 24, 25, 26, 38, 44, 50], "fake": 46, "fall": 50, "fals": [0, 2, 3, 5, 6, 10, 11, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 35, 38, 40, 41, 44, 45, 46, 47, 48, 49], "famili": 27, "far": [32, 46], "fasrc": [54, 55], "fast": [6, 30, 54, 55], "fastai": 31, "fastai2": 31, "fastaug": [0, 29, 42, 43, 52], "faster": [28, 32], "fc": 13, "fc_block_5": 20, "fc_block_6": [20, 46, 47, 48], "fc_block_7": [46, 48], "fc_dim": 46, "featur": [4, 6, 7, 8, 9, 10, 14, 16, 19, 31, 36, 38, 46], "features_per_lay": 7, "femto": 8, "few": 48, "fewer": 6, "ffcv": [48, 54, 55], "field": [6, 7, 8, 9, 10, 22, 23, 25, 27, 32, 41, 44, 45, 46], "fig": [41, 44, 45, 47, 49], "figs_dir": 41, "figsiz": [41, 44, 45, 47, 49], "figur": [41, 44, 45], "file": [26, 28, 46, 48, 54, 55], "filenam": 0, "fill": [32, 49], "filter": [6, 11, 32, 41], "final": [0, 11, 26, 28, 44, 46], "final_accuraci": [0, 28, 42, 43], "final_valu": 39, "find": [12, 20, 22, 23, 24, 25], "find_config": [0, 28, 42, 43, 52], "find_desired_r": [0, 21, 22, 42, 43], "find_valid_num_group": [0, 1, 12, 42, 43], "fine": [5, 23], "first": [6, 8, 9, 14, 20, 24, 31, 32, 38, 41, 44, 45, 48, 49, 50, 54, 55], "first_strid": 8, "five_crop": [0, 29, 32, 42, 43], "fix": [15, 32, 44, 45, 47], "fix_agg": [0, 19, 42, 43], "fix_delta": [24, 45], "fix_h": 22, "fix_img": 45, "fix_loc": [22, 25, 27, 45, 46, 47, 48, 49, 50], "fix_projector": [46, 47, 48], "fix_siz": 45, "fix_w": 22, "fixat": [19, 20, 22, 24, 25, 26, 27, 41, 46, 47, 48, 49, 50], "fixated_imag": 49, "fixated_input": 20, "fixation_delta": 24, "fixation_polici": 20, "fixation_s": [0, 20, 21, 22, 24, 25, 27, 28, 42, 43, 45], "fixator_output": 45, "fixn": 22, "flag": [6, 7, 9, 10, 32], "flashload": [28, 48], "flatten": [20, 23, 37, 49], "flatten_dict": [0, 29, 42, 43, 52], "flexibl": 46, "flip": [31, 34, 40, 45, 46, 47, 48, 50], "flip_mat": [0, 29, 31, 42, 43], "float": [4, 6, 7, 8, 9, 10, 15, 19, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 37, 38, 44], "float16": 32, "float32": [20, 31, 34, 46, 47, 48, 50], "float64": [46, 47, 48, 50], "floatslid": [45, 49], "floattensor": 32, "flop": [0, 29, 42, 43, 52], "flopwrapp": [0, 29, 35, 42, 43], "flow": 32, "focal": 34, "focu": 45, "focus": 34, "fold": 37, "folder": [28, 46, 47, 48, 50], "folk": 50, "follow": [9, 32, 46, 54, 55], "fontsiz": 44, "forc": [10, 22, 25], "force_less_than": [22, 25], "force_n_point": [22, 25], "force_out_match_less_than": 6, "force_patches_less_than_match": [10, 47, 49], "forg": [54, 55], "forget": 46, "form": [19, 25, 32, 45], "formal": 45, "format": [4, 8, 22, 23, 25, 27, 32, 34, 44, 45, 46], "former": [4, 8, 12, 13, 14, 15, 35, 37], "fortun": 45, "forward": [0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 24, 25, 27, 29, 32, 35, 37, 38, 42, 43, 45, 54, 55], "forward_featur": [0, 1, 4, 8, 42, 43], "forward_ssl": [0, 20, 42, 43], "forward_supervis": [0, 20, 42, 43], "found": [20, 25, 46, 47, 48, 49, 50], "foundat": [6, 44], "four": 45, "fourth": 48, "fov": [6, 7, 8, 9, 10, 22, 23, 25, 27, 44, 45, 46, 47, 48, 49, 50], "foveal": [6, 44], "foveal_color": [46, 47, 48, 50], "foveat": [42, 49], "fovknnalexnet_a": [46, 48, 50], "fovknndinov3": [47, 50], "fovref": 6, "frac": [23, 32, 44, 45], "fraction": [24, 28], "frame": [6, 10, 31, 45], "framework": [38, 44], "freed": 32, "freez": 37, "frequenc": [10, 28], "fresh": [54, 55], "fro": 32, "from": [0, 3, 5, 6, 8, 10, 11, 14, 19, 20, 22, 23, 24, 26, 27, 28, 31, 32, 34, 35, 38, 39, 41, 44, 46, 47, 49, 50, 52, 54, 55], "from_numpi": [31, 34, 46, 47, 48, 50], "front": 32, "frozen": 5, "fulfil": [44, 47], "full": [20, 22, 32, 41, 46, 47, 48, 50], "full_lay": 46, "fulli": 45, "fun": 45, "function": [0, 4, 6, 7, 8, 11, 12, 13, 14, 15, 22, 23, 24, 25, 27, 29, 32, 35, 37, 38, 41, 42, 43, 45, 46, 47, 48, 49, 52, 54, 55], "functional_tensor": [0, 29, 42, 43, 52], "further": 46, "futur": 32, "g": [11, 22, 28, 31, 32, 34, 44, 54, 55], "gain": 32, "gamma": 32, "ganglion": 27, "gather": [6, 38], "gauss_sigma": 6, "gaussian": [6, 25, 27, 34, 45], "gaussian_blur": [0, 29, 32, 42, 43], "gaussian_pool": 45, "gaussiancolordecai": [0, 21, 25, 42, 43, 46, 47, 48, 50], "gaussianknngridsampl": [0, 21, 27, 42, 43], "gaze": 50, "gca": 44, "geluactiv": 47, "gener": [6, 22, 23, 24, 29, 31, 34, 38, 45, 48, 54, 55], "generate_batch_permut": [0, 29, 31, 42, 43], "generate_doc": [54, 55], "geodes": [6, 10, 47, 49], "geometr": 32, "get": [0, 12, 20, 25, 26, 27, 32, 34, 38, 41, 44, 45, 46, 49, 50, 54, 55], "get_activ": [0, 20, 42, 43, 48], "get_backbon": [0, 1, 2, 42, 43], "get_captured_activ": [0, 20, 42, 43], "get_center_bia": [0, 21, 26, 42, 43], "get_cmap": 47, "get_first_conv_weight": [0, 41, 42, 43, 52], "get_flops_df": [0, 29, 35, 42, 43], "get_image_as_batch": [0, 17, 42, 43, 45, 46, 49, 52], "get_image_num_channel": [0, 29, 32, 42, 43], "get_image_s": [0, 29, 32, 42, 43], "get_in_channel": [0, 20, 42, 43], "get_in_out_coord": [0, 1, 6, 42, 43, 46], "get_info": 32, "get_input": [0, 29, 35, 42, 43], "get_isotropic_sampling_coord": [0, 21, 22, 42, 43, 44], "get_legend_handles_label": 44, "get_logpolar_image_sampling_coord": [0, 21, 22, 42, 43], "get_min_cmf_a": [0, 21, 25, 42, 43], "get_mlp": [0, 1, 11, 42, 43], "get_model": [0, 29, 42, 43, 52], "get_model_from_base_fn": [0, 42, 43], "get_multiple_layer_activ": 20, "get_norm": [0, 1, 12, 42, 43], "get_num_coord": [0, 20, 42, 43], "get_random_crop": [0, 21, 24, 42, 43], "get_random_nam": [0, 29, 42, 43, 52], "get_random_nearcenter_fix": [0, 21, 24, 42, 43], "get_repr_s": [0, 1, 2, 14, 20, 42, 43], "get_sampling_coord": [0, 21, 22, 42, 43], "get_scatter_s": [0, 21, 22, 42, 43, 45], "get_std_transform": [0, 29, 40, 42, 43], "get_strided_coord": [0, 21, 22, 42, 43], "get_swap_module_params_on_convers": 32, "get_trainer_from_base_fn": [0, 42, 43, 48], "get_transform": [0, 20, 42, 43], "get_warp_param": [0, 21, 25, 42, 43], "get_ylim": 45, "getattr": 49, "git": [26, 45, 46, 47, 48, 49, 50, 54, 55], "github": [31, 32, 39, 54, 55], "give": [22, 23, 32, 46, 47, 48, 49, 50], "given": [22, 25, 28, 31, 32, 34, 38, 44, 45], "global": [4, 8, 23, 46, 48], "global_step": 39, "go": 46, "good": 23, "gpu": [28, 31, 32, 34, 38], "grad": 32, "grad_fn": 32, "gradient": [20, 28, 32], "grai": 40, "graph": 32, "graphic": 31, "grayscal": [31, 34], "great": 44, "greater": [6, 14, 32], "greedili": 32, "grid": [6, 10, 22, 23, 25, 27, 31, 32, 41, 44, 46, 49], "grid_nn": [25, 45], "grid_pts_3d_xyz": 23, "grid_pts_polar": 23, "grid_sampl": [0, 27, 29, 31, 32, 34, 42, 43, 45], "gridsampl": [0, 21, 27, 42, 43, 46, 47, 48, 50], "gridspec_kw": [45, 47], "grn": [0, 1, 4, 8, 42, 43], "group": [2, 5, 12, 14, 28, 32], "groupnorm": [2, 12], "gt": [45, 46, 47, 48, 50], "guarante": 45, "guid": [54, 55], "guidelin": [54, 55], "h": [22, 24, 31, 32, 34, 46, 49], "h_": 32, "h_start": 31, "ha": [23, 31, 32, 45, 48, 50, 54, 55], "half_head_dim": 15, "hallmark": 25, "handl": [15, 20, 24, 27, 28, 32, 38, 41, 44, 46, 50, 54, 55], "harvard": 14, "have": [32, 34, 38, 41, 44, 45, 46, 48], "head": [3, 4, 8, 9, 10, 15, 16, 19, 46, 47, 48], "head_dim": [10, 15], "head_init_scal": [4, 8], "header": 31, "heavili": 45, "height": [4, 5, 9, 15, 24, 25, 26, 27, 32, 41], "help": 44, "helper": 25, "hemispher": 22, "here": [32, 44, 45, 46, 48, 50], "hex_grid_s": 41, "hflip": [0, 29, 32, 42, 43], "hidden": [10, 15], "hiddenprint": [0, 29, 42, 43, 52], "hide": 49, "hierarch": 46, "high": [6, 27, 44, 45], "higher": [32, 38], "highlight": 44, "highr": 45, "highres_coord": 27, "home12": [26, 48], "homebrew": [45, 46, 47, 49, 50], "hood": 48, "hook": [4, 8, 12, 13, 14, 15, 20, 32, 35, 37, 48], "hop_length": 32, "horizont": [31, 34, 46, 47, 48, 50], "horizontalflip": 34, "how": [6, 24, 32, 34, 44, 45, 46, 47, 51, 52, 54, 55], "howev": [13, 22, 32, 44], "hsv": [31, 45], "hsv_jitter": [0, 29, 31, 42, 43], "hsv_jitter2": [0, 29, 31, 42, 43], "hsv_jitter_arrai": [0, 29, 31, 42, 43], "hsv_jitter_array2": [0, 29, 31, 42, 43], "hsv_jitter_tensor": [0, 29, 31, 42, 43], "hsv_mat": [0, 29, 31, 42, 43], "hsv_mat2": [0, 29, 31, 42, 43], "html": [54, 55], "http": [31, 32, 34, 39, 54, 55], "hue": [25, 31, 34, 44, 46, 47, 48, 50], "hue_factor": [32, 34], "hue_mat": [0, 29, 31, 34, 42, 43], "hug": 5, "huge": 8, "hull": 49, "hull_point": 49, "human": [31, 50], "hxwxc": 31, "hydra": [28, 46, 48], "hydraconfig": 48, "hyperparamet": [38, 44, 46], "hyphen": [19, 20], "i": [6, 7, 9, 11, 12, 15, 19, 20, 22, 23, 24, 25, 27, 28, 31, 32, 34, 38, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55], "iamg": 45, "id": 28, "idea": 44, "ideal": 6, "ident": [31, 32, 47], "identifi": [5, 38], "idx": [2, 11, 31, 32], "ignor": [4, 8, 12, 13, 14, 15, 32, 35, 37, 45, 46, 47, 48, 49], "ih": 32, "ii": [22, 44, 45, 49], "illeg": 32, "im_color": 49, "imag": [4, 8, 10, 14, 15, 20, 22, 24, 27, 28, 30, 31, 32, 34, 38, 41, 46, 48, 49, 50, 54, 55], "image_s": 22, "imagebatch": 31, "imageenh": 31, "imagenet": [14, 48], "imagenet_mean": 49, "imagenet_std": 49, "img": [27, 32, 34], "img_batch": 49, "img_shap": 27, "img_siz": [2, 10, 14, 15, 24, 34], "immedi": 52, "implement": [6, 7, 9, 12, 15, 22, 23, 24, 25, 32, 38, 52, 54, 55], "implicit": 32, "import": [44, 45, 46, 47, 48, 49, 50], "improv": 50, "imshow": 49, "in_c": 2, "in_cart_coord": 47, "in_cart_r": [6, 10, 22, 46, 47, 49], "in_chan": [4, 8], "in_channel": [2, 6, 7, 9, 10, 14, 15, 20, 46, 47, 48], "in_conv_strid": [3, 9], "in_coord": [6, 10, 46, 47, 48, 49, 50], "in_featur": [46, 47, 48], "in_plan": 14, "in_plotting_coord": 47, "in_pool_strid": [3, 9], "in_r": [6, 7, 8, 9, 10, 22], "inaccur": 32, "includ": [6, 7, 11, 16, 28, 32, 41, 46, 54, 55], "include_kei": 35, "include_pointwis": 35, "include_reduct": 35, "incorrect": 32, "increas": 32, "ind": 44, "independ": [20, 32], "index": [6, 41, 45, 46, 47, 48, 49, 54, 55], "indic": [6, 7, 19, 24, 26, 32, 38], "individu": [31, 34, 38], "induc": 32, "inf": [26, 31], "infer": [19, 32], "infin": 25, "infinitesim": 23, "info": 32, "inform": 32, "inherit": [10, 46], "inhibit": 26, "init": [4, 8, 37], "init_cortical_mesh": [0, 21, 23, 42, 43], "init_fixation_system": [0, 20, 42, 43], "init_visual_mesh": [0, 21, 23, 42, 43], "initi": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 23, 24, 25, 27, 28, 35, 37, 38, 46, 52], "initial_densityk1": 44, "initial_valu": 39, "initialize_logg": [0, 28, 42, 43], "initialize_remote_logg": [0, 28, 42, 43], "inner": 44, "innermost": 32, "inp": [2, 11], "inplac": [2, 11, 31, 34, 46, 47, 48, 50], "inplan": 14, "input": [4, 6, 7, 8, 9, 10, 11, 13, 15, 16, 19, 20, 22, 24, 25, 26, 27, 31, 32, 34, 35, 41, 45, 46, 47, 48, 49, 50, 54, 55], "input_s": 6, "insert": 31, "insight": 44, "inspect": [10, 45], "inspir": 52, "instal": 52, "instanc": [0, 4, 8, 12, 13, 14, 15, 35, 37], "instead": [3, 4, 6, 8, 9, 10, 12, 13, 14, 15, 23, 32, 35, 37, 47, 50], "instruct": [54, 55], "int": [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 44], "int64": 49, "int_0": 44, "integ": 11, "integr": [20, 23, 27, 44], "integrand": 23, "intens": 31, "inter_nearest": 32, "interact": [41, 49], "interedi": 31, "interest": [6, 45], "interfac": [12, 52], "intermedi": [11, 16, 31, 44, 48], "intern": [2, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 24, 32, 35, 37, 38, 45, 46, 47, 48, 49], "interpol": [0, 5, 23, 27, 29, 32, 42, 43, 44], "interpret": [26, 32], "interv": 28, "introduc": [32, 45], "intslid": [45, 49], "intuit": 44, "inv_freq": [0, 1, 10, 42, 43], "invari": 38, "invers": 6, "invert": [0, 29, 32, 34, 42, 43], "invisibli": 44, "involv": [50, 54, 55], "ior": 26, "ior_width": 26, "ipykernel_72369": 47, "ipynb": [46, 53, 54, 55], "ipywidget": [45, 49], "irrelev": 23, "is_output": 11, "is_shar": [0, 29, 32, 42, 43], "isotrop": [6, 7, 9, 10, 22, 23, 25, 27, 45, 46, 47, 48, 50], "isotropi": [23, 44, 45], "isotropic_fixn": 22, "issu": [32, 45], "issuecom": 32, "istft": [0, 29, 32, 42, 43], "item": [26, 44, 48], "iter": [20, 25, 28, 32, 35], "itertool": 45, "its": [0, 27, 32, 44, 45, 49, 50, 54, 55], "itself": 32, "itu": 31, "iw": 32, "j": 45, "jit": 35, "jitter": [31, 32, 34], "jj": [45, 47], "join": [19, 20], "jpg": [45, 49], "just": [10, 20, 44, 45, 46, 48, 50, 54, 55], "k": [6, 7, 9, 10, 15, 23, 27, 36, 44, 45, 46, 47, 48, 49, 50], "k_a": 44, "k_conv": 46, "k_per_lay": 7, "k_pool": 46, "k_proj": 47, "k_rot": 15, "kaiminga_zerob": 37, "keep": [23, 32], "keepdim": 32, "kei": [0, 15, 32, 38, 44, 45, 46, 47, 48, 50], "kept": 32, "kernel": [2, 5, 6, 31, 32, 46], "kernel_s": [2, 5, 14, 32, 34], "keyword": [0, 8, 20, 27, 32, 41], "kh": [5, 32, 37], "knn": [0, 1, 3, 7, 8, 9, 10, 12, 22, 27, 36, 42, 43, 45, 47, 49, 50, 52, 54, 55], "knn_classifi": [0, 29, 36, 42, 43], "knn_coord": 49, "knn_distanc": 6, "knn_featur": 6, "knn_indic": [6, 47, 49], "knn_indices_list": 6, "knn_indices_pad_mask": 47, "knn_probe": [0, 29, 36, 42, 43], "knnalexnet": [0, 1, 42, 43, 46, 48, 52], "knnalexnetblock": [0, 1, 7, 42, 43, 46, 48], "knnbaselay": [0, 1, 6, 42, 43], "knnbatchnorm": [0, 1, 12, 42, 43, 46, 48], "knnchannelnorm": [0, 1, 12, 42, 43], "knnconv": [6, 10, 30, 47, 51], "knnconv1": [45, 46, 47, 49, 50], "knnconvlay": [0, 1, 6, 7, 9, 10, 42, 43, 46, 48], "knnconvnextv2": [0, 1, 42, 43, 52], "knnconvnextv2_atto": [0, 1, 8, 42, 43], "knnconvnextv2_bas": [0, 1, 8, 42, 43], "knnconvnextv2_femto": [0, 1, 8, 42, 43], "knnconvnextv2_hug": [0, 1, 8, 42, 43], "knnconvnextv2_larg": [0, 1, 8, 42, 43], "knnconvnextv2_nano": [0, 1, 8, 42, 43], "knnconvnextv2_pico": [0, 1, 8, 42, 43], "knnconvnextv2_tini": [0, 1, 8, 42, 43], "knncoordnorm": [0, 1, 12, 42, 43], "knndepthwiseconvlay": [0, 1, 6, 42, 43], "knndepthwiseseparableconvlay": [0, 1, 6, 42, 43], "knngridsampl": [0, 21, 27, 42, 43, 45], "knngroupnorm": [0, 1, 12, 42, 43], "knnlayer": 46, "knnlayernorm": [0, 1, 12, 42, 43], "knnpartitioningpatchembed": [0, 1, 10, 42, 43, 47, 49], "knnpatchembed": [0, 1, 10, 42, 43, 47], "knnpoolinglay": [0, 1, 6, 9, 42, 43, 46, 48], "knnprobe": [0, 29, 42, 43, 52], "knnresnet": [0, 1, 42, 43, 52], "knnresnetbasicblock": [0, 1, 9, 42, 43], "knnvit": [0, 1, 3, 42, 43, 47, 49, 52], "know": 13, "knowledg": 50, "known": 32, "konkl": [54, 55], "kw": [5, 32, 37], "kwarg": [0, 3, 4, 8, 10, 14, 20, 25, 27, 28, 31, 34, 35, 41, 45, 46, 47, 48, 49], "l": [3, 6, 10, 31, 44], "l2": 11, "l2norm": 11, "lab": 14, "label": [28, 38, 44], "label_str": 44, "laid": 32, "lambd": [0, 29, 38, 42, 43], "lambda": [2, 32], "lar": [0, 29, 38, 39, 42, 43], "larg": [8, 54, 55], "larger": [6, 50], "lars_adaptation_filt": 39, "last": [8, 20, 31, 32, 34, 41, 44, 46, 47, 48], "last_param": [0, 29, 34, 42, 43], "latenc": 35, "later": 44, "latter": [4, 8, 12, 13, 14, 15, 35, 37], "launch": 28, "launch_from_arg": [0, 28, 42, 43], "layer": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 27, 38, 41, 46, 47, 48], "layer_al": 12, "layer_chan": 12, "layer_cl": 7, "layer_nam": [20, 28, 48], "layer_norm": 19, "layer_of_interest": 6, "layer_output": [20, 46], "layer_scale1": 47, "layer_scale2": 47, "layer_spac": 12, "layerblock": [0, 1, 11, 42, 43, 46, 47, 48], "layernorm": [0, 1, 4, 8, 12, 42, 43, 47], "layout": 32, "leaf": 32, "leak": 20, "learn": [14, 16, 19, 20, 28, 38, 44, 52, 54, 55], "learnabl": 6, "learning_schedul": [0, 29, 39, 42, 43], "leav": [15, 20, 32, 37], "left": [23, 32, 34, 44, 54, 55], "legal": 32, "legend": 44, "legitim": 32, "len": [32, 44, 46, 49], "length": [6, 10, 20, 22, 27, 32, 44, 46, 47, 48], "leq": 32, "less": [10, 22, 25, 27, 46], "let": [46, 47, 48, 49], "letter": 29, "level": [19, 34], "lf": [54, 55], "lfloor": 32, "lib": [45, 46, 47, 48, 49, 50], "libjpeg": [54, 55], "librari": [31, 52, 54, 55], "lie": [23, 44], "lift": 32, "light": 32, "lightgrai": 49, "like": [6, 20, 22, 25, 31, 34], "limit": [6, 45, 47], "line": [32, 48], "linear": [10, 11, 15, 19, 28, 31, 32, 46, 47, 48, 50], "linearli": 22, "linearprob": [0, 19, 42, 43, 46, 47, 48, 52], "lineplot": 44, "linestyl": 44, "linewidth": [44, 49], "linspac": 44, "list": [6, 7, 8, 9, 11, 14, 19, 20, 24, 25, 27, 31, 32, 34, 35], "list_available_lay": [0, 20, 42, 43, 48], "list_knn_lay": [0, 20, 42, 43], "list_output": [11, 19], "listconstruct": 35, "liter": [20, 32], "littl": 45, "live": [44, 46], "ll": [44, 45], "lm": 31, "lms_color_spac": 31, "lms_to_lgrbi": [0, 29, 31, 42, 43], "load": [0, 5, 28, 32, 48], "load_checkpoint": [0, 28, 42, 43], "load_config": [0, 28, 42, 43, 46, 47, 48, 50, 52], "load_dinov3": [0, 1, 5, 42, 43], "load_ext": [44, 45, 46, 47, 48], "load_pretrain": [0, 29, 42, 43, 52], "load_state_dict": [0, 29, 32, 39, 42, 43, 46, 47, 48, 50], "load_strict": 0, "load_weight": [0, 1, 10, 42, 43], "loader": [0, 28, 29, 35, 42, 43, 46, 47, 48, 50, 52], "loader_transform": [20, 46, 47, 48, 50], "loc": 44, "local": [6, 23, 27, 45], "local_dens": 44, "local_rf": 6, "locat": [8, 24, 25, 27, 32, 45], "log": [0, 5, 22, 26, 28, 31, 42, 43, 44, 45, 48], "log_cmf_a": 44, "log_dens": 26, "log_in": 5, "log_prob": 26, "logarithm": [22, 23], "logical_not": 47, "logit": [0, 7, 8, 9, 26, 29, 31, 38, 42, 43, 46], "logpolar": [22, 45], "logpolar_as_grid": 22, "logpolar_radiu": [0, 21, 22, 42, 43], "long": 31, "look": [0, 31, 46, 47], "loop": [28, 31], "lora": [0, 29, 42, 43, 50, 52], "loraparam": [0, 29, 37, 42, 43, 47], "loss": [0, 29, 39, 42, 43, 52], "lot": 46, "low": [44, 45, 50], "lower": [27, 32, 45], "lowercas": 29, "lowr": 45, "lr": [32, 39], "lr_schedul": [0, 29, 42, 43, 52], "lstsq": [0, 29, 32, 42, 43], "lt": [45, 46, 47, 48, 49, 50], "lu": [0, 29, 32, 42, 43], "luma": 31, "lumin": 31, "m": [0, 6, 21, 22, 23, 27, 32, 42, 43, 44, 45, 47, 49, 50, 54, 55], "m_": 45, "m_r": [44, 45], "m_r_i": 44, "m_w": 44, "made": 22, "magnif": [7, 9, 22, 23, 25], "magnifi": 23, "mai": [32, 46], "main": [14, 16, 20, 23, 28, 32, 39, 45], "main_block_strid": 14, "mainli": [41, 44, 45], "make": [24, 32, 44, 45, 46], "make_density_plot": 44, "make_flop_count": [0, 29, 35, 42, 43], "mani": [6, 26, 34], "manifold": [0, 10, 21, 22, 25, 42, 43, 45, 46, 47, 50, 52], "manifold_coord": 45, "manual": [6, 32, 48], "map": [6, 14, 20, 22, 23, 26, 32, 45, 52, 54, 55], "map_3d": [0, 21, 23, 42, 43], "map_to_xyz": [0, 21, 23, 42, 43], "marker": [41, 47, 49], "mask": [0, 29, 31, 34, 38, 42, 47], "mask_batch": [0, 29, 31, 42, 43], "mask_correlated_sampl": [0, 29, 38, 42, 43], "mask_tensor": [0, 29, 31, 42, 43], "master": 31, "mat": [31, 34], "mat3": [0, 29, 31, 32, 34, 42, 43], "match": [0, 6, 7, 8, 9, 10, 22, 23, 25, 32, 46, 47, 48, 49, 50], "math": [27, 44], "mathemat": 44, "matplotlib": [41, 44, 45, 47, 49], "matplotlibdeprecationwarn": 47, "matric": 6, "matrix": [31, 32, 34, 38], "max": [6, 7, 29, 32, 34, 44, 45, 46, 47, 48, 49], "max_batch": [28, 41, 48], "max_coord_v": [10, 47, 49], "max_deg": 34, "max_eccentricity_factor": 41, "max_fix": 41, "max_lay": 41, "max_len": 47, "max_norm_rad": 22, "max_out_coord_v": 6, "max_rad": 44, "max_siz": 32, "max_step": 39, "max_val": 22, "max_valu": [31, 34], "maxim": 38, "maximum": [6, 10, 22, 24, 25, 28, 34], "maxit": 25, "maxpool2d": [2, 13], "me": 32, "mean": [31, 32, 34, 39, 44, 46, 47, 48, 50], "measur": 44, "measure_lat": [0, 29, 35, 42, 43], "median": 44, "medium": 31, "memori": [6, 20, 32], "memory_format": 32, "mention": 32, "merg": 37, "meridian": 45, "meridion": 23, "mesh": 23, "mesh_points_xyz": 23, "meshgrid": [45, 46, 47, 48, 49], "method": [6, 10, 19, 20, 23, 24, 32, 38, 41, 44, 48], "metric": [28, 36, 38, 41], "might": 32, "millisecond": 35, "min": [29, 32, 34, 44, 45, 47, 49], "min_channels_per_group": 12, "min_diff_for_cmf_a": [0, 21, 25, 42, 43], "min_fix": 41, "mini": 32, "minibatch": [32, 38], "miniforg": [45, 46, 47, 49, 50], "minim": 38, "minimum": [12, 25, 47, 49, 50], "miss": 44, "mix": 28, "mlp": [0, 1, 2, 10, 15, 19, 42, 43, 46, 47, 48, 52], "mlp_coeff": 19, "mlp_kwarg": [2, 14], "mlp_ratio": [10, 15], "mlp_spec": [0, 19, 20, 42, 43], "mlpwrapper": [0, 1, 11, 42, 43, 46, 47, 48], "mm": [23, 44], "mode": [5, 6, 7, 20, 25, 27, 31, 32, 46, 47, 48, 50], "model": [0, 2, 3, 5, 8, 10, 13, 14, 15, 16, 19, 20, 23, 25, 28, 29, 35, 38, 39, 41, 42, 43, 44, 45, 52], "model_dir": [0, 28, 48], "model_kei": [46, 47, 48, 50], "model_rearing_workshop": 14, "modif": 32, "modifi": [25, 31, 32, 47], "modul": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 24, 25, 27, 30, 32, 35, 37, 38, 41, 46, 54, 55], "module_load": [0, 29, 32, 42, 43], "moduledict": 47, "modulelist": [19, 46, 47, 48], "momentum": [39, 46, 48], "more": [6, 19, 23, 25, 27, 32, 44, 45, 46, 48, 50], "most": [6, 32, 39, 47], "motter": 23, "move": [20, 22, 31, 32, 34, 44, 50], "movement": 20, "mpl_toolkit": 44, "mplot3d": 44, "much": [27, 32, 45, 47], "mulipl": 34, "multi": [11, 15, 24], "multi_fixation_accuraci": [0, 41, 42, 43], "multi_polici": [0, 21, 24, 42, 43], "multiheadselfattent": [0, 1, 15, 42, 43], "multipl": [6, 7, 20, 22, 24, 31, 34, 50], "multipli": [23, 27, 31, 32], "multirandomsaccadepolici": [0, 21, 24, 42, 43, 45, 46, 47, 48, 49, 50], "multisampl": [0, 29, 34, 42, 43], "must": [32, 48], "n": [22, 23, 24, 26, 27, 31, 32, 34, 38, 45, 46, 47, 48, 50, 54, 55], "n_": 45, "n_angl": 44, "n_angles_ii": 44, "n_angles_init": 44, "n_class": [7, 46], "n_coord": 22, "n_fft": 32, "n_fixat": [0, 20, 21, 24, 28, 42, 43, 45, 46, 47, 48, 50], "n_l": [6, 10], "n_out": 6, "n_points_desir": 22, "n_radii": [44, 45], "n_ref": 6, "name": [11, 20, 28, 31, 32, 47, 54, 55], "named_img": 32, "named_tensor": 32, "nan": [26, 32], "nano": 8, "nativ": [45, 46, 47, 48, 49], "natur": 47, "nblauch": [26, 45, 46, 47, 48, 49, 50, 54, 55], "ncol": [45, 49], "ndarrai": [6, 23, 24, 25, 31], "nearest": [6, 7, 9, 10, 27, 32, 36, 44, 45, 46, 47, 48, 50], "nearli": [10, 32], "neat": 46, "necessari": 6, "need": [4, 8, 12, 13, 14, 15, 32, 35, 37, 45, 46, 47, 48, 54, 55], "neg": [32, 34, 38], "neighbor": [6, 7, 9, 10, 27, 36, 44, 45, 46], "neighborhood": [6, 10, 46], "neighbour": 32, "netscratch": 48, "network": [3, 6, 7, 13, 19, 20, 28, 32, 38, 41, 46, 47, 48, 50, 52, 54, 55], "neural": [6, 20, 28, 41, 52, 54, 55], "neuron": 50, "neutral": 31, "never": 32, "new": [5, 10, 22, 25, 32], "new_img": 34, "new_label": 44, "new_parameter": 10, "new_r": 44, "new_workshop": 48, "next": [44, 46], "nice": [32, 44], "niter_per_ep": 39, "nn": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 19, 24, 27, 32, 35, 37, 38, 41, 45, 46, 49], "nnmap": 6, "nnmap_doubler": 46, "no_color_v": 25, "no_fc": 14, "no_grad": 32, "node": [6, 10], "noindex": 31, "non": [0, 10, 25, 32, 34, 44, 47], "nonconform": 45, "nondeterminist": 32, "none": [2, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 38, 39, 41, 44, 46, 47, 48, 49, 50], "nonlinear": [7, 46], "nonrandom_first": 24, "nonrandom_v": [0, 21, 24, 42, 43], "norm": [0, 1, 2, 5, 7, 11, 29, 32, 42, 43, 46, 47, 48, 52], "norm1": 47, "norm2": 47, "norm_dist_from_cent": [0, 21, 24, 41, 42, 43, 45], "norm_lay": 14, "norm_typ": [7, 9, 12, 46], "normal": [0, 4, 7, 8, 9, 11, 12, 19, 22, 23, 24, 28, 29, 31, 32, 38, 41, 42, 43, 44, 45, 46, 47, 52], "normalize_coord": [0, 21, 23, 42, 43], "normalize_imagenet": [0, 29, 42, 43, 52], "normalized_dist_from_cent": 24, "normalized_shap": [4, 8], "normalizegpu": [0, 29, 34, 42, 43, 46, 47, 48, 50], "nosaccadepolici": [0, 21, 24, 42, 43, 46, 47, 48, 50], "notabl": 13, "note": [13, 15, 23, 27, 32, 38, 44, 45, 46, 48], "notebook": [44, 50, 52], "notic": 46, "notimplementederror": 12, "now": [44, 46, 54, 55], "np": [23, 24, 25, 31, 41, 44, 45, 47, 49], "npy": 26, "nrow": [45, 49], "num": [46, 47, 48, 50], "num_channel": [12, 46], "num_class": [0, 4, 8, 9, 10, 14, 15, 19, 36, 42, 43, 46], "num_clust": 49, "num_coord": [12, 23, 41, 46], "num_copi": 34, "num_entropi": 38, "num_featur": [0, 19, 20, 42, 43], "num_filt": 41, "num_fix": 46, "num_head": [3, 10, 15], "num_lay": [10, 15], "num_loc": 41, "num_neighbor": [47, 49, 50], "num_nod": 6, "num_output_channel": [31, 32, 34, 46, 47, 48, 50], "num_output_coord": 6, "num_output_nod": 6, "num_patch": 15, "num_point": [26, 44], "num_ref_coord": 6, "num_sampling_coord": [0, 21, 22, 42, 43], "num_sampling_coords_isotrop": [0, 21, 22, 42, 43], "num_sigma": 34, "num_sim": 38, "num_unit": 49, "num_work": 28, "numba": [54, 55], "number": [4, 6, 7, 8, 9, 10, 12, 15, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 36, 38, 44, 45, 46, 48, 49, 50], "numer": [6, 8, 23, 38, 44], "numpi": [6, 31, 34, 44, 45, 47, 49], "nvidia": [54, 55], "nx1": 22, "nx2": 22, "nxcxhxw": 31, "nxhxwxc": 31, "nxn": 34, "o": [47, 48, 49], "o_proj": 47, "object": [5, 6, 20, 22, 23, 24, 27, 28, 29, 32, 34, 37, 39, 41, 45, 46], "occur": 22, "occurr": 6, "odd": [32, 47], "off": [25, 32, 38, 44, 45, 47, 48, 49, 50], "offset": 11, "offset_idx": 11, "often": 32, "ok": 46, "old": 45, "omega": 46, "omegaconf": 46, "omit": 32, "onc": [6, 13, 23, 31], "one": [4, 6, 8, 12, 13, 14, 15, 28, 31, 32, 35, 37, 50], "onesid": 32, "onli": [6, 10, 11, 13, 15, 31, 32, 34, 38, 46], "onto": 44, "op": [0, 29, 32, 34, 42, 43], "open": [54, 55], "opencv": [32, 54, 55], "oper": [6, 7, 8, 10, 20, 22, 30, 31, 32, 34, 45, 50], "opt": [45, 46, 47, 49, 50], "optim": [10, 22, 25, 28, 30, 38, 39], "option": [0, 5, 6, 7, 9, 11, 12, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 34, 38, 39, 45], "order": [4, 8, 32, 44, 48], "orderopt": 48, "org": [31, 34], "orient": 44, "orig_r": 45, "origin": [15, 32, 41, 44, 45, 50], "other": [6, 19, 20, 22, 24, 28, 32, 46, 47, 48, 50], "otherwis": [7, 9, 22, 32, 44, 50], "our": [23, 28, 44, 45, 46, 47, 48, 49, 50, 54, 55], "out": [2, 11, 23, 31, 32, 37, 44, 46], "out_base_dir": [0, 41, 42, 43], "out_c": 2, "out_cart_coord": 47, "out_cart_r": 46, "out_channel": [6, 7, 9, 46, 47, 48], "out_coord": [6, 7, 46, 47, 48, 49], "out_dir": [0, 41, 42, 43], "out_featur": [46, 47, 48], "out_map_s": 14, "out_plan": 14, "out_plotting_coord": 47, "out_r": [7, 9, 46], "out_sampling_grid": 45, "outer": 44, "outermost": 32, "outlin": 49, "output": [6, 7, 8, 9, 10, 11, 15, 16, 19, 20, 22, 25, 28, 31, 32, 34, 41, 45, 46, 47, 48, 54, 55], "output_bia": 11, "output_r": 25, "output_s": [32, 34, 48], "outsid": 32, "over": [0, 6, 12, 20, 23, 26, 27, 28, 31, 32, 34, 45, 48, 50], "overlap": [10, 47], "overrid": [0, 10, 32], "overridden": [4, 8, 12, 13, 14, 15, 35, 37], "overshoot": 32, "overwrite_accuraci": 41, "own": [54, 55], "p": [11, 31, 32, 34, 46, 47, 48, 50], "p1d": 32, "p2d": 32, "p3d": 32, "p_coord": 49, "packag": [32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55], "pad": [0, 2, 5, 6, 10, 13, 14, 22, 29, 32, 42, 43, 47, 49], "pad_cartesian": [0, 21, 22, 42, 43], "pad_mod": [31, 32, 34], "padding_dist": 22, "padding_mod": [31, 32], "padh": 32, "padw": 32, "page": 51, "pair": 38, "pairs_per_sampl": [0, 29, 38, 42], "panda": 44, "paper": 46, "parallel": 32, "param": [14, 31, 32, 34, 39, 44], "param_nam": [37, 44], "paramet": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 36, 37, 38, 39, 45], "parameter": [10, 25, 47], "parametr": [37, 47], "parametrizationlist": 47, "parametrizedlinear": 47, "parent": [10, 27], "parent_kei": 29, "part": 23, "partial": [2, 11], "particular": [22, 44, 45], "particularli": [19, 45], "partit": [10, 47, 49], "partitioningpatchembed": [0, 1, 10, 42, 43, 47], "pass": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 24, 25, 27, 31, 32, 35, 37, 38, 45, 46, 47, 48, 49], "past": 39, "patch": [3, 5, 10, 15, 34, 47, 50], "patch_emb": [15, 47, 49], "patch_embed": 47, "patch_overlap_factor": 10, "patch_siz": [10, 15, 34], "patchembed": [0, 1, 15, 42, 43], "path": [0, 3, 5, 17, 20, 26, 28, 41, 42, 43, 48, 49, 52], "pattern": 41, "pct": 31, "pd": [28, 44], "peak": [31, 50], "per": [12, 26, 31, 34, 38, 46, 50], "percentag": 31, "perceptron": 11, "perceptu": 46, "perfect": 46, "perform": [4, 6, 8, 10, 12, 13, 14, 15, 19, 23, 27, 28, 31, 32, 34, 35, 36, 37, 39, 41, 50], "peripher": 45, "peripheri": 25, "permut": [31, 32], "perspect": [0, 29, 32, 42, 43], "perspective_coeff": 32, "phase": 28, "phi": [23, 44], "phi_3d": [0, 21, 23, 42, 43], "photoreceptor": 27, "physic": 32, "pi": [23, 41, 44, 45], "pico": 8, "piec": 46, "pil": [31, 32], "pillow": 32, "pip": [54, 55], "pipelin": [20, 48], "pivot": 32, "pixel": [10, 22, 25, 27, 31, 32, 34, 45, 46, 47, 48, 49, 50], "pixel_valu": 10, "pkg": [54, 55], "place": [12, 22, 26, 27, 32], "plai": 45, "plane": [9, 14, 32], "plausibl": 6, "pleas": [32, 45], "plot": [6, 22, 23, 27, 41, 44, 45, 47, 49], "plot_coordin": [0, 41, 42, 43], "plot_fixated_imag": 49, "plot_hex": 41, "plot_lay": [6, 41], "plot_partitioned_imag": 49, "plot_partitioning_outlin": 49, "plot_patch": 49, "plot_rf_diamet": [0, 41, 42, 43], "plot_sampling_grid": [0, 41, 42, 43], "plot_spatial_rf_from_multi_lay": [0, 41, 42, 43], "plot_unit": 49, "plotting_coord": 44, "plt": [41, 44, 45, 47, 49], "png": [17, 45], "point": [6, 20, 22, 23, 24, 25, 26, 29, 31, 32, 34, 41, 44, 46, 47, 48, 49, 50], "pointcloud_mod": 40, "polar": [0, 1, 2, 14, 22, 23, 25, 27, 42, 43, 44, 45, 47, 49, 52], "polar_coord": 44, "polar_to_cart": [0, 21, 22, 42, 43], "polar_visu": 23, "polarpadd": [0, 1, 13, 42, 43], "polici": [0, 20, 21, 42, 43, 45, 46, 49, 52], "pool": [2, 6, 7, 9, 14, 27, 46, 48], "pool_aft": 7, "pool_coord": 46, "pool_k": [7, 46], "pool_kernel_cartesian": 46, "pool_lay": [9, 46], "pool_mod": 7, "pool_strid": [7, 46], "port": [54, 55], "pos_emb_typ": [10, 15], "posit": [10, 15, 31, 32, 34, 38], "position": 32, "positionalencod": [0, 1, 15, 42, 43], "possibl": [10, 32, 34, 46], "post": [20, 22, 25, 32], "post_transform": [20, 25, 46, 47, 48, 50], "poster": [0, 29, 32, 42, 43], "postproc": 22, "potenti": 32, "practic": 46, "pre": [3, 6, 14, 15, 20, 24, 25, 27, 38, 48, 52], "pre_block_pool": 14, "pre_transform": [20, 25, 46, 47, 48, 50], "precis": [22, 28, 32, 50], "precomput": 23, "predict": [26, 28], "prefer": [10, 47], "prefetch": 28, "prep_dinov3_finetun": [0, 1, 5, 42, 43], "prepar": [5, 27, 31, 38], "preprocess": 2, "present": 32, "preserv": [5, 14, 23, 25, 32, 45], "preserve_kernel_norm": 5, "pretrain": [14, 36, 50, 54, 55], "pretrained_model": 3, "prev": 44, "prevent": [20, 32], "previou": [26, 32, 46, 50], "prim": 35, "primarili": [23, 50], "print": [0, 20, 32, 46, 49], "print_all_funct": [0, 41, 42, 43], "prior": 45, "priorit": 0, "privat": [26, 45, 46, 47, 48, 50, 54, 55], "probabl": [26, 31, 34, 38], "probe": [0, 28, 42, 43, 46, 47, 48, 50, 52], "probe_lay": 41, "probes_layer_ind": 19, "problem": 13, "process": [6, 7, 9, 11, 19, 20, 22, 24, 25, 28, 30, 38, 44, 46, 50, 54, 55], "processor": 5, "produc": [22, 32, 34, 45, 47], "product": [32, 45], "progress": [2, 14, 29, 50], "proj_relu": 11, "project": [11, 15, 16, 25, 44, 45], "projector": [16, 20, 28, 46, 47, 48], "projector_ssl": 16, "properti": 34, "proport": 34, "protocol": 50, "prototyp": 28, "provid": [6, 10, 11, 24, 32, 41, 44, 46, 47, 50, 52, 54, 55], "pt": 23, "pull": 32, "purpos": [6, 11, 20], "push": 38, "puzzl": 46, "py": [31, 32, 39, 45, 46, 47, 48, 49, 50, 54, 55], "pycapsul": 32, "pyplot": [44, 45, 47, 49], "python": [31, 32, 34, 54, 55], "python3": [45, 46, 47, 48, 49, 50], "pytorch": [6, 28, 31, 32, 34, 45, 46, 47, 49, 52, 54, 55], "q": 15, "q_proj": 47, "q_rot": 15, "quadrat": 50, "quasi_random": 48, "queri": 15, "quickli": [22, 48], "quickstart": [52, 54, 55], "quiet": [0, 22], "r": [6, 22, 23, 25, 27, 31, 32, 37, 41, 44, 45, 49, 54, 55], "r_": [44, 45], "r_delta": 44, "r_from_w": 44, "r_from_z": [0, 21, 23, 42, 43], "r_i": 44, "r_j": 45, "rad": 23, "rad_i": 44, "radi": 44, "radial": [29, 45], "radian": [0, 23, 29, 31, 42, 43], "radii": [22, 23, 25, 44, 45], "radiu": [22, 23, 25, 26, 44, 45], "radius_diff": 44, "rais": [12, 32], "rand": [31, 32, 46, 48], "randint": 47, "randn": [20, 32], "random": [20, 24, 29, 31, 32, 34, 45, 47, 49], "random_adjust_bright": [0, 29, 31, 42, 43], "random_adjust_contrast": [0, 29, 31, 42, 43], "random_choic": [0, 29, 34, 42, 43], "random_color_jitt": [0, 29, 32, 42, 43], "random_gaussian_blur2d": [0, 29, 31, 42, 43], "random_grayscal": [0, 29, 31, 42, 43], "random_grid_sampl": [0, 29, 31, 42, 43], "random_hsv_jitter2": [0, 29, 31, 42, 43], "random_solar": [0, 29, 31, 42, 43], "randomappli": [0, 29, 34, 42, 43], "randombright": [0, 29, 34, 42, 43], "randomcolorjitt": [0, 29, 34, 42, 43, 46, 47, 48, 50], "randomcolorjitteryiq": [0, 29, 34, 42, 43], "randomcontrast": [0, 29, 34, 42, 43], "randomgaussianblur": [0, 29, 34, 42, 43], "randomgrayscal": [0, 29, 34, 42, 43, 46, 47, 48, 50], "randomhorizontalflip": [0, 29, 34, 42, 43, 46, 47, 48, 50], "randomli": [24, 31, 34], "randompatchshuffl": [0, 29, 34, 42, 43], "randomrot": [0, 29, 34, 42, 43], "randomrotateobject": [0, 29, 34, 42, 43], "randomsolar": [0, 29, 34, 42, 43], "randomzoom": [0, 29, 34, 42, 43], "rang": [20, 22, 24, 31, 32, 34, 41, 44, 45, 47, 49], "rank": 50, "rate": [4, 8, 10, 15, 19, 28, 38], "rather": [22, 23, 24, 27, 32, 38, 45, 46, 47, 48, 49, 50], "ratio": [10, 15, 24, 25, 28, 29, 48], "re": [22, 27, 32, 34, 45, 46, 48, 50], "readi": [3, 46], "receiv": 50, "recept": [6, 22, 23, 41, 46], "recip": [4, 8, 12, 13, 14, 15, 35, 37], "recognit": 14, "recommend": [38, 45, 46, 47, 48, 49, 50], "recompil": 48, "recomput": 32, "recompute_scale_factor": 32, "recreat": 28, "rectangular": [45, 46], "red": 31, "reduc": [6, 25, 32, 38, 50], "reduct": 50, "redund": 38, "reevalu": 39, "ref_coord": 6, "ref_frame_side_length": [6, 10, 46], "refer": [6, 10, 23, 31, 32, 44, 46, 54, 55], "refin": 32, "refine_nam": [0, 29, 32, 42, 43], "reflect": [31, 32], "reflectionpad2d": 32, "regardless": [46, 47, 48, 50], "region": [22, 45], "regist": [4, 8, 12, 13, 14, 15, 20, 32, 35, 37], "register_hook": [0, 29, 32, 42, 43], "register_post_accumulate_grad_hook": [0, 29, 32, 42, 43], "regular": [27, 28, 38, 45], "reinforc": [0, 29, 32, 42, 43], "rel": [32, 45, 47], "rel_cart_coord": 45, "relationship": [3, 10, 15], "releas": [45, 46, 47, 48, 49], "relev": [22, 23, 46], "reli": [32, 34], "relu": [2, 7, 11, 46, 47, 48], "remain": [11, 38], "remap": 32, "remot": [28, 54, 55], "remov": [14, 32, 37, 44, 47], "remove_lora": [0, 29, 37, 42, 43], "renam": [0, 29, 32, 42, 43], "rename_": [0, 29, 32, 42, 43], "rename_map": 32, "renamed_img": 32, "repeat": 28, "replac": [10, 13, 44, 49, 50], "replace_stride_with_dil": 14, "replai": [0, 29, 34, 42, 43], "replic": 32, "replicationpad2d": 32, "repo": [54, 55], "report": 45, "repr_loss": 38, "repr_siz": [11, 20], "repr_size_in_channel": 2, "repres": [25, 31, 32, 38, 41], "represent": [11, 19, 20, 25, 38, 45], "reproducible_result": [0, 29, 42, 43, 52], "request": 32, "requir": [12, 15, 22, 32, 45, 46, 47, 48, 49, 54, 55], "requires_grad": 32, "requires_grad_": [45, 46, 47, 48, 49, 50], "res_in": 26, "res_mult": 27, "resampl": [5, 31], "resample_patch_embed_conv": [0, 1, 5, 42, 43], "rescal": [26, 34], "research": [54, 55], "reset": 28, "reset_model": [0, 28, 42, 43], "reshap": [37, 45], "resid": 6, "residu": [9, 14], "resiz": [0, 28, 29, 32, 42, 43, 48], "resize_a": [0, 29, 32, 42, 43], "resnet": [0, 1, 9, 42, 43, 52], "resnet101": [0, 1, 14, 42, 43], "resnet18": [0, 1, 14, 42, 43], "resnet34": [0, 1, 14, 42, 43], "resnet50": [0, 1, 14, 42, 43], "resnet_ssl": [0, 1, 14, 42, 43], "resolut": [6, 7, 8, 9, 10, 14, 22, 25, 26, 27, 28, 32, 45, 46, 47, 48, 49, 50], "resourc": [7, 8, 9, 10, 22, 25, 44, 46, 50], "respect": [23, 32], "respons": [4, 8, 31, 45], "rest": 32, "restrict": 45, "result": [23, 28, 32, 34, 38, 41], "retain": [32, 48], "retain_graph": 32, "retin": [24, 25, 27, 49, 52, 54, 55], "retina": [0, 21, 42, 43, 45, 46, 47, 48, 49, 50, 52], "retinal_transform": [0, 21, 24, 42, 43, 45, 46, 47, 48, 49, 50], "retinaltransform": [0, 21, 24, 25, 27, 42, 43, 46, 47, 48, 49, 50], "retriev": 20, "return": [0, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 44, 45, 46, 47, 48, 49], "return_complex": 32, "return_coord": 27, "return_count": 32, "return_input": 34, "return_invers": 32, "return_layer_output": [11, 16], "return_only_loss": 38, "return_pr": 28, "revers": 23, "reverse_map": [0, 21, 23, 42, 43], "reward": 32, "reweight": 6, "rf": [6, 29], "rf_alpha": 41, "rf_center": 29, "rf_scalar": 47, "rf_size": [47, 49], "rfloor": 32, "rgb": [31, 34], "rgb2yiq": 34, "rgb_to_grayscal": [0, 29, 32, 42, 43], "rgb_to_xyz": [0, 29, 31, 42, 43], "rgc": 27, "rho": [23, 44], "rho_3d": [0, 21, 23, 42, 43], "rho_z_phi": 23, "right": [32, 34, 44, 50], "ring": 22, "rm": 31, "rng": 31, "robust": 26, "roll": 44, "root": 23, "rope": [10, 15], "rope_embed": 47, "ropemultiheadselfattent": [0, 1, 15, 42, 43], "ropepositionalencod": [0, 1, 15, 42, 43], "ropetransformerblock": [0, 1, 15, 42, 43], "rotari": 15, "rotat": [0, 29, 31, 32, 34, 42, 43], "rotate_mat": [0, 29, 31, 42, 43], "rotate_object": [0, 29, 31, 42, 43], "rotate_object_mat": [0, 29, 31, 42, 43], "round": [32, 44], "rovamo": 44, "rovamu": 23, "row": [22, 27, 31, 45], "row_pct": 31, "rowcol_to_xi": [0, 21, 22, 42, 43], "rule": 32, "run": [4, 6, 8, 10, 12, 13, 14, 15, 20, 22, 27, 28, 32, 34, 35, 37], "runner": [45, 46, 47, 49], "runs_df": 35, "runtimeerror": 32, "runtimewarn": [46, 48, 50], "s_a": [47, 50], "s_coord": 41, "saccad": [20, 24, 45], "saccadenet": [0, 3, 19, 24, 26, 42, 43, 47, 48, 50, 52], "saccadenet_alexnet2023_baselin": [0, 1, 3, 42, 43], "saccadenet_alexnet2023_knn": [0, 1, 3, 42, 43], "saccadenet_dinov3": [0, 1, 3, 42, 43], "saccadenet_knnresnet": [0, 1, 3, 42, 43], "saccadenet_knnresnet18": [0, 1, 3, 42, 43], "saccadenet_knnresnet18_dwsep": [0, 1, 3, 42, 43], "saccadenet_knnresnet18_dwsep_lowr": [0, 1, 3, 42, 43], "saccadenet_knnresnet18_lowr": [0, 1, 3, 42, 43], "saccadenet_knnresnet9": [0, 1, 3, 42, 43], "saccadenet_knnresnet9_dwsep": [0, 1, 3, 42, 43], "saccadenet_knnresnet9_dwsep_lowr": [0, 1, 3, 42, 43], "saccadenet_knnresnet9_lowr": [0, 1, 3, 42, 43], "saccadenet_knnvit": [0, 1, 3, 42, 43], "saccadenet_knnvit_bas": [0, 1, 3, 42, 43], "saccadenet_knnvit_smal": [0, 1, 3, 42, 43], "saccadenet_knnvit_tini": [0, 1, 3, 42, 43], "saccadenet_resnet18_baselin": [0, 1, 3, 42, 43], "saccadenet_resnet34_baselin": [0, 1, 3, 42, 43], "saccadenet_resnet50_baselin": [0, 1, 3, 42, 43], "saccadenet_vit": [0, 1, 3, 42, 43], "saccadenet_vit_bas": [0, 1, 3, 42, 43], "saccadenet_vit_smal": [0, 1, 3, 42, 43], "saccadenet_vit_tini": [0, 1, 3, 42, 43], "saccadenetprob": [0, 19, 42, 43, 46, 47, 48, 52], "saccadepolici": 46, "salienc": [0, 21, 42, 43, 52], "same": [6, 8, 25, 26, 27, 31, 32, 38, 44, 45], "samp_w": 44, "sampl": [6, 7, 9, 10, 20, 22, 23, 24, 25, 26, 27, 32, 38, 41, 46, 47, 48, 49, 50, 52, 54, 55], "sample_cortex": [6, 7, 9, 10, 27, 46, 47, 48, 49], "sample_fix": [0, 21, 24, 42, 43], "sample_from_logdens": [0, 21, 26, 42, 43], "sample_from_logits_pc": [0, 21, 26, 42, 43], "sample_param": [0, 29, 34, 42, 43], "sampled_indic": 26, "sampler": [0, 21, 25, 42, 43, 46, 47, 48, 50, 52], "sampling_grid": 22, "sampling_r": 45, "samplingcoord": [0, 6, 21, 22, 27, 42, 43, 44, 45, 46, 47, 48], "sat": 31, "sat_mat": [0, 29, 31, 34, 42, 43], "satisfi": [25, 44], "satur": [25, 31, 32, 34, 46, 47, 48, 50], "saturation_factor": [32, 34], "save": [28, 41, 50], "save_checkpoint": [0, 28, 42, 43], "save_dir": 0, "scalar": [32, 46, 48, 50], "scale": [4, 8, 19, 22, 23, 24, 25, 26, 28, 31, 32, 34, 38, 44, 48, 50], "scale_factor": [31, 32, 34], "scale_rang": 34, "scaler": 28, "scatter": [22, 41, 44, 45, 47, 49], "scatter_s": 45, "schedul": 28, "schwartz": 23, "scikit": 32, "scipi": 49, "scope": 44, "score": 38, "scratch": 28, "script": [46, 54, 55], "scriptmodul": [2, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 24, 35, 37, 38], "seaborn": 44, "search": [0, 22], "second": [38, 47, 48, 49, 50], "see": [23, 32, 34, 44, 45, 46, 48, 50, 54, 55], "seed": [29, 34, 41, 46, 47, 48, 50], "seen": [32, 46], "select": [24, 32, 38, 46, 49], "selected_kernel": 31, "self": [6, 15, 16, 20, 25, 32, 38, 45, 46, 47, 48, 49, 50], "semant": 32, "sens": [0, 42, 43, 44, 46, 47, 48, 49, 50, 52], "sensit": [25, 31], "sensor": [22, 23, 27, 46, 47, 50, 52, 54, 55], "sensor_coord": 46, "sensormanifold": 44, "sep": 29, "separ": [6, 11, 15, 22, 28, 34, 54, 55], "seq_len": 15, "sequenc": 32, "sequenti": [2, 9, 11, 46, 47, 48], "serial": 32, "serializ": 32, "server": [54, 55], "set": [6, 19, 20, 22, 24, 26, 28, 31, 32, 34, 35, 38, 44, 45, 46, 47, 48], "set_aspect": 45, "set_titl": [44, 45], "set_trac": [0, 29, 31, 42, 43], "set_vis": 44, "set_xlabel": 44, "set_xlim": [45, 47, 49], "set_xtick": [44, 45], "set_ylabel": 44, "set_ylim": [44, 45, 47, 49], "set_ytick": [44, 45], "set_zlabel": 44, "setup": [54, 55], "setup_activation_hook": [0, 20, 42, 43], "setup_distribut": [0, 28, 42, 43], "sever": [20, 32, 34], "sf": [31, 34], "sgd": 32, "sh": 32, "shape": [4, 6, 7, 8, 9, 12, 19, 20, 22, 24, 25, 26, 27, 31, 32, 38, 41, 44, 45, 46, 47, 48, 49, 50], "share": [2, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 24, 32, 35, 37, 38], "share_memory_": [0, 29, 32, 42, 43], "shark": [17, 45], "sharpness_factor": 32, "shift": 44, "short": 31, "should": [4, 8, 12, 13, 14, 15, 27, 32, 34, 35, 37], "shouldn": 13, "show": [41, 44, 45, 47, 49], "show_cbar": 44, "shrink": 44, "shuffl": 34, "side": [6, 10, 22, 32], "sigma": [6, 25, 32, 46, 47, 48, 50], "sigma_rang": 34, "sigmoid": [0, 29, 31, 42, 43], "sign": 45, "signatur": 32, "silent": [4, 8, 12, 13, 14, 15, 35, 37], "sim_coeff": [0, 29, 38, 42, 43], "simclr": [34, 38], "simclrloss": [0, 29, 38, 42, 43], "similar": [27, 38, 45], "similarity_f": [0, 29, 38, 42], "similarli": 48, "simpl": [11, 12, 19, 24, 32, 38, 45, 46], "simpler": 47, "simplex": 49, "simpli": [46, 47], "simplic": 49, "simul": [20, 25, 32], "sin": [23, 44], "sin_i": 15, "sin_x": 15, "sinc": [4, 8, 12, 13, 14, 15, 23, 31, 32, 35, 37, 44, 45, 46, 48], "sine": [10, 15], "singl": [11, 19, 20, 31, 32, 34, 39, 41], "site": [45, 46, 47, 48, 49, 50], "size": [5, 6, 8, 10, 11, 15, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 38, 44, 45, 46, 48, 49, 50], "size_mult": 45, "size_pix": 45, "skip": 48, "slight": 47, "slow_dir": 0, "slower": 6, "small": [3, 6, 26, 32, 45, 48], "smaller": [6, 10, 22, 23, 25, 27, 44, 45], "smallest": [47, 49], "smoother": 6, "sn": 44, "so": [6, 23, 31, 32, 34, 44, 45, 48, 50], "softmax": [6, 38], "solar": [0, 29, 31, 32, 34, 40, 42, 43], "solarization_prob": 34, "solut": [44, 47], "solv": [0, 29, 32, 42, 43, 44], "some": [32, 44, 46, 47, 50], "soon": 48, "sort": [32, 44, 47, 49], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 54, 55], "sourcetensor": [45, 46, 47, 48, 49, 50], "space": [6, 10, 15, 22, 23, 25, 31, 32, 44, 45, 47], "spars": 32, "sparser": 45, "spatial": [3, 6, 10, 15, 25, 32, 48, 49], "special": 32, "specif": [6, 11, 19, 25, 41], "specifi": [0, 3, 7, 9, 15, 19, 20, 22, 23, 24, 27, 28, 31, 32, 34, 45, 46], "spectrum": 44, "spine": 44, "split": [0, 29, 32, 42, 43], "split_siz": 32, "sqrt": [44, 45], "squar": [6, 15, 22, 31, 32, 34], "squeez": 45, "src": [45, 46, 47, 48, 49], "srgb": 31, "srgb_to_lm": [0, 29, 31, 42, 43], "srgb_to_lrgb": [0, 29, 31, 42, 43], "ssl": [14, 20, 54, 55], "ssl_fixat": [46, 47, 48, 50], "stabil": [6, 8], "stack": 44, "stage": [4, 8, 19, 20], "standard": [3, 6, 9, 10, 15, 25, 27, 28, 31, 38, 45, 47, 48, 50], "start": [23, 25, 31, 32, 46, 50, 54, 55], "start_cmf_a": 25, "start_r": [25, 45, 49], "start_warmup_valu": 39, "stat": 35, "state": [2, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 24, 28, 32, 34, 35, 37, 38, 52, 54, 55], "state_dict": [0, 29, 39, 42, 43, 46, 47, 48, 50], "statement": [0, 41], "static": 34, "statist": 28, "std": [31, 34, 39, 46, 47, 48, 50], "std_coeff": [0, 29, 38, 42, 43], "std_loss": 38, "std_transform": [0, 29, 42, 43, 52], "stderr": 14, "step": [0, 29, 34, 39, 42, 43, 44, 49], "step0_sensor_manifold": [53, 54, 55], "step1_sampl": [46, 53, 54, 55], "step2_knnconv": [53, 54, 55], "step3_dinov3": [53, 54, 55], "stft": [0, 29, 32, 42, 43], "still": 50, "stochast": [4, 8], "stop": 28, "storag": [0, 29, 32, 42, 43, 54, 55], "storage_typ": [0, 29, 32, 42, 43], "store": [22, 27, 34, 44, 45, 46, 48], "str": [0, 5, 6, 7, 8, 9, 10, 11, 12, 15, 19, 20, 22, 23, 25, 26, 27, 28, 32, 37], "straight": 45, "strategi": 6, "stream": [32, 48], "streetview": [45, 49], "stricter": [54, 55], "strictli": [0, 32], "stride": [2, 5, 6, 7, 8, 9, 14, 22, 32, 46], "stride_per_lay": 7, "string": [11, 19, 20, 29, 32, 44], "strong": 45, "stronger": [6, 10, 22, 23, 27, 44, 45], "structur": [38, 41, 44], "style": [6, 7, 8, 9, 10, 14, 22, 25, 27, 45, 46, 47, 48, 50], "sub_coord": 49, "subclass": [4, 8, 12, 13, 14, 15, 32, 35, 37], "subject": 32, "submodul": 26, "subplot": [44, 45, 47, 49], "subset": [28, 32], "successfulli": [46, 47, 48, 50], "sum": 6, "sup_fix": [46, 47, 48, 50], "super": [32, 46], "supervis": [16, 20, 28, 35, 38], "support": [4, 5, 6, 8, 13, 16, 32, 54, 55], "suppress": [0, 22], "suptitl": 45, "surfac": [6, 23, 44], "sw": 32, "swap": 32, "swap_tensor": 32, "switch": 32, "symeig": [0, 29, 32, 42, 43], "symmetr": 31, "system": [3, 6, 7, 10, 19, 20, 22, 23, 28, 44, 54, 55], "sz": 31, "t": [13, 31, 32, 36, 44, 45, 47, 48, 49, 54, 55], "t4d": 32, "tab20b": 47, "tailor": 19, "take": [4, 8, 11, 12, 13, 14, 15, 20, 24, 35, 37, 44, 50], "taken": 44, "target": [5, 6, 22, 25, 28, 34, 46, 48], "target_hw": 5, "task": [16, 19], "temperatur": [0, 26, 29, 36, 38, 42], "templat": 26, "tempor": 32, "temporarili": 20, "ten_crop": [0, 29, 32, 42, 43], "tend": 6, "tensor": [0, 6, 7, 8, 9, 10, 11, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "tensorbas": 32, "tensorbatch": [31, 34], "tensorfloat32": 32, "tensorimag": [31, 34], "tensorimagebatch": [31, 34], "tensorshap": [45, 46, 47, 48, 49], "term": [23, 38], "test": [23, 31, 50], "test_featur": 36, "test_label": 36, "text": [32, 44], "than": [6, 10, 22, 23, 24, 25, 27, 32, 38, 45, 46, 47, 48, 49, 50], "thankfulli": 44, "thei": [27, 32, 38, 46], "them": [4, 8, 12, 13, 14, 15, 23, 27, 32, 35, 37, 41, 46], "therebi": 47, "therefor": 32, "theta": [23, 31, 41, 44, 45], "thi": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 37, 38, 41, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55], "thing": [48, 54, 55], "third": 44, "this_fram": 45, "those": [32, 48], "though": [31, 32], "thought": 45, "three": [31, 47], "threshold": [31, 32, 34], "through": [7, 9, 10, 11, 15, 20, 38, 46, 47], "thu": [23, 46, 50], "tight_layout": [44, 45, 47, 49], "tile": 10, "time": [31, 32, 34, 50], "timeit": [0, 29, 42, 43, 52], "tini": [3, 8], "titl": 44, "tmp_scale": 26, "to_channels_first": [0, 29, 31, 42, 43], "to_channels_last": [0, 29, 31, 42, 43], "to_devic": [0, 29, 31, 42, 43], "to_float": [0, 29, 31, 42, 43], "to_grayscal": [0, 29, 31, 42, 43], "to_numpi": [0, 29, 31, 42, 43], "to_sparse_coo": [0, 29, 32, 42, 43], "to_torch_imag": [0, 29, 31, 42, 43], "tochannelsfirst": [0, 29, 34, 42, 43], "tochannelslast": [0, 29, 34, 42, 43], "todevic": [0, 29, 34, 42, 43], "tofloat": [0, 29, 34, 42, 43], "tofloatdiv": [0, 29, 34, 42, 43], "togeth": [32, 34], "tograyscalegpu": [0, 29, 34, 42, 43], "tograyscaletorchgpu": [0, 29, 34, 42, 43], "token": [3, 10, 15, 47, 49], "tol": 34, "tonumpi": [0, 29, 34, 42, 43], "tool": [54, 55], "top": [32, 34, 44, 48], "top_1_val": 48, "topk": 38, "torch": [5, 6, 7, 8, 9, 10, 11, 16, 19, 20, 22, 23, 24, 25, 26, 27, 31, 32, 34, 38, 41, 44, 45, 46, 47, 48, 49, 50], "torch_pad": [0, 29, 32, 42, 43], "torchaudio": [54, 55], "torchvis": [31, 32, 54, 55], "total": [6, 12, 22, 38, 44], "total_loss": 38, "total_step": 39, "total_unit": 49, "totensor": [28, 34], "totorchimag": [0, 29, 34, 42, 43, 46, 47, 48, 50], "track": [28, 32], "track_running_stat": [46, 48], "trade": [38, 50], "train": [0, 3, 5, 14, 20, 28, 38, 41, 42, 43, 48, 52, 54, 55], "train_compress": 48, "train_dataset": [28, 48], "train_featur": 36, "train_label": 36, "train_loop": [0, 28, 42, 43], "trainer": [0, 35, 36, 41, 42, 43, 52], "training_stat": 28, "transax": 44, "transform": [0, 3, 10, 15, 20, 22, 24, 25, 27, 28, 29, 31, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52], "transform_sampling_grid": [0, 21, 22, 42, 43, 45], "transformerblock": [0, 1, 15, 42, 43], "translat": [31, 47], "translate_mat": [0, 29, 31, 42, 43], "transpar": 32, "transpos": [10, 32, 49], "trasform": 34, "treat": 38, "trigger": [32, 45, 46, 47, 48, 49], "trilinear": 32, "true": [0, 2, 5, 6, 7, 9, 10, 11, 14, 16, 20, 22, 23, 25, 27, 28, 29, 31, 32, 34, 35, 37, 38, 41, 44, 45, 46, 47, 48, 49, 50], "trunc_normal_": [0, 29, 39, 42, 43], "try": [32, 44], "tune": [5, 22], "tupl": [4, 5, 6, 10, 11, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 32, 34, 35, 38], "turbo": [54, 55], "turn": [10, 11, 25, 37, 48], "tweak": 32, "twin": 38, "two": [4, 8, 9, 25, 32, 38, 48], "tx": 31, "txt": [54, 55], "ty": 31, "type": [0, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 36, 38, 41, 45, 46, 47, 48, 49], "typedstorag": 32, "typeerror": 32, "typic": [6, 10, 23, 27, 46], "u": [44, 46], "uint8": 32, "ultim": 32, "un": 23, "unchang": 15, "under": [44, 48, 50, 51], "underli": [32, 41], "undersampl": 25, "understand": [15, 44, 45], "undesir": 32, "unflatten": [0, 29, 32, 42, 43], "unfold": [44, 50], "unfrozen": 5, "uniform": [10, 22, 23, 25, 44, 45, 50], "uniform_as_grid": 22, "uniformli": 34, "unimport": 44, "uniqu": [0, 29, 32, 42, 43], "unique_consecut": [0, 29, 32, 42, 43], "unit": [6, 23, 41, 44, 45, 47, 49], "unit_coord": 49, "unit_idx": 49, "unit_img": 49, "unit_ind": 49, "unit_of_interest": 6, "unitless": 23, "unless": 32, "unlik": [23, 32], "unment": 32, "unnam": 32, "unstabl": 48, "until": 32, "untyped_storag": 32, "untypedstorag": 32, "unus": [12, 24, 49], "up": [20, 28, 32, 44, 46, 50], "up_proj": 47, "upcom": [45, 46, 47, 48, 49], "updat": [32, 39, 48], "updated_logit": 26, "upon": 31, "upper": 44, "uppercas": 29, "upsampl": [5, 32], "us": [3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 19, 20, 22, 23, 24, 25, 27, 28, 31, 32, 34, 36, 38, 41, 44, 46, 47, 49, 50, 51, 54, 55], "usag": [32, 50, 54, 55], "use_autocast": 35, "use_cuda_ev": 35, "use_inference_mod": 35, "use_scaled_fov": 25, "user": [32, 45, 46, 47, 48, 49, 50, 54, 55], "userwarn": [45, 46, 47, 48, 49, 50], "usual": [13, 23], "util": [0, 22, 43, 45, 48, 49], "v": [27, 31, 32, 34, 35, 48], "v1": [25, 44], "v2": [4, 8], "v_proj": 47, "val": [28, 31, 48], "val_compress": 48, "val_crop_s": 24, "val_dataset": [28, 48], "val_load": 48, "val_loop": [0, 28, 42, 43], "val_mat": [0, 29, 31, 34, 42, 43], "val_met": 48, "valid": [11, 12, 20, 24, 25, 28, 32, 38], "valu": [4, 6, 7, 8, 10, 11, 20, 22, 23, 25, 26, 31, 32, 34, 35, 38, 44, 45, 46, 47, 48, 49, 50], "value_factor": 34, "var": 47, "vari": 44, "variabl": [20, 27, 50], "varianc": 38, "variant": 47, "variou": [6, 41, 51], "ve": 46, "vector": [27, 32, 38], "veri": [6, 45], "version": [22, 23, 31, 32, 38, 45], "version_bas": 46, "vertic": [31, 44, 45, 49], "vertical_flip": 32, "verticalalign": 44, "vflip": [0, 29, 32, 42, 43], "via": [3, 10, 23, 32, 45], "vicreg": 38, "vicregloss": [0, 29, 38, 42, 43], "view": [6, 7, 8, 9, 10, 22, 23, 25, 27, 32, 38, 44, 45, 54, 55], "view_init": 44, "viridi": 45, "virsu": [23, 44], "vis_cartesian_to_cort_cartesian": [0, 21, 23, 42, 43], "vis_cartesian_to_cortical_cartesian_coord": [0, 21, 23, 42, 43], "vis_cartesian_to_cortical_cylindr": [0, 21, 23, 42, 43], "visibl": 41, "vision": [3, 6, 9, 10, 14, 15, 20, 27, 30, 31, 32, 52], "visionlab": [54, 55], "visiontransform": [0, 1, 10, 15, 42, 43], "visual": [0, 6, 10, 11, 22, 23, 25, 38, 42, 43, 44, 50, 52], "visualize_filt": [0, 41, 42, 43, 52], "visualize_filter_over_spac": [0, 41, 42, 43], "visualize_filters_knn": [0, 41, 42, 43, 52], "visualize_patch_emb": 47, "vit": [0, 1, 3, 6, 42, 43, 52, 54, 55], "vmax": [41, 44, 49], "vmax_percentil": 41, "vmin": [41, 44, 49], "volumetr": 32, "vscode": [54, 55], "w": [2, 22, 24, 31, 32, 34, 37, 44, 45, 46, 49], "w3": 31, "w_": [32, 45], "w_base": 37, "w_delta": [44, 46, 48, 50], "w_eff": 37, "w_i": 45, "w_max": [46, 48, 50], "w_min": [46, 48, 50], "w_start": 31, "wa": [32, 47, 48, 50], "wai": [32, 48], "walk": 47, "wandb": 28, "want": [23, 32, 50, 54, 55], "warmup": 35, "warmup_epoch": 39, "warmup_step": 39, "warn": [45, 46, 47, 48, 50], "warp": [22, 23, 25], "wavelength": 31, "we": [6, 10, 13, 20, 23, 25, 32, 34, 37, 44, 45, 46, 47, 50], "weight": [0, 2, 4, 6, 8, 10, 14, 15, 28, 29, 32, 37, 38, 41, 45, 47], "weight_decai": 39, "weight_decay_filt": 39, "weight_shap": 37, "welcom": [54, 55], "well": [6, 44], "were": 32, "what": [22, 44, 46], "whatsoev": 6, "when": [0, 23, 32, 38, 44, 48], "where": [6, 11, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 38, 40, 44, 45, 46, 47, 48, 50], "wherea": [48, 50], "whether": [0, 5, 6, 7, 9, 10, 11, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 34], "which": [6, 7, 10, 13, 19, 22, 23, 24, 27, 28, 31, 32, 34, 44, 45, 46, 48, 50, 54, 55], "whichev": 32, "while": [4, 8, 12, 13, 14, 15, 23, 25, 32, 35, 37, 38], "width": [4, 5, 9, 15, 24, 25, 26, 27, 32, 41], "width_per_group": 14, "width_ratio": [45, 47], "wiki": 31, "wikipedia": 31, "win_length": 32, "window": 32, "within": [4, 8, 12, 13, 14, 15, 24, 26, 32, 35, 37, 38, 45, 54, 55], "without": [10, 20, 31, 32, 45, 54, 55], "won": 45, "work": [15, 31, 32, 34, 44, 45, 46, 47, 48, 49, 52, 54, 55], "worker": [28, 48], "workhors": 45, "workshop": [53, 54, 55], "world_siz": [0, 29, 38, 42, 43], "would": [32, 44], "wrap": [11, 31, 45], "wrapper": [0, 1, 11, 12, 14, 22, 24, 42, 43, 46, 52], "write": 32, "wrt": 32, "www": 31, "x": [4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 44, 45, 46, 47, 48, 49, 50], "x_c": [23, 44], "x_coord": 26, "x_fix": [20, 24, 45, 46], "x_l": [6, 10], "x_loc": 49, "x_sensor": 46, "x_y": 23, "x_y_z": 23, "xlabel": 44, "xtick": 44, "xxepnj0aqo": 48, "xy": [15, 22], "xy_to_colrow": [0, 21, 22, 42, 43], "xy_to_rowcol": [0, 21, 22, 42, 43], "xyz": 31, "xyz_to_lm": [0, 29, 31, 42, 43], "y": [15, 22, 23, 24, 26, 27, 31, 32, 34, 44, 45, 47, 49], "y_c": [23, 44], "y_coord": 26, "y_loc": 49, "yaml": 46, "yield": 47, "yiq": [31, 34], "yiq2rgb": 34, "ylabel": 44, "you": [32, 34, 44, 45, 46, 48, 50, 54, 55], "your": [48, 54, 55], "yscale": 44, "z": [22, 23, 32, 44], "z1": 38, "z2": 38, "z_3d": [0, 21, 23, 42, 43], "z_c": 44, "z_i": 38, "z_integrand": [0, 21, 23, 42, 43], "z_j": 38, "zero": [26, 31, 32, 34, 37, 44, 46, 48, 50], "zero_init_residu": 14, "zip": 44, "zone": 45, "zoom": [0, 29, 31, 34, 42, 43], "zoom_mat": [0, 29, 31, 42, 43]}, "titles": ["foveation package", "foveation.arch package", "foveation.arch.alexnet", "foveation.arch.architectures", "foveation.arch.convnextv2", "foveation.arch.dinov3", "foveation.arch.knn", "foveation.arch.knnalexnet", "foveation.arch.knnconvnextv2", "foveation.arch.knnresnet", "foveation.arch.knnvit", "foveation.arch.mlp", "foveation.arch.norm", "foveation.arch.polar", "foveation.arch.resnet", "foveation.arch.vit", "foveation.arch.wrapper", "foveation.demo", "foveation.paths", "foveation.probes", "foveation.saccadenet", "foveation.sensing package", "foveation.sensing.coords", "foveation.sensing.manifold", "foveation.sensing.policies", "foveation.sensing.retina", "foveation.sensing.saliency", "foveation.sensing.samplers", "foveation.trainer", "foveation.utils package", "foveation.utils.fastaugs package", "foveation.utils.fastaugs.functional", "foveation.utils.fastaugs.functional_tensor", "foveation.utils.fastaugs.loader", "foveation.utils.fastaugs.transforms", "foveation.utils.flops", "foveation.utils.knnprobe", "foveation.utils.lora", "foveation.utils.losses", "foveation.utils.lr_scheduling", "foveation.utils.std_transforms", "foveation.visualizer", "API Reference", "foveation", "Sensor manifold explanation", "Explore foveated sampling from images", "Building foveated deep vision models based on kNN-convolution", "Foveated ViTs and adapting pre-trained models (DINOv3)", "Get activations from a foveated model", "probably going to remove this", "Load pre-trained models", "Examples", "Welcome to foveation\u2019s documentation!", "Quickstart", "A biologically-inspired foveated interface for deep vision models", "A biologically-inspired foveated interface for deep vision models"], "titleterms": {"": [45, 50, 52], "1": [44, 45], "1b": 44, "2": [44, 45], "3": 45, "4": 45, "A": [54, 55], "accord": 44, "activ": 48, "adapt": 47, "alexnet": [2, 46, 50], "alias": 45, "an": 46, "angl": 44, "anti": 45, "api": 42, "arch": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "architectur": 3, "art": 53, "base": 46, "basic": [51, 53], "biolog": [54, 55], "block": 53, "build": [46, 53], "can": 48, "citat": [54, 55], "class": [45, 48], "cnn": [50, 53], "code": 53, "complet": 46, "compon": 52, "concept": 53, "convnextv2": 4, "convolut": [46, 51], "coord": 22, "core": [42, 52], "cortic": 44, "creat": 48, "data": 48, "deep": [46, 54, 55], "demo": 17, "diagram": 53, "differ": 45, "dinov3": [5, 47, 50, 53], "do": 53, "document": [52, 54, 55], "exampl": [51, 54, 55], "explan": 44, "explor": [45, 53], "fake": 48, "fastaug": [30, 31, 32, 33, 34], "fixat": 45, "flop": 35, "foveat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55], "from": [45, 48, 53], "function": [31, 44], "functional_tensor": 32, "get": [48, 52], "go": 49, "grid": 45, "how": 53, "imag": 45, "immedi": 53, "initi": 53, "inspir": [54, 55], "instal": [54, 55], "interact": 45, "interfac": [54, 55], "isotrop": 44, "knn": [6, 46, 51], "knnalexnet": 7, "knnconvnextv2": 8, "knnprobe": 36, "knnresnet": 9, "knnvit": 10, "learn": 53, "let": 45, "like": [46, 50], "load": [46, 47, 50], "loader": 33, "local": 44, "lora": 37, "loss": 38, "lr_schedul": 39, "magnif": 44, "manifold": [23, 44, 53], "mlp": 11, "model": [46, 47, 48, 50, 53, 54, 55], "modul": [0, 1, 21, 29], "network": 51, "norm": 12, "note": 41, "notebook": [54, 55], "now": [45, 48], "packag": [0, 1, 21, 29, 30], "paramet": 41, "path": 18, "perform": 45, "polar": 13, "polici": 24, "pool": 45, "pre": [46, 47, 50, 53], "probabl": 49, "probe": 19, "quickstart": 53, "refer": 42, "remov": 49, "resnet": 14, "retin": 45, "retina": 25, "retinaltransform": 45, "return": 41, "saccadenet": [20, 46], "saccadepolici": 45, "salienc": 26, "sampl": [44, 45, 53], "sampler": [27, 45], "sens": [21, 22, 23, 24, 25, 26, 27, 45, 51], "sensor": [44, 45, 53], "some": 48, "start": [52, 53], "state": 53, "std_transform": 40, "subpackag": [0, 29, 42], "thi": 49, "tool": [42, 52], "train": [46, 47, 50, 51, 53], "trainer": [28, 48], "transform": 34, "us": [45, 48], "util": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 52], "variabl": 44, "via": 44, "vision": [46, 54, 55], "visual": [41, 45], "vit": [15, 47, 50, 53], "we": 48, "welcom": 52, "work": 53, "wrapper": 16}})